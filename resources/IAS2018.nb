(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    364510,       7451]
NotebookOptionsPosition[    339004,       7088]
NotebookOutlinePosition[    339640,       7111]
CellTagsIndexPosition[    339597,       7108]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
IAS 2018 
Jouko Teeriaho
Lappland UAS\
\>", "Text",
 CellChangeTimes->{{3.51429998203125*^9, 3.51430001371875*^9}, {
   3.723113138590007*^9, 3.723113153872082*^9}, {3.7231866372440248`*^9, 
   3.7231866455100803`*^9}, {3.7231899958677087`*^9, 3.723190008149598*^9}, 
   3.723214373380335*^9},ExpressionUUID->"f8b88c0b-85e1-44e4-b27b-\
3ce5985429f4"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Elliptic Curve Cryptography with ",
  FontWeight->"Bold",
  FontColor->RGBColor[0., 0., 0.5098039215686274]],
 StyleBox["Mathematica",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.5098039215686274]],
 StyleBox[" implementations",
  FontWeight->"Bold",
  FontColor->RGBColor[0., 0., 0.5098039215686274]]
}], "Title",
 CellChangeTimes->{{3.514291189296875*^9, 3.514291243140625*^9}, {
  3.51429891103125*^9, 3.514298912953125*^9}, {3.514300035609375*^9, 
  3.514300058046875*^9}, {3.7231866093519506`*^9, 3.7231866256184235`*^9}, {
  3.723190854207039*^9, 3.7231908587541876`*^9}, {3.724150403992455*^9, 
  3.7241504189151325`*^9}},
 FontSize->36,
 CellID->201886283,ExpressionUUID->"42e264aa-9181-44ed-985d-2bc54b87c3c1"],

Cell[CellGroupData[{

Cell["1.  Structure of a modern cryptosystem", "Section",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.514291414109375*^9, 3.514291438078125*^9}, {
   3.514291752953125*^9, 3.51429175534375*^9}, {3.7231900733873653`*^9, 
   3.7231900871224546`*^9}, {3.7231901213273573`*^9, 3.7231901278589473`*^9}, 
   3.723269877366417*^9, {3.724150330907139*^9, 
   3.724150368596573*^9}},ExpressionUUID->"0f484225-e948-42b7-a6c7-\
357f3370b37a"],

Cell[TextData[{
 "Cryptosystem is a software which includes ",
 StyleBox["1) authentication",
  FontWeight->"Bold"],
 ", ",
 StyleBox["2) key exchange",
  FontWeight->"Bold"],
 " \n",
 StyleBox["3) symmetric encryption algorithm",
  FontWeight->"Bold"],
 " and ",
 StyleBox["4) digital signature algorithm",
  FontWeight->"Bold"],
 "\n\nFor 1,2 and 4  it uses typically public key algorithms like RSA or ECC \
\nand for 3 (data encryption) symmetric key algorithm (AES) "
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.723211025987067*^9, 3.7232113072360287`*^9}, {
   3.7232699118213377`*^9, 3.7232699432292166`*^9}, 
   3.724150330907139*^9},ExpressionUUID->"28eed01b-6e50-405c-b538-\
b23f3c7c6995"],

Cell["Functions needed of a cryptosystem like SSL", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.51429181115625*^9, 3.514291824578125*^9}, {
   3.7231132151097717`*^9, 3.723113221297601*^9}, {3.7231901389220223`*^9, 
   3.7231901461255026`*^9}, 3.724150330907139*^9},
 FontColor->RGBColor[
  0.27450980392156865`, 0.14901960784313725`, 0.058823529411764705`],
 Background->RGBColor[
  1., 0.8196078431372549, 
   0.6431372549019608],ExpressionUUID->"6f01a783-d5a1-4a3b-b49d-ce863fbbdc2a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3Tty5DgSgGFu7En2GnOHdvYIY8mbC+gIOoEuIL992XLllrUhszzdoDZX
uUJg+BJYCQIJ4P8iZoLNZuGRQJIgVWL/68+//v3nP6dp+o/898c/pul/2zcA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAvSmT2v0AepArH41qhwFwqnZq
/qB2eIDKTsqd9BQjc4F9Z2dE3kJIW4ym5OQ/r0AyF72qNcnLFE7mogPV53Ph
WkhbtMjJ1K1YIzkL/1xNVCe1ewgFEHM4M701w09kMCy3s9FnY7xFCYNwPgM9
N8lnxNClJmad/4Z5jh5atzrN3M60VprXRDDRkBanVluNbCiw8KzR6dRiU9uK
MFxpego13eYWG4+KWp82HbS80fajsA4mTB+Nb7cLKKCbedJTF1rvCM7Q0/To
rBcd9AW5TAu1W2TVX0e66REsupwMvXanp07hqF6nQcc96qxfSNH36Hffry57
h1XdD/oIXeu1g4iNMNyD9K7jPuL294Gu3ZYTDdXHvrs5rHHGd7Rudt/T0Qw1
sgP2dITODmK0MR2zs4P0t28Djuaw/R2ny10acxxH7vJQve7JsCM4eK9H63gH
Rh47Oj5g39s1+KjR92G7j+YMPl1JWDSEuUrCohVMVHhzxoTMUmb1TCFb4cHH
x8fT05Nu55qQWco8o2F3I1vhQTwJc03IPq6nsbzZ6qprqOh6vcolSefDw8PD
5XLR/atZOXt0oBvv7++/vshGKPb5+Vn/9vfv32Gn7pGLYHz8apnhI/JxOVL2
SCOlqVsNTizkx8bkQraeKl5HDeXx8VEnvGSBTAmZt7p/6xq63H55edHPSu7o
ftkjf3x7e5MUkI3X19f4eNmfWJckV3y8DtDRBkvtWohIaUwWZOupRg6InKkk
LyQL0jN0f1svZGF/yGJLOXc3WGo/1JgsTspWPfvJyVD3Lxcw2tnPz0/Zlv/H
/Q22VlNC9kvM9fw2C478lQR8q96d/bonLMBev2RcjA1FJ4DESi8xWbJ1WrCX
WaDBh2O3Le900qK0vyFVVxcwYTUi27qWmCXUbXtxEgrUjVlwQlJvLZx+XFDp
2UP/KuNibChnTPita2KWco4W0s21VaIRrm63jQWMXIam71sGvYDGl85gdXEy
K3ArOFsLJ8uCyvLZoWig5Nylp+LZJJf9q+ui/e1wqpydQo+WM7tv1bm61eCt
7f371uV2Fmdkq5JEW+5czny9kK3ejFsWJzv17u9P2b7vs0MJNxSaGiEIul8S
TU/X8f7pO3F2AhhWU+FZ7s7xW2XevhM2LmenwTuFhI+EnaeO/mzWZSkt7uBt
ewGjN4B6YZXtrdKW23dcW2OWBZXls4DRGdl6+z536fJgawGjSR0SfFna1uJk
/741fHyrXsuCyvJZwOikbL193aFIuulT39UFTFy7HjaztTi5fd3qSvkh35e1
q616Dy2oVk8CiZ+dLTMAi7zZepQ+PrJMZi5eGEfFbJULk651j347Sz6lP/rR
5ejqPS/Qn1rZqpXKajY8+k53uVz0BwHLJS7QsborYQDpyFagFWQr0AqyFRVN
kdptaQCxQkVMv0MI1yGEKyMurEcRrkOYYBkRyaOI2FFELBcieRQRO4qIZcEq
5Q5E7CimWRbE8A4E7Q4EzYgz3n1cBe16vYaXuoTXOjnEZDMievdxFbfw0p7Z
e9gcchW35rQePX3tSfl63cbNZ6sCt3Hzr+mVSfzW3PK1+4ybvmIr73vO82p6
ytXVdNymr5cnkK0xXRLrr5y75TN0/jUdN32nLtka6ErD/z8f4zB0/vWxJiFb
lb7e0PMaOOhj4hXWR8TI1tv3P4gjqdrKy1tcRa8JfUSMbL1Fb+ut3ZBUrqLX
hD4iRrbevl/33dAKs5V2OtHQyO4jW1vUzfQro5tYka2NIoDpiJURATQigOmI
lREBNCKA6YiVEQE0IoDpiJURATQigIl4ImdHAI2YhImIkh0xtCOGKYiSHTG0
I4YpiJIdMbQjhimIkh0xtCOGKYiSHTG0I4YpiJIdMbQjhimIkh0xtCOGKYiS
HTG0I4YpiJIdMbQjhimIkh0xtCOGKYiSHTG0I4YpJsCZ2jnhVO1hAdbVzgyn
ag8LMFc7J/wiRHbE0I4YpiBKdsTQjhimIEp2xNCOGKYgSnbE0I4YpiBKdsTQ
jhimIEp2xNCOGKYgSnbE0I4YpiBKdsTQjhimIEp2xNCOGKaYIrXb0ioCaMQk
TEegjAigEQFMR6yMCKARAUxHrIwIoBEBTEesjAigEQFMR6yMCKARAUzHEzkj
omfB9DuKcFkQPQuidxQRsyB6FkTvKCJmQfRQEvcOFoQOhTHl7kboUBhT7m6E
DoWduhjuezKTrSivbrZ+fHw8PT1lr7oAshXl1c3Wdic82Yrysi+G5Vr58PDw
/v4el3m9XmW/7pG/vVwuy6pXj3GLbEUVGSfey8uLlPP29qYboczHx0fNPklJ
2fnr16+46v1jfCJbUUXGy6ukWChkVqDcov7+/VtSMt6fcoxPZCtqyTX3tjJR
F8bPz8963Tx0jE8nZevOqezH44+Wn7dkFHP2tdWy7ZPDbE15wF43W9v9EYAr
U8RSTrhvfX19jUvTLJaLpvzV1oTcOsanAtl6xmfrBtb/sLYi1/STk6fk3eyZ
sPzx1xe5LZ3tl225Ud05xqe82br6IH1WvgZ2dhoM27Pz7dYD9tU2y8HhWYF8
Sv54qHa5YurASftDgT/+CGCrp6EZOiuE3BzpTpkY9lD3YRZM7MsYq60H6fF2
yjHxdspD+EASKuT49H3yTK9d9s9qSal9fzucXkLVeiqT08Xdce4M2ZouY6xS
bvaPPhC4pT2EjwuXI8PFsUDtieXMqpYTy2YcBzNFarfFu4yBssznre2Uh/CB
3oPoX4UF7dm1J2brtJAc1/4Rk0QZA3XGtTUxF2Ky+NRlpy5cz649sYVx1Zjh
JJYoY5S2HqTH20fvW1Mewge6XpWDPz8/p+/V5tm1682yHLPT67hqvUyzEp4h
YVPkDdHqg/RZ+T8+N055wL7aZknS8NxVPr71THi/9llLEn8EIGXKHe5+C8Mp
IjyvRqyPbD21CxVDVHdoOpgYnWn38hp/W6anbJXLkKwGb98/E5FLYZl6PdSO
HzWarcXaXDg+l8tFb/SqLAjr1o4f3X15Xf3mie5ZfulFyGH6UGL2LRr9NotO
Ermxun3dXk1/fwai9z7hSy+zNs8aHypKbFhifA4FBzjJHQm79c0TLWT5pRd9
ChH26yJWD9Zvs4QDZFsfMGqu6TFSne6Ujbii5bY+eHz7ktKw9OAkHg+c7eic
3PrmyVYSrf40LT5AHxhqFutXT+MvnYbjf/xuW/hyXWLDfkS2wpujl9dpId6/
vz0rJPxRM1qXwXd84/S+7fSeJh4PFHAoYbe+ebKVFD9eW2/fN8J6YQ1PI2cF
cm0FVPrM3PrmyVZSzO5bl7/9cfv+kboKT4H0j1Kd/q3xvnW5nTEm4yAmHhy6
vK5+82QnKcLXXbZ+szJugD4cDns0VePXEcTflllWFL5gMyt5tWGJMUk8vnuH
JglOVXcs9Ius4Sc1t4OZdQZmZoxU9abWcMgFV29vt377sgomZ4xoeFPl/KnV
yf3v7KUB1ecG8zPgwuoTgxIQCkWqesa4KKbojVRtAWN0I1uZBu1gpOj+4BFo
y+DjVb7vft5QNPjQN2rkUSvccT//fsHIg966YceucK/DL4OXqW7LsMPdjTFH
sGSX39/fZy8brGLMge5PE+N4vV7Dey3sbxYq2d/liwHLa2KIkcj/aGqqSs7G
v+F+t2KdvVwu8Ss1zq5ulf/BxVENjam9kcV6Kqm6/KcuSmpoWHFIEyOrv+tq
XAwX6+a0cHaNW7WXrBdlOB9ffbhq/wcayveRVMUZKl4LUujPLlu5ts5qLFmX
2xFEXs6H294qt12zcz52OIPnQZ+OvDp4qwSH/bLzPGo4m5/R17cmhn+mMH47
0x089CgvPyOFipxMA8lTTdjZi9TuU707eTkZI3gwLdRukVV/HemmR8iip1nR
WS866Auy62Z69NSF1juCU3UwT/pofLtdQEmtT5gOWt5o+1HFtFC7RQc03eYW
Gw8PllOoiVnUYlPbijB8Wp1OzmdUW41sKLBoQltTq5XmNRFMtKuJaea/YZ6j
h844n3Wem+QzYuie2xnoszHeooQBOZyN3prhJzLAzdmTEye1ewgFsGVrohae
rhVrJE/Rlv2pW2ACF66FPEUHas3nMoWTpOhVyUl+XoFkKEZz9uTPWwgZCtzS
MuKONEnPpjNqB7p3d+aWUTs8gFO1U/P/aocBaB7JCHSDfAQaQqoCAAAAAAAA
AAAAAAAAAAAAQLv+C6cncKs=
    "], {{0, 223}, {314, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{437.9999999999998, Automatic},
  ImageSizeRaw->{314, 223},
  PlotRange->{{0, 314}, {0, 223}}]], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.724150330907139*^9},ExpressionUUID->"2ede3199-7546-4827-ad0d-\
8a8afd722aab"],

Cell["\<\
Earlier standard:  RSA authentication, RSA Key Exchange, 
Sha256RSA digital signature,  AES block cipher

Today\[CloseCurlyQuote]s standard is based on Elliptic Curve cryptography, \
which provides
authentication, key exchange and digital signatures  \
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.7231132647687006`*^9, 3.7231134124329348`*^9}, {
   3.7231866859340577`*^9, 3.723186703028697*^9}, {3.7232699726406655`*^9, 
   3.723270044760803*^9}, 
   3.724150330907139*^9},ExpressionUUID->"35799c22-323e-401b-9e7b-\
8595423fab15"],

Cell["ECC reduces safe key lenghts 90% compared to RSA", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.51429181115625*^9, 3.514291885640625*^9}, {
   3.514547219390625*^9, 3.5145472351875*^9}, {3.723113255080677*^9, 
   3.72311325522131*^9}, {3.7231134408563795`*^9, 3.7231134457003946`*^9}, {
   3.72318671727944*^9, 3.7231867195451612`*^9}, {3.723270082684654*^9, 
   3.7232701293433294`*^9}, 3.724150330907139*^9},
 FontColor->RGBColor[
  0.27450980392156865`, 0.14901960784313725`, 0.058823529411764705`],
 Background->RGBColor[
  1., 0.8196078431372549, 
   0.6431372549019608],ExpressionUUID->"91d99a90-605c-4c05-ba6d-bcc5a571ca0b"],

Cell["\<\
EU recommendation from 2008 shows how large keys RSA needs to provide security
Increasing of safe key lenghts means performance and capacity problems.\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.514292609390625*^9, 3.51429274553125*^9}, {
   3.5145472585*^9, 3.514547265578125*^9}, {3.515036275796875*^9, 
   3.515036314375*^9}, {3.7231134574197755`*^9, 3.7231134907965794`*^9}, {
   3.723113536689685*^9, 3.7231135861298575`*^9}, {3.723186749156062*^9, 
   3.723186834457405*^9}, {3.7232113525665135`*^9, 3.7232114006627636`*^9}, 
   3.724150330907139*^9},ExpressionUUID->"d85df427-2e9d-49ed-b56b-\
2e3677653e17"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Z/rtcd+DGIZp824BjOj8YPVMvz3uexDDzTsBmI3OD1/P9NvjvkMxbK+TG0bn
B6tn+u1x31wM9VrAztH58eqZfnvcq4ihXOibJ4aeE+CA0Pkh65l+e9zxogag
BO1FBOh3yx1iCJSgvYgA/W65QwyBErQXEaDfLXeIIVCC9iIC9LvlDjEEStBe
RIB+t9whhkAJ2osI0O+WO8QQKEF7EQH63XK3iyESEhJSDwkjQ2AGhuaGB6Df
LXdMk4EStBcRoN8td4ghUIL2IgL0u+UOMQRK0F5EgH633CGGQAnaiwjQ75Y7
xBAoQXsRAfrdcocYAiVoLyJAv1vue/iI/GH16mG1Fr0B+uBuxCZi6FU5rF7d
pLW77aLdNgz0wX0qIIaFjW94p9Ub9uDBFyn7p0+Pbt++zmfajRvXTk7uKn5e
vLgf9XNx8fjOnZvs5Pj41suXT0B/J9x//vrm958NhLDo1/OHrx7d+vHzK2xA
lpTjGrz/4d5PX13nUtqgnwsxWuIbKMPHlLL3DPRairdokestesjsDYvuKNyd
pXke2VRjom3QMxc6MYywN+D09F6qwaIDbqLMqB+K8agfkoLQyX4EoT36du6/
nN1nKQvF8PU3X0iRC1E8kUEXlLkEo+piOATamO1GpZbiTTHT2xBtVblz3YP8
NO5odtHKMO6dBioSoV4Rj5co9iVyz84eXr16hTKpKHRFA6eoHx4U0RCLf9IG
/aRM0N+Wu6uEnhj++1+PRdw+vH82OtrIcid1Rf1EG6moOqPlvo6ndJdultKN
eUWWJlXZUWHzdNGeIe/rILtrikoObREEz4BLvUwe51CRl0/RzfbRTtD/yIL+
ytx/e/1EZsdRMRTpI1WUTKoiQkfTZ0/6RB6pqDqj5sVQb2G0be5ZtJoYKm3I
UtizGA6XF8FevLg/TgzP0JhHO3zFzKIqUT0B/dW4u7PaqBgqFxIZUpF0lXNo
Y7mZ8s7FMEwpz4VimPKv76i8eV7bUk6iZuF+10d216wDbsstbvnKmHvdjCaP
w8eZY9TPycndIZgn6isRoL8od1kQGR1hDA1I1n49f3j+5TXapv/fPT/yDKK1
FAmdjZ2Lof1A6LU409ge3Vvd5s3Q8A2lz8JUNzba86SSFIB/vn37jAY5Ig4p
PxT7MotcQQk7p5/lQion01tF1mQdOVwfgRjOE6I9iOGMoipiuKE8LqEGPBN0
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
    "], {{0, 385}, {431, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{496.3333333333331, Automatic},
  ImageSizeRaw->{431, 385},
  PlotRange->{{0, 431}, {0, 385}}]], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.724150330907139*^9},ExpressionUUID->"a952f2f8-5838-4dd0-80a9-\
b75844cccfe2"],

Cell[TextData[StyleBox["=> ECC (Elliptic Curve Cryptography) provides equal \
security \nwith much smaller key lengths than RSA.", "Text",
 FontColor->GrayLevel[0]]], "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.51429181115625*^9, 3.514291885640625*^9}, {
   3.514547219390625*^9, 3.5145472351875*^9}, {3.723113255080677*^9, 
   3.72311325522131*^9}, {3.7231134408563795`*^9, 3.7231134457003946`*^9}, {
   3.723113603693307*^9, 3.723113659540075*^9}, {3.723190181564865*^9, 
   3.723190192284148*^9}, {3.7231902567869368`*^9, 3.7231902582714205`*^9}, 
   3.724150330907139*^9},ExpressionUUID->"db102dc3-33b8-4ee6-b092-\
a819e274e24f"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.  Algebraic concepts ", "Section",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.514291414109375*^9, 3.514291438078125*^9}, 
   3.5142917470625*^9, {3.7231868968825254`*^9, 3.723186908773752*^9}, {
   3.7231901011231833`*^9, 3.7231901109049406`*^9}, {3.723270170501715*^9, 
   3.72327017462693*^9}, 3.7241494501675153`*^9, 3.724150262294258*^9, {
   3.724150371268585*^9, 3.724150371487382*^9}, {3.72415044877604*^9, 
   3.724150453776295*^9}},ExpressionUUID->"ab319e77-ad37-4f37-9efe-\
a1cec53c6efc"],

Cell[TextData[{
 "ECC belongs to a larger family, called ",
 StyleBox["cyclic group cryptography",
  FontWeight->"Bold"]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.723270196518694*^9, 3.72327032624419*^9}, 
   3.724150262294258*^9},ExpressionUUID->"8026747b-0de5-40c1-89da-\
58fbd74b156e"],

Cell[TextData[StyleBox["Groups",
 FontColor->RGBColor[
  0.38823529411764707`, 0.20784313725490197`, 
   0.0784313725490196]]], "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.51429144696875*^9, 3.51429145609375*^9}, 
   3.51429149175*^9, 3.5145473374375*^9, 3.724150262294258*^9},
 Background->RGBColor[
  1., 0.788235294117647, 
   0.5764705882352941],ExpressionUUID->"c1ad1086-63b0-42d5-8bc9-aeb6f94f9ee1"],

Cell[TextData[{
 StyleBox["A set G  together with an operation * defined in G, is called a \
group if",
  FontWeight->"Bold"],
 "\n\nG1    ",
 StyleBox["a*b \[Element] G",
  FontColor->RGBColor[1, 0, 0]],
 "  \t\t\tfor all a, b \[Epsilon] G\nG2    ",
 StyleBox["a*(b*c) = (a*b)*c",
  FontColor->RGBColor[1, 0, 0]],
 " \tfor all  a,b,c in G\nG3    There ",
 StyleBox["exists a \[OpenCurlyDoubleQuote]neutral element\
\[CloseCurlyDoubleQuote] e ",
  FontColor->RGBColor[1, 0, 0]],
 "\[Element] G  with property  \n\t",
 StyleBox["a*e = e*a = a",
  FontColor->RGBColor[1, 0, 0]],
 "  for all a \[Element] G    \nG4    For every a \[Element] G , there ",
 StyleBox["exists  ",
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontColor->RGBColor[1, 0, 0],ExpressionUUID->
  "d862e66a-65e2-4acc-b79c-1b97593bfb21"],
 StyleBox["\[Element] G  with property a*",
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontColor->RGBColor[1, 0, 0],ExpressionUUID->
  "d67af0fd-d366-4e2e-b7a1-55c2fba66ec7"],
 StyleBox["=",
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontColor->RGBColor[1, 0, 0],ExpressionUUID->
  "df6a95d6-9ad3-4c36-b409-2bc61d65eaad"],
 StyleBox["*a = e",
  FontColor->RGBColor[1, 0, 0]],
 "    \n( inverse element)"
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.514292768484375*^9, 3.514293155515625*^9}, {
   3.51454735165625*^9, 3.514547359046875*^9}, {3.514554888515625*^9, 
   3.514554896765625*^9}, 3.515036337921875*^9, {3.7232121160285454`*^9, 
   3.723212140514194*^9}, 3.724150262294258*^9},
 Background->GrayLevel[
  1],ExpressionUUID->"de9c2585-7ac9-4e76-8f91-bbebef74cc33"],

Cell[TextData[StyleBox["Commutative groups are called Abelian groups",
 FontColor->RGBColor[
  0.4745098039215686, 0.25882352941176473`, 
   0.10196078431372549`]]], "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.514293275625*^9, 3.51429328228125*^9}, {
   3.7231902841477685`*^9, 3.7231902912731376`*^9}, {3.7232704137643642`*^9, 
   3.72327042554623*^9}, 3.724150262294258*^9},
 Background->RGBColor[
  1., 0.788235294117647, 
   0.5764705882352941],ExpressionUUID->"6a15c21f-e87a-4c70-8811-afcee21360ee"],

Cell["\<\
If  a*b = b*a for all a*b \[Element] G, G is called an \"Abelian group\"  \
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.514293134171875*^9, {3.51429320821875*^9, 3.514293229421875*^9}, {
   3.515036346875*^9, 3.5150363499375*^9}, {3.723211985803026*^9, 
   3.723211987850009*^9}, 
   3.72415026230987*^9},ExpressionUUID->"cd51fb53-845f-4a67-940b-\
40204a529267"],

Cell[TextData[StyleBox["Finite groups have finite number of elements",
 FontColor->RGBColor[
  0.396078431372549, 0.21176470588235294`, 0.0784313725490196]]], "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.514293134171875*^9, {3.51429324121875*^9, 3.514293257515625*^9}, {
   3.514293378265625*^9, 3.5142933888125*^9}, {3.5142934428125*^9, 
   3.5142934475625*^9}, {3.514293477875*^9, 3.514293489890625*^9}, 
   3.514293660796875*^9, 3.514547499*^9, {3.723190298757884*^9, 
   3.7231903057895174`*^9}, 3.72415026230987*^9},
 Background->RGBColor[
  1., 0.788235294117647, 
   0.5764705882352941],ExpressionUUID->"22f8fd36-e58a-4147-b46d-33ac85cc2177"],

Cell[TextData[{
 "Let n = #G = number of elements in G  . Then\n\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["g", 
    RowBox[{" ", "n", " "}]], TraditionalForm]],ExpressionUUID->
  "1b787372-123c-448b-8c01-28076bcd0e5a"],
 "  =  e   for  all  g \[Element] G                   "
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.514293134171875*^9, {3.51429320821875*^9, 3.514293229421875*^9}, {
   3.514293333078125*^9, 3.514293375859375*^9}, {3.514293406296875*^9, 
   3.514293468015625*^9}, {3.514293629734375*^9, 3.514293676421875*^9}, {
   3.51455482509375*^9, 3.51455483353125*^9}, 3.72415026230987*^9},
 Background->GrayLevel[
  1],ExpressionUUID->"69393ba8-0b9e-4762-b898-71c3a8df40e7"],

Cell[TextData[StyleBox["Subgroups is a group within a group",
 FontColor->RGBColor[
  0.41568627450980394`, 0.2235294117647059, 
   0.08235294117647059]]], "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.51429144696875*^9, 3.51429148653125*^9}, 
   3.5142935185*^9, {3.723190310930375*^9, 3.723190318337044*^9}, 
   3.72415026230987*^9},
 Background->RGBColor[
  1., 0.788235294117647, 
   0.5764705882352941],ExpressionUUID->"45c6accd-1355-4caf-b715-b92fd4991bc5"],

Cell[TextData[{
 "A subset  H  of a group G , where H is self a group,  is called a ",
 StyleBox["subgroup",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " of G"
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.514293134171875*^9, {3.51429320821875*^9, 3.514293229421875*^9}, {
   3.514293333078125*^9, 3.514293375859375*^9}, {3.514293406296875*^9, 
   3.514293468015625*^9}, {3.51429353228125*^9, 3.514293590578125*^9}, 
   3.72415026230987*^9},
 Background->GrayLevel[
  1],ExpressionUUID->"68f51312-fa1b-4e93-a1f9-ca5d388669f7"],

Cell[TextData[StyleBox["Lagrange's theorem gives possible subgroup sizes",
 FontColor->RGBColor[
  0.4196078431372549, 0.22745098039215686`, 
   0.08627450980392157]]], "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.51429144696875*^9, 3.51429148653125*^9}, 
   3.5142935185*^9, {3.51429360540625*^9, 3.514293611890625*^9}, {
   3.7231903430414543`*^9, 3.723190370542884*^9}, {3.7232122052831907`*^9, 
   3.723212205923849*^9}, 3.72415026230987*^9},
 Background->RGBColor[
  1., 0.788235294117647, 
   0.5764705882352941],ExpressionUUID->"01ff0a76-7b51-42f4-98ba-a982c65b3e9c"],

Cell["\<\
The number of elements of a subgroup H of a finite group G  divides the \
number of elements of G
\t\t
\t\t#H = #G / d        for some integer d\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.514293134171875*^9, {3.51429320821875*^9, 3.514293229421875*^9}, {
   3.514293333078125*^9, 3.514293375859375*^9}, {3.514293406296875*^9, 
   3.514293468015625*^9}, {3.51429353228125*^9, 3.514293590578125*^9}, {
   3.514293698703125*^9, 3.5142937925625*^9}, {3.514554860078125*^9, 
   3.514554875828125*^9}, 3.7231869489946103`*^9, 3.72415026230987*^9},
 Background->GrayLevel[
  1],ExpressionUUID->"0b1d460f-02b0-4497-a895-a7de8c70ad06"],

Cell[TextData[StyleBox["Cyclic groups are groups derived from one elements",
 FontColor->RGBColor[
  0.44313725490196076`, 0.24313725490196078`, 
   0.09019607843137255]]], "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.51429144696875*^9, 3.514291511328125*^9}, {
   3.7231903811059046`*^9, 3.7231903978880544`*^9}, 3.72415026230987*^9},
 Background->RGBColor[
  1., 0.788235294117647, 
   0.5764705882352941],ExpressionUUID->"8569c129-1a59-46d5-8e37-d3ab73a97746"],

Cell[TextData[{
 "A finite group G of n elements is cyclic , if  there exist an element  ( or \
elements) g \[Element] G  with \n\n\t\t{ g, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["g", "2"], TraditionalForm]],ExpressionUUID->
  "ce71ec6a-a5f4-48d3-87e2-977dd5ff1a3b"],
 ", ... ,   ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["g", "n"], TraditionalForm]],ExpressionUUID->
  "fe2b6005-344b-491d-a83e-e67200aa0180"],
 " = e}  = G\nElement ",
 StyleBox["g",
  FontWeight->"Bold"],
 " is called a \"",
 StyleBox["generator\"",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "  of  group G  \n\n",
 StyleBox["(Comment:  Fact that ",
  FontSize->18,
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["g", "n"], TraditionalForm]],
  FontSize->18,
  FontColor->RGBColor[0, 0, 1],ExpressionUUID->
  "2b709433-814e-4f82-a186-d94fe8eb741b"],
 StyleBox["= e  is called Euler\[CloseCurlyQuote]s theorem)",
  FontSize->18,
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.514293134171875*^9, {3.51429320821875*^9, 3.514293229421875*^9}, {
   3.514293333078125*^9, 3.514293375859375*^9}, {3.514293406296875*^9, 
   3.514293468015625*^9}, {3.51429353228125*^9, 3.514293590578125*^9}, {
   3.514293809203125*^9, 3.51429397978125*^9}, {3.51429401278125*^9, 
   3.5142940295*^9}, {3.5145475613125*^9, 3.51454756584375*^9}, 
   3.514773967296875*^9, {3.72311369505762*^9, 3.723113712761702*^9}, {
   3.723186977464842*^9, 3.72318698023061*^9}, 3.7232122296438313`*^9, {
   3.7232123023663607`*^9, 3.72321234229031*^9}, 3.72415026230987*^9},
 Background->GrayLevel[
  1],ExpressionUUID->"98288355-8318-497d-9459-ac277fa74256"],

Cell[TextData[StyleBox["Order of an element ",
 FontColor->RGBColor[
  0.4470588235294118, 0.13725490196078433`, 
   0.0196078431372549]]], "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.514550043390625*^9, 3.514550053640625*^9}, 
   3.72415026230987*^9},
 Background->RGBColor[
  1., 0.788235294117647, 
   0.5764705882352941],ExpressionUUID->"3866f8c8-8d4a-43de-ad70-ee6c12c39f2d"],

Cell[TextData[{
 "The subgroup generated by element a is denoted by ",
 StyleBox["<a>",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 ". \nIts size is called ",
 StyleBox["order of a, Ord(a)",
  FontColor->RGBColor[1, 0, 0]],
 "\n\nThus for generators of G,   Ord(g) = #G  (size of G)"
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.5145500153125*^9, 3.514550073484375*^9, 3.51477367321875*^9, {
   3.5147737063125*^9, 3.51477371546875*^9}, {3.7231869968408313`*^9, 
   3.7231869995128627`*^9}, 
   3.72415026230987*^9},ExpressionUUID->"11bafe81-7eff-4533-95e9-\
e069d7ed5a5d"]
}, Closed]],

Cell[CellGroupData[{

Cell["3.  Cyclic groups on Elliptic curves", "Section",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.514291414109375*^9, 3.514291438078125*^9}, {
   3.514291524875*^9, 3.51429153853125*^9}, 3.51429174865625*^9, {
   3.514291910484375*^9, 3.5142919378125*^9}, {3.51430013140625*^9, 
   3.51430013628125*^9}, 3.7241495263971415`*^9, 
   3.724150373909382*^9},ExpressionUUID->"c399b633-edc0-4aea-9f20-\
06a8a01ff2ef"],

Cell["\<\
For a long time mathematicians have known that there exists group structures \
on certain curves.
Cryptography has found specially groups on Elliptic Curves useful.\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.51429658909375*^9, 3.51429670325*^9}, {3.5142969525*^9, 
   3.514297067890625*^9}, {3.51454909365625*^9, 3.514549105953125*^9}, {
   3.723113797844392*^9, 3.7231139099754868`*^9}, 3.7241495263971415`*^9},
 Background->GrayLevel[
  1],ExpressionUUID->"47448149-43fd-46a2-9ff0-7aa9f82164d6"],

Cell["Definition of Elliptic Curves", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.514291553890625*^9, 3.5142915609375*^9}, {
   3.514291946796875*^9, 3.51429197503125*^9}, {3.72318706714138*^9, 
   3.7231870758762093`*^9}, 3.7241495263971415`*^9},
 FontColor->RGBColor[
  0.34509803921568627`, 0.18823529411764706`, 0.07058823529411765],
 Background->RGBColor[
  1., 0.7843137254901961, 
   0.5686274509803921],ExpressionUUID->"d1204d5b-b8e6-4cd9-8f88-ba4d9449fe9a"],

Cell[TextData[{
 "In the 1880's Weierstrass explored curves of form \n\n\t\t",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "2"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"b0d003eb-e7af-470f-bc72-09f1ea3f3a7d"],
 StyleBox[" + A xy  =  ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"d68cd09c-1c46-4214-898c-18fb80c251b8"],
 StyleBox["  + B ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"e215b009-2731-439e-9a07-4930201f1089"],
 StyleBox["  + C x +   D",
  FontWeight->"Bold"],
 "\n\nThey are called ",
 StyleBox["elliptic curves",
  FontColor->RGBColor[1, 0, 0]],
 "."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.51429658909375*^9, 3.51429670325*^9}, {3.5142969525*^9, 
   3.514297209234375*^9}, 3.7231870455933857`*^9, 3.7241495263971415`*^9},
 Background->GrayLevel[
  1],ExpressionUUID->"460ae34b-179c-42b3-a7f3-cbcbe11031d4"],

Cell["Elliptic curves used in cryptography", "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.514297229578125*^9, 3.5142972385*^9}, 
   3.51454914671875*^9, 3.7241495263971415`*^9},
 FontColor->RGBColor[
  0.34509803921568627`, 0.18823529411764706`, 0.07058823529411765],
 Background->RGBColor[
  1., 0.7843137254901961, 
   0.5686274509803921],ExpressionUUID->"4345fbe1-40d7-4b04-a5b1-7f9988bdd911"],

Cell["\<\
By simple coordinate transformations it is possible to reduce the form of \
elliptic curves to following\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.514297246140625*^9, 3.514297308671875*^9}, 
   3.7241495263971415`*^9},ExpressionUUID->"438e65d5-3d3a-49d4-bf2b-\
c11bcc4f7b23"],

Cell[TextData[{
 "\t\t",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "2"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"45a28cf5-1528-434a-b067-2cec2020a9f7"],
 StyleBox["  = ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"1c6fa77b-e9ee-496b-9f84-6df08e1251ac"],
 StyleBox["  +  a x +  b",
  FontWeight->"Bold"]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.51429658909375*^9, 3.51429670325*^9}, {3.5142969525*^9, 
   3.514297209234375*^9}, {3.51429729175*^9, 3.514297320203125*^9}, 
   3.7241495263971415`*^9},
 Background->GrayLevel[
  1],ExpressionUUID->"b80e6c85-7063-433d-87b7-5250a0d3e8a8"],

Cell["\<\
Animation of elliptic curves shows how elliptic curves look like\
\>", "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.51429753684375*^9, 3.514297544390625*^9}, {
   3.514297634359375*^9, 3.5142976410625*^9}, {3.7231904544847507`*^9, 
   3.7231905014246902`*^9}, 3.7241495263971415`*^9},
 FontColor->RGBColor[
  0.34509803921568627`, 0.18823529411764706`, 0.07058823529411765],
 Background->RGBColor[
  1., 0.7843137254901961, 
   0.5686274509803921],ExpressionUUID->"8783d168-5bb5-4cb1-9303-ef448b54ed80"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     FormBox[
      RowBox[{
       SuperscriptBox["y", "2"], "==", 
       RowBox[{
        SuperscriptBox["x", "3"], "-", 
        RowBox[{"3", " ", "x"}], "+", "b"}]}],
      TraditionalForm], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.466590976046875*^9, 3.46659106603125*^9}, {
   3.46659110421875*^9, 3.466591192546875*^9}, {3.46659129009375*^9, 
   3.466591301375*^9}, {3.466669366015625*^9, 3.46666936834375*^9}, 
   3.7241495263971415`*^9},ExpressionUUID->"514ced7a-0f91-440e-84d0-\
8accef3a8c71"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 3.7200000000000006`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`b$$], -5, 5}}, Typeset`size$$ = {360., {173., 186.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`b$368$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`b$$ = -5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`b$$, $CellContext`b$368$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ContourPlot[$CellContext`y^2 == $CellContext`x^3 - 
         3 $CellContext`x + $CellContext`b$$, {$CellContext`x, -3, 
         5}, {$CellContext`y, -5, 5}, Axes -> True], 
      "Specifications" :> {{$CellContext`b$$, -5, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{417., {233., 243.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.7231139553529043`*^9, 3.723212470171961*^9, 
  3.7241495263971415`*^9},ExpressionUUID->"bcdfbca7-0bb1-49ed-a954-\
63e90820cc12"],

Cell["\<\
Curves, where the right hand side polynomial has double roots, have no group \
structure. (see picture below)\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.514549204953125*^9, 3.514549228015625*^9}, {
   3.5145492990625*^9, 3.514549414046875*^9}, {3.515038226125*^9, 
   3.51503822646875*^9}, {3.515038281*^9, 3.515038288828125*^9}, 
   3.7241495263971415`*^9},ExpressionUUID->"5fa1f2a0-9f15-4598-87ea-\
cdc1c2edae1f"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
Ga1nFVLPqHi/8b8/Uvod
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {Hue[0.67, 0.6, 0.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
        103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
        117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 
        131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 
        145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 
        159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 
        173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 
        187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 
        201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 
        215, 216, 217}], LineBox[CompressedData["
1:eJwl0lV0EAQYBeANkO5uHI0CEtJt0CEDpBFGCBKT7i6LTqWlU0G6RRoUpFnB
GN3d9XF4+O7/eu85f1BIaHCXwICAgGQizA0ngkiiOMd5orlADBe5xGWucJVr
XOcGN7nFbe5wl3vc5wEPecRjnvCUZzznBS95xWveEKBbILGITRw+IC7xiE8C
EpKIxCQhaeD7XclJQUpSkZo0pCUd6clARjKRmSxkJRsfEkR2cpCTXOQmD3nJ
x0d8TH4KUJBPKERhilCUTylGcUpQklKUpgxlKUd5KlCRSnzG53zBl1SmClWp
RnVqUJNa1KYOX1GXYOpRnwZ8TUMa0ZgmNKUZzWnBN7SkFSG0pg1tace3tKcD
39GRTnTm3WOF8j1d6UZ3etCTXvSmD33pR38GMJBBDGYIQxnGcEYwklGM5gd+
5Cd+5hfGMJZxjGcCE5nEZKYwlWlM51d+YwYzmcVs5jCXefzOfBawkEUsZglL
WcZyVrCSVfzBn6xmDX+xlnWsZwMb2cRmtrCVbWxnBzv5m138w272sJd97OcA
BznEYf7lP45wlP85xnFOcJJTnOYMZwkjnAgiieIc54nmAjFc5BKXucJV3gIr
F49c
        "]]},
      RowBox[{
        SuperscriptBox["y", "2"], "\[LongEqual]", 
        RowBox[{
          SuperscriptBox["x", "3"], "-", 
          RowBox[{"3", " ", "x"}], "+", "2.`"}]}]],
     Annotation[#, Global`y^2 == 2. - 3 Global`x + Global`x^3, "Tooltip"]& ]}],
  AspectRatio->1,
  Axes->True,
  Frame->True,
  ImageSize->{207., Automatic},
  PlotRange->{{-3, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.7241495263971415`*^9},ExpressionUUID->"c41d3e32-884e-400b-b090-\
64dff1b2de91"],

Cell["Group operation between points of the curve", "Subchapter",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.51429775890625*^9, 3.514297772671875*^9}, {
   3.7231871417858505`*^9, 3.7231871566616592`*^9}, 
   3.7241495263971415`*^9},ExpressionUUID->"3c41716d-53d7-4c8b-bc85-\
4b85e3e895a6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
3b/xVcxltmudgyR6UvZQVAQ3fZr6OcKrU3anq/9EeCGaIXU3vYewr5gmt+nX
pyi5ZYKx+eY5/0Zjm5sT8DyXFV4oP9JIdAcd5hn1rSF32R034oU5nJrs9PIl
DHEpBBq1INQk0giF94Ly8UF4UVHflHA8BdrTmrPVhhDKiiZ0a+oRCmfO0Kg4
0fITD0VFcNOnqZ+jY/KV0GBpL67wQjSrFN30Hh7NbRX7jc03z/k3Gv8g7CXQ
8RYAz2WFF8qPNBLdQYd5Rn1ryF02yo14+inYkDtu7CUMcSk8wp4o9cvJPm4L
7wWN8aI4RWVDNPmHBLJvW7UcOpEinAyjXraFVUx9NxKXt1iEcMxL9BMDoyK4
6dPUzxFaS1l+1NdtGVtVXSIcqaQ53+WiM0p7jM033/o3xpUHU6cyZwUlhkSi
I2ajvjXkLhvlRmgscQcvXMtz9ZEmNuFjsvrSS9nHbco9N5SCdDhMfbe9ai88
9OWn+qiiDodjlMN0+ROXEbrjKPR5WpVfGVtVPfFzQ5yDsfnmW/+m7ydu/tY7
WeGmMe7jzp3y8l32vhvRhxf6UnxbH4WPydIhFfXBFNHl9AVRhDRb65D1tjSp
q1ro3tlJvXAaWHm97we87yhUfmVsVfXEzw1xDsbmm7GZZnieeOK33skKN41x
H3fulJfvsvfdiD7UH/8Nwef1UaXblj9OswOSviCNk+wT4vKHnn4nu/eh2bZX
KahM9jCw8nrfD3jfUaj8ytiq6omfG+IcjM03YzPN8DzxxG+9kxVuGuM+7twp
L99l77sRfQjH092cm6okV3xeH4VzPoVGCgdTlNIuvJy+oGQVqA64qPr4god2
mPcVHspJHWPQStEaGBXNtzQnGGutcPDd01tJuESr/ZVk/oYo33zr34SG6dgP
oTJnBSWGRKIjZs99K8XlXXbHjQiPe3o0X32/CHr4rnJoIkVtt2/rI3NrGoVD
KsJOBqNexqQDuHRgYIrSps3V5sVtQmVLnyiaX2mdY6+y8N/AqAguy487jsKj
61NoYnOzdmgdzHU/t6XX9fL6FE2SSeuanUq1PoUmKkO8q+dctDuFzct32Sg3
4oVdGoQSV/er+oRd5V6rj/TmCVtzaVQqQsvL9yIy0kKzL3pVRNiTQ6+iaR7f
tK4fF60S8lBUBJfF1R1H4dH9N2hic9PVa81tTftvqMTjw/03NC3p1ZonOl6h
VZm3IqHEkEh0xGzUt4bcZaPcCI0xbm75paPISVHZx9tz9ZHePOFjMhlSEQ6m
qDxuCzNH3xvxdCDaQd07F/Uo6rN21RF2Q8lKPmGZoVkSKBrD8lBUBJf30R1H
4dH9RWlic7OUat3N1f3cJnhuU02XjySaNojTusOtjqfFyrzVKiWec5XuFDYv
32Wj3AiNMVrPFyHaQ0BHoVV/yvNcfaS3UPiYTNo7YSumItJ05C2kUVb+wWc4
Asdp4vFcJfIJ7kxLdrlmmbm1JVLXzNItUDwXFeNhvcG48fILQyqX+6VUmNvq
et6Q3OYxMN/oXwEj8rQuk+AyT9x8mQXBwKzwfvkxKhIdMRv1rSF32UA34vKx
mt5DKiHsw9fagS8aVJUa4Ln6qMlO0c5d9OkV3gua7BWmV1h/hcfVh0rVJ/VV
Rfg81Jcclz8X9Qgp3SbRabKlyMCoGM/rDfqXhIqUvOyZ3m8vKN8Pa1RuK13X
nXwTNcFKj1RwXLoQXj0J6nkiMkz36kIDs8L75ceoSHTEbNS3htxlN90I5fth
GerSro6ooYcmmHJcRrqbhPSHnquPmtIoekymr6ea3vssmvYp1BUimaqSw8Ic
qwavpKfpoFCH5n6Jch5yWHgm3AjRxBiVUmRgVC6LK03RUo9EVGvAWuGucfAB
/hSNRLjzlkl3zpdFZBvkrbDWGJvbQozKN9FLusl9FPYSC5Og6ZVzSnkCVxQV
UTfXzhuVFT4pP4ZEoiNmo7415C4b7kbIHlB8GYDyLC0D7pQ60Vwsmrd7SHs4
ZbtiPFcftaaR0mtJkdY1SKlQOMFnyEDpLRNGIuoIgpPhJ8JIyICLqIxVg9e6
CVOk4xWWzK0D/Ur9UTQbqZHgctqhgVG5LGlKjalQjhplLR+MWo3lTmUU2q/J
eKOcg4H5Rr9rrqb5aZTRQircXMZoVFb4pPzoKzw0Jcqdwublu+y+G9G6GaP7
pU5qM2SFqE1kKtpWaS6pPLp6qD5qTaB0ly3KuYs66qPs7aDZ5osyS6sKRi24
FhYhJbdPc5uIXHFZioyKyuWFZF+p0/LWbhxDrOWLpcoELa2Vy53KKET6SKJU
HYx1Dkblm2zfrNI9pU8CjXlQL3QvKjQ8K3xSfmhspgyazDPqW0PusiFuBBpf
Q6oDPUq7QLgM6l0rHqqPWlMnEjMttQx6apIcKsWDPoerx0pYrYutlBD2JKjI
MNB4SlJfWEppSpEhUdFcSLZICJWw+9a6zDf6C7lzvgpQX1SqBt/darhzMCTf
aOzne/Y0JUE9WmPfHu5+Vvik/KgbrCloMs/Abw25y5XHjWhC1EVME2gyxEP1
UStCzaBj7iLNjtwub4fLHCbjNTpSVwkxZHcX5tZ+Epc3Dk6Gu8CXNzgf6p2w
m46+FLkZFeWFgoNNwmoOelWroyCQTWshKuEMW/iT8j2AWiuXm5VRCjgBsoCL
j5YYL72i7l0WZXEz30T2C0uLyH6XRsp+K9qWR4dh9LiTFT4pP/TtlMugyTzD
v3X/LhvlRsDpkTIgdLnwJ7RKnih14E4pe/7BBk2NiIfqIz3ubzZCZk+B2UKv
SO4sffFQj0SHVQhS7RGu26p+bxciGC7hkEoI3mUppE2ERlnUwQLNokcFNoIg
NQRNGxUKx0OrwdQmWbAlqgngXUYQBPEyQsfrUnIIH3yqazcgtkQ1AbzLCIIg
XkYoIdQXi4mmTlXXzlVsiWoCeJcRBEG8jGglLNllSDglDD7DEdGC+uo6mMJg
S1QzwLuMIAjifeg35+Hnj/naZA+CLVFNAO8ygiCI99G0s42/f6AhGw1VWrAl
qgngXUYQBPEVNDvbGLu9VeUEW6KaAN5lBEEQH1JQUBoYmCLcaaplzduUBlui
mgDeZQRBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEKTq
4schPX78+HH3I6khSJOvKUM8l3uabqIhuJ+WTZs29ezZk8QDnw2JE/EO0nvn
fQwpLR6qOFiSPYfsLfNohmsqJN43r3Iim+QJEyZoyocamG9CKqfe0HoTDcHN
tEAj5SeAVNIaXrqqCrL3zvu4X1o8V3GwJHsIpVvmuQzXVEi8b16lRTbJNTAf
jKUy6A2f3EQ3L0qejn3VVCHuUG3uHXq/KofSLfPcrTTEw9fAkoZ6wxOg3vDJ
zxEfUm3uXbVJSM0B9UZVAfWGJ0C94ZOfIz6k2ty7apOQmgPqjaqCKMl+cmiN
BLhw4cK8efP4GOBzUFCQDqsSExPJ4BcAH1R6ayH+5cuX81eEz0pXpLeN8kxp
8vkjubm5mzZtGjJkCLEfIqT5OQHSDqngJ+DR5yHNTaTPLiXgfP7WwM/NZrM7
aVGxWSV7IyMj+VRAJu/du1fJWt2ZKYwBbiWfZHJD4Ypwi+kj0V2iVL7ij4gq
C/xJTpC9U/S4LCo05U0pFYZXcNmrUxYYlwkxyq1pNcwlugsnXJdkpvQrSKyf
wgAZMRV+q+nqpPbJmgQHScJpE1yB+i0TZi9/4+AqSsWMJiEuC4nnzGOM8GO+
RTYHKDNTKRLh/RICxzVZBTlJGYnQEQmRTpKnt43+TGkukSNQbPT9nJHMvuOB
AkaZeyL0ZZcSsplDHJS+tKjYLI2Tt1b6E6iJUmvdyUz1GMgVKVtwd0qUylfk
iGxlIf5Tt8EMXVGRPUE9WhWb3azgslfnT5bGICww6gkxyq3pMEwdNwsnabyk
x0kLKE0d0Qa8efRXJ2fKPnMR16FVZTF0DbqshdJ0USZE/YqeM0/FQno/5nNk
s0s9D9UjIXkifLxiOP1GnvEpp5MJs52PByIhVUOUvcQXwVcQORGi8C98JicL
PRK9bZpSIc0u3n7h4yT/c5H90p9DvSMpEmpX+Ex+LvswopSH0uP02aUEcURg
DP+AA2kUPvfpTgtlaRRWNOFTPEmCyGu5n5mkWSQxCJ90NEXiZolS+UpY2Pgb
ShpHEjlcmhznOxMohaWmoqLJaXiogiuZoanAyMZgoFvTbZgs7hdOJRkgW52Z
Cm1Asl3T1SGBfgotKSmWWnveRKYqHSfZyzsrPnuFd01rNuoo7e6YxxjUKPgc
leqpLxIltQxlyY+6x4xEKD0ZSgKJn6+bpAzLllVyReHJ9LZpSoWSG5GVnSL7
pT/nHx9kOx5J6RL+XAnZm6gpu2QhMcg+fBHb3EkLZWlUyl7iNIR3x5DMVDmN
xE9TWdwsUSpfyeYG6SeXOiJynKYaai0qmpyGhyq4khn0BUYpBgPdmm7DZHG/
cJIiIZIBfPnxE4ybEIg2IAe1Xp2cL6qMugdTeJSSqZ69wiRrTYiO0u6OeUY1
Cj5HpXrqi0TJOeiwSrbnjQxS8A81RJwrPQgQTcifTG+bplQolUbZkTWR/dKf
E5uVRuVIUaR5PpW9iZqySxaVTlG+e1wUIX1aKEujrBuUPdmozFSBsrK4WaJU
vlLKDXJc6oUoDdZaVHR4YMMruJIZ9AVGPQZD3Jpuwwy5oizSmRUkY4VdGQTR
YIrWq5NoRXdT92CKyoWEx93PXspC4jnzvODHvINK5dIXCd+vDskX9U1pjVC2
dpMHCl77EbGtJO3IwxGvnOlt05QKpdIo+yuR/dKfu9xJxo/uWUD2JmrKLllU
ej75503RyepGCi9HWRpVyqeHMlMEZBQ0i1BI+IlbLn/iZolS+Urdm2mKXIjW
oqLDAxtewZXMcD8/DXRrug2jREfhlD5EQJYSUSHKXunjkqary3YHuTmYwugq
6i5zRj0hOkq7O+Z5yI95H63V02UkUGz4G0SAfIDyKaviNFkl+61LU/XZpikV
Wkuj6FvZP12ikmQVGzRll44T3EwLpc0qNngoM5mK9RGiUkEfg5slSuUrpZO1
Htd6Gs290xe58FtDzHA/Pz3k1jQZpoL7hdNPoPFIJwYRFURo8WKAdN2LtIGm
q4ticH8whTFOb9AnRNPdcd88WXt03GifI2unVuNF50NZkp1PTmZ86bZK9luX
puq2jf5MqQ309iv96RKVJKvYoDW7tJ7gZloobVaxwUOZKZoZDk4YygB56KaM
gXGvRKl8pXSy1uNaT6O5d/oiF35riBmG5Kcn3Jomw5QwpHAKZ1aQ/nnSe08G
O0jXh2zvhNari0ZP3B9MUUmmpuzVlBBDSju9edJSJwulPT5E1k6txiudz3dJ
CfOEpm6qGyD81qWp7tvm8kytpVG2LFH+lh59d9bNE9xMC6XNKtF6IjNJHzJp
VqS9vjouoaNEqXyldLLW41pPcyer6UuRIWYYkp88Bro1TYbJYlTh5CdsMBUL
goj2IBqDzGmUzr7QcXVRh4Zw9qludBR10VdaE2JIaac3T9PlKjNaqyd9JCKg
RPFr9CgjlB3REy2qohnedblAnt422TOVSqOK/dKtJ/g/1VNEj+xNcT+7dMzf
oE8LZWmkr6eGZKYh61OUoCxRKl9p9WaUBmstKjo8sCcquFaHpql0SdHh1nQb
JotRhVM4pALNrnTtBiM3mKLv6rzG0DT7VAUdRV30lQ/Xp9D8xKhGwedorZ4u
I1HZRI4+ZnKa4dPX6W3TlAql0qhiv9Bg0c9JityfbCyb1e6vTyHnyD7NSff7
0poWytJIX08NyUyVyyltcSbFzRJF4Fcp0pinw8sJqX7rU1QscXmygW5Nt2Fa
T6MvnAS+zRVluHCtCv3CbZWr88tepOtf9KGjqFPWOEYhITpKuzvmGdUo+Byt
1dNlJCo5Q7P8QRihVPfys7b0Lc+nt01TKpRKo4r90g1yRfH7Kax+IkOr9LuM
yhpPmV2ykNNk9y2UTuTWmhbK0khfTw3JTOmWKQThHEL1GBiNJYo8zkht5re4
FB7U6s0oDfbC/huGV3AlM+gLjNLJBro13YbJYkjhJBClJ32UJipXdhMq3Vcn
ERoymMIY0aBrTYiO0u6OeUY1Cj5HNskkh0nSaFZ+CSPhe59Eb2rgt02TfaiR
jdDv1k0s+Rg0bT8o3O+I3jZNqVAqjUr2u9zPkJ+5xKeI4Uo+f5ymY03pJtJn
lxLSne74jRbdTItsadRU2T2RmeRM4a0U5hjB5Wo+TSWKH00W5jA4Z02uT+tx
KZqKCn20jMcquJIZmgqMbMUx0K3pNkwWQwon/0NyvlQH8rGJmgPdV+dn3ro/
mMIo+zr67NWaEE1NpPvmMQY1Cj5HNsmiadhaI5F9LQKBskeInMzXZSGyKk7p
9QrS1pPeNvozpblEjpB22WUOSH/OqG7mT/mCHpWbSJ9dlJGL0qs7LbI/V8pe
WcM8lJmyS+SIHiBCi+YZTVO9kH1bh3RHNZXc0HpcFvqioilaPjmGV3BZM1Rs
k36lVHGMcmu6DVPCkMJJIKVOmqskT2Rndum7Op+ZSllHn3xG+ZZpyl5NCdHU
RBpiHmOEH/M5SknWpD+lkRDdxT/zQiQQoY55gyDkeEvU32EqfH0kuZxSLaO3
jfJMafL5I/x0Mj/tLwMlr4zka4GOt5Gq3ET67FJC+NZR+EB+7mZaZH+ukr1S
PJeZwpIg/DnpbabszNRUL+BBhpxJTlN6A69SkrUeV4KyqGiK1nMVnLIIqX+l
VHGMcmu6DVPCkMLJ3Lr6VQiRB0p9OPquTs5XcjtaS6nsLdOavZoSoqmJNMQ8
xgg/hkjRWtgQBKlCYAWv4dC8xwdLCOId0B0hSDUGK3gNhwwNqGxaQiaTeNMk
pMaC7ghBqjFYwWsyZNRGfRiC7KjmNZOQmgy6IwSpxmAFr5n4CVCf4qj13TQI
oht0RwhSjcEKXjMhszHh36qyngJBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEASpusjuEow7HngHT2T+pk2b+Dc0kfdpeu5u
YjlBEARBaCDvbJUex3bEC3gi80UvoSZ6BvUGgiAI4luwvfAhnsh80rOh8mYr
Y8HygyAIgtCA7YUP8UTme/mGYvlBEARBaMD2woeg3kAQBFHhwoULZNx5yJAh
mzZtys3NZeTcDn+EH1AmU9d4goKCli9fzg80w2fZl/KoODSViyYmJhIjAfig
qXtZUySGJ1OT5XAyRMhPDpw3b5565EIj/eSQ/kTfFRmunMC3fMwqZ6qkDuzk
c4NkyN69e0mRc5lAfWYrQZ8cGrN1ZL5LA1TidP9uMlxJ5hMFvzKbzUoxK10O
QRCEHqEX5QFPKPUwvF/iTxM2AcLjQkTNBKNLb4BjlMYMllOmUVMkxiZTk+VK
mgFaDRojZX+rkrearihbTlTSQp86ANpH0tipJ1CH2UrQJ4fSbNkTRMnRaoBK
nNIItWYLfcVXuhyCIAg9xJ+D24yMjCRHwH8KnbzwZKFTgj/h4Y53tnw88PBO
HvrgX/hMnrNEbbGK71K5KLhHeHYjB8FaEjNl+6IpEmOTSW85PC+TyIUPpPCZ
vMEZLk1ppFL2So/TX5E0ZMKEkLSQM2n6mojuItcSdgvoSKCmjJKFPjn6zJZe
UXRcU35SCgBN2UL6VeArYcUXdrZIk4AgCKIb8DDEQUl7s/lnH+FBcgTcmuhk
8JnkK9EjKn8JQOhXdegNcIyiM8Fm0nALY1ZCUyTGJpPyonBQ6V4ApMmgMZKh
bvI0XZEYLD2NJFyaRpokiCyhLGxaM0oW+uToM1t6sui4pvyk0RuasoWUZDhZ
6UzUGwiCGAt5IJJ9OOVHAYQHpU0qgTysybZ9/FWEz/469AZ5yBUBlvvJDWQo
RUsZibHJpLwo+bnSUDu5HTRGMtRNnqYrkt9KhZZR0Bc2rRmlcjn3k6Nbb2gy
gEZvaMoWUpJlS6ZsxUcQBHET0n0q6/Q0PbuRzhClh0ryMCV8ZNOhN2SNJA+D
NPMHNEVibDIpL6q0T5QwNt15KHtc0xX5nnZoqkQjC7qBHAPdBTHzkxtpUqE1
o2RxJzn6zBYd12QAjd7QlC3kZJWSiXoDQRBjUXcsun2pyxN06A16I3WcRmme
gclUOtklNJFT2q/pitAM8c0rgSxl4kf/KSFLe0RRSVPnMhX0GSWL1uQYZbY+
A2TjFB3UlC3qWUSTgQiCIJrQ6nYofanLE1TOp78o5aV1ROKFZCqdTNleqEdO
ab/WK4omEvOQ2bMq2cIjWj0Bz/jwQ9JfJLVZPRX0ZitBnxwDzdZngGycooOa
skU9iygzEEEQhB6tbofel6qfoHI+/UUpL60jEi8kU+vJmoyhtF93s8IPKAgb
MpeSg0xZIY2ptCffwMKmFfXkeMFsl/kp+1t37qYhdQpBEIQelWFcw+dv0EyQ
kP2KHJE1UhqzEpoiMTaZlBdVj1wpRZq+Eh3XekVZIiMj+Z3i1M80aqGHIWYr
IU2Oh9an0Bug9Ft37ibO30AQxMuorE8Bv0fvS41an6JyUe+vT5Ge6dH1KSRy
mrSoG6nylei4piuSyQZK0xppWiiVc1Q2l5OerDWjZKFPjlFmi45ryk8avaEp
W1QqvtJ+XwiCIO7A778h/YofsxYeVHJEWjemII9X0rV7Kpt+SI3kZ9zR779B
GYlRydR0UT5y2SWNZJWicIsw9/WGpiuqNGfShTmyKN0s4cxJmlRozShZ6JNj
lNn08oByPZc7d5Ov+NKSLJsoBEEQ9yFPOsJtBsmGmX4VCE9WcUTqG2+K9jbk
x8R530i6kVUcuMhI+KG+/UVpIjEqmVot5zUeHznDNQ38cco900j8JG+lL/jQ
d0V+7IB/y4YoObLdONJrSUuacJmGMGaVBGrKKFnok6PVbMrM15Sfslnhzt1k
5DYj5Xc3Vcl5BEEQd5C+RoF4IanbUXdESi8Wkd1fWvbdDSoX5f2wEPqXZWiK
xKhk6rBc5VUdsm/yorFQ/Sf0V5R9EQxB06CMCFLYSEsnXA2qkkBNZitBnxxN
ZtNnPr0Bslkhe1BTtsiWZKJDKC+HIAiiFeH7YflRXT/JWIBLnyN8cSr8Fj6r
7M8AFyLumpyp9G5K/gg8svGRK72SVQlNkRiVTH2WQ1TCrR5cvj5VFqF5Ln9C
eUWm4mGZfwomadc0dVP4c+GFyNQdygEjrWYrQZ8cerMZLZlPaYAmAaApW4Tv
h4UPpBhruhyCIAgNKj6E9PfSdyB4DkMcnU+8JbpoBEEQBGEq1vrJjryTblWl
tRjeBPUGgiAIglRp+HmhwglmiYmJ/KxIQ16T4SaoNxAEQRCkqiPa1ZBHdq2c
T0C9gSAIgiDVgKCgIKHqmDBhAuXrMLwD6g0EQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAE0YSzLAMDBg8Ek9OW63Q6nBJ8XeQRBEEQH+Dr
VglDdQ2oN5AqgLR8qpdYmvN1Q38ht01i2GAvdJaZueBzd4FBPZidtjzOnTLS
AlCF8HU2YqiuAfUGUgWgapu1/0QHmq7itj2oN6pWQL2BAYNKQL2BVAFo2ua0
tLQNGzasXLny2LFjpaWlutp310DMED9cBa4FV1Q/+caNGys5goKCdF0N9UYG
l3CTEcELGYh6AwMGlYB6A6kCuGiVOU6dOvX444/7+fn17t07NzfX5a/0NP8M
k5eX17dvX7hKnTp1Tp48qWQeOT5//nw/jlmzZtEkRBpNjdcbmc6yLKfNiMBG
5Wlrq6XeMFe+4PNiiUFfQL2BVAFoyueJEycefPBBaNx79OiRk5Mj/JXLCCm/
AkDJ9OrVC67ywAMPHD9+XClm8nnOnDlEb0ybNk36rXoCUW9w3inL6Sh1OuxO
h82NwP3cnuf5PKyWegMDBqMC6g2kCkBTPs+cOfPEE09A496nTx9h/wZNnPRf
Qcz9+vWDqzz++OOnT59WipZ8XrBgAdEbs2fPln7rMo2oN5y2bFYtkHxwM9gL
UG9QIkhOjtNR4nRYK1MoYdusmlgdqkFAvYFUAaQl0+FwREVFbdu2beXKlSdO
nCgsLDx//vxTTz0l0hvk5JKSkqCgoNWrVy9btmz79u3x8fHwc2HMZrN5w4YN
8O2BAweKi4uFl7ty5coyjuDgYDgfLkT0xpNPPnn27Fn48+TJk2ADWBIZGWm3
24VmS/WG0HiwhMw2gatLk4l6o0Jv2PjmWy/cz+35qDcouZn/INIMEXvGhvIa
4fPyiUFrQL2BVAFExTIjI2Pnzp1fffXVo48+Cq158+bNFy5cOGPGDPInrzcA
EAAxMTFbtmwhky4AOGf48OFHjhyBSPj4AwIC/vnPf8K3Xbt2zczMZARaZerU
qeSHixYtgj9LS0uJ3njkkUemTZsGB1u0aEH+HDJkCEgIXjwwCnoD4gfj4WT4
CXz14osvQjwXLlywWq2MWHKg3rhFb+goMKg3dHAz/yHT3BV7huOdrioMngio
N5AqgLBMOhyONWvWPPvss/fffz9pze++++4nnnjiscce+9vf/ibSG/Hx8T/+
+GPTpk3vvfdecvJtt9320EMPtWvXbu3atQUFBeQ0aO7JXNOOHTsSHcJfbtKk
SeSHIB4Ygd6Aa8EV4bpwdXIC2PP000+vXr2a7+WQ6g34Cq5br169hx9++M47
74Sv7rnnntq1a7/55ptXrlwRpRf1hkhv2Gy2MmWEnUviFsqJekMDN/Nfojfk
z5f7Vumg4kVp5zWh3tAWGLuFYcAf5jNMAfdvHvcn/JsDX3nXGNQbSBVAWCYT
ExM///xzaKlff/31uXPnbtmyZf369dOnTwepcMcddxC9kZcHtYnJz8/ftGlT
s2bN/vWvf33zzTdw2tatW5cuXfree+898sgjvXr1unjxIjRhcGZgYCBIBfgt
tPui/g2ImWiGn3/+mRHoDbhWhw4dpk2bBtGCDfPmzWvVqhUc/+yzzxISEshv
pXojLi5u8ODBd911FyTh8OHDR44cAQtfe+01sGfZsmVkmiuDeuOmdyrXG4DV
al20aFE/Bfr37w+F4ezZs0lJSbzwQL2hj5v5f6veIN+C4Id7AVq9sLAQZF75
TzjgOFS6oqIiOIf/FZyTzwF1zcmtKIfP8FsSFXwg55N44N4VcpCbWFX0BuNr
A1SCzZpenJ9clJdEQmFuYkFOAnyA44w9k7F5Yd0WH1BvIFUAvkyCywLB0KRJ
k4ceeghaH6IWGM5xrVy5Eg4SvUE6LkJDQ7/44ou7774bjoBK4WM7duzY888/
/+ijj86fPz8rK4vRpTcefPDBFStWCP3k4sWLQTY0btx4yZIl5OdSvbFv3742
bdo88MADIEu2cIDZbdu2vf/++7/66quQkBBhelFvCPUG3NMePXr4KXPvvfd2
69ZtxIgRAQEBpB1EvaGPm/kv0RtwFw4ePDh69Oj27dv37dvX398/LCyM/yHU
EVDdgwYNIhWQ/OT06dNwEIr99evX4c9t27bBnz179gwKCjp06BDIfqhQZOo1
CI/du3dDtPBEsH//fon8rsR6w+blhpvOKrsFQlRowC+LZ335+af/+WTAfwd9
OPnHUZMmfj/6+29Xr1gcF3WZPc2R5To2SJ2rBDKudRfqDaQKwJfJ4uJivrkH
jyQ858iRI2RMBNQFnAZHdu3a1bBhQzgyZswY4ZkpKSldu3aF4+D0IiIiGF16
o06dOn/++acw2gMHDpApGWAA0SFSvTFr1qz/+7//k20uQQLt3btXmF7UG0K9
Ac+877//PmTU7bff/swzz7wooV69evfcc8/f//73H374ge9iQr2hg5v5X6E3
yHGz2QwCg0xYIjzxxBP//e9/IyMjyQlffvklHHz22Wf5BenwL4hqcjLZr4Zf
JP7666/DLSOfQWBs374dRDiphkC7du1Ae5CKXJn1BmPLsJeaC3ITy4rTKp3k
ABVkzzSnx/zmP79Z08a333bbk0/U+fXnOfv37/h4YL8G9Z8d+EGf4KunQW+4
Glgxc+MvhSrKBPKBcWZCUI0H9QZSBRDqDdLoPPTQQ0ePHhWeI1wPS+ZeLl26
tFatWn63bn8B/2ZnZ5M9NMAxXrp0CY7Av7zesFgsjEBvzJgxQ1ZvSNfDHj9+
vHbt2vBV//79lfTGp59+etttt/lx00h4p33XXXfBszn8dt26dcL0ot4Q6Y0P
PviA3PqNGzcm3UpycjKUB7g1d9xxBzw+36rcUG9o42b+36o3INuhykAODx48
eOTIkd98803dunXhjgwYMADqFJwwYsQI+LNly5bCBWIg+/24+U7nzp1juD4Q
IhobNWoEN/Trr79+7bXXoArAr15++WVypHXr1n7cZKrw8HCmkusNh8VamHL5
0pmUxFCvT4egMA8kB1N25ND2Rg2fY1XcG63jotl5YosXlLs1+FCQHc8wuYqR
sNM/8guO7sr5Y1lZcgh75FZZxXZrODIhRJlSLyWk2EvgBCV7UG8gVQC+TJaU
lEycOPEf//jHo48+KurfgOae1xvksWjz5s3/+te/4Aj8RHgmPKaBroDjHTp0
IEMYfP/G22+/zffiEvj1KVK9ceLECeGZBw4cqFOnDtg2fvx4p8J4CjzH+XFz
RCFaeHzbyXHo0KFjx45BcuLj48Wu1QN6g30S4bp/GUW3UEmCvN6AWx8QECBb
TlavXn3nnXfefffdY8aMIbfAhd4gvcQUfcV0oZrrjVmzZkH+P/XUU6DPycFN
mzZBVYIal56ezmjRGw888MC2bdtItL/99hupJvCB/OSPP/4gR0gVq9R6g8kp
yE1cvXblyeMHy4rSGHvl6uLgJotaf/Of9/e7777nnn+M+eF/melsj+7SX+eS
HJ404fvMNBB1efIxgJdwZjuKzYm9e8a8+lJpeADID6fDIogf9ExmcbH5cFji
//ZE/Hw2xlbCyg8Fe1BvIFUAvkza7XZwU2T2hb+/v/CcDRs28MMZZDbatWvX
Bg4cWKtWLfiXjJIQLly40Lx58/vuuw8afbIaBY6QrolOnToJZ3rAr+AhTlZv
PPjgg8uWLePnyzFcd8pjjz3WpEmTLVu2kCNSvQEfQNg8/PDDO3bs4H9448aN
devWnTp1ymKxeFxv2DJsJSZrYWppUZq9xORzf6ga5PUG3CnQh9JC4nA44BaA
2ICyMWPGDBq9wU7RZ/LYx9JSQ7K3muuN06dPd+zYEUp+7969oTqAkADhAXWE
bFnDaNEbINejo6NJtERdwI0jJwB79+4VDsFUbr2RazFHT58za9mKpekpEYwz
q/KMqrDPFHaLrTRjzA/D/Ngh4Mf27PwDLMxMi/hs0EBuOOzx7VvXlBWng6iQ
j8GRDQKj8MTemFdbJn/6IVNiYs+08d+y3RqZuab1l+M7rbjRe13omehktrvD
rmQS6g2kCsCXSfg3NDT0o48+uuOOO3r06AEt+8WLF//66y8QGwMGDCBLU/n1
KdnZ2fDEVK9evQYNGsCjGXgzaKcOHjz41VdfgTDo0KEDPD2BfoAzr1+//tpr
r4FLrFu37rx58+BMeILet2/f5MmT+dFqkd4AGdO5c2do4ODqYMPWrVt79uwJ
Vn344Yf8tE+p3ggPD//kk0+I8SA5wF0fOnSoXbt2t99++xdffMFPvfOQ3uBc
gSU/JzE+LjgpPiQ/O4E4JZ87RmXvJKM34NH4119/DeSAnCcfQK2tWLGiffv2
cBP79+9PhskYFb0BGsNuKUsKKTr/Z9HFo7a0CKc9y+nuw2m11RskLVD4Dx8+
3KtXL7gFoPqefPJJqDXz589PTk4mP+T1BqmA5Fe7d++W6o0nnngiNjaW/ArE
Nun0gwcEcmTPnj2k4sBtZSqx3mAcFkdZRmhIwOgJE8ZPmXzj+gV2qWmlqVBs
54YjKyLkr359yPBx3RtBZ4ryEn+a+WOdx2o/UeexieO/N6WGMc48pREQUOOO
orS074bEtn4154/lbOq4KRxMxYSNOHPamANRrZYEjz0YFZ6aWlJiVp0yinoD
qQIIyyQ4vcWLFz/00EP33nvvww8/DH4PfNdTTz0FPpD4qHfffZd/vAIh8fXX
X5Muhdoc8PALD2jNmjVbuHAhWZzCcMpk1apVr7766p133gnRwjl16tQBdwr/
8ttr8Pt9wcMdOQJnPsEB0UL88CfEDNGWlJSQaEG6kDNnzpxJjthsNmgr4WTw
rrxJd911V+PGjcHH8j/0lN7gekfTUsJPnDx4/MTBhNjr7BFHpRt0FngnGb0B
2oy0dwS4R3ALHueA/IfPIDLJBB5GWW+Q/QeyVi6O794pbdQw67Uz7BEnxUR9
tVCd9QafnLi4uI0bN06dOvXbb7+FegTZPmXKFLIgheiNl156iXQwErZt2ybb
vxEVFUVO+P3330V6g0iUKqA3mOzCvKRDh3YN+37U4K+HQrViN7ioPHrDkQX1
fcfWNS80a3Lbbbc9/fT/9e/7TvduHV95ucUX//14/+4N6Slh3BoW+WIPnoFx
ZFtDLkS3eCH50w/sGTFOEBs2Czdhg+3EOBSW1HddaI81IcvOxyXnpLPzRR0u
azTqDaSyI/V4v/zyC5kLQQaUhw8fPmTIELLf15tvvsnPwYB258qVKyAV2rRp
w8/PHDBgwB9//CFcwuBwOEB7bN68uWPHjvxpPXr0mD179ltvvUX+nDt3LsPp
jbfffpu0el999dXIkSPJJupE54AQ4p/amIrxbgAcMn8wPj4eJAcYT6z9+9//
3q9fP3Dgcu+0NVpvcDv/REdeWbl2xdLlS69cPsNNJ3OzkfVckNcbSnTo0GHB
ggU7duxITU29NScleoPLB0d+UsoXn4Y9+XjGrEm21HDGmeN0d75ftdUbDJef
e/fuhYrm7+9P1qHDkbFjx0LO16tXLykpCY6Atoc/mzZtyg9KgoQmC1Jq1arl
Um9cvXqVHKk6eiM/PTXiV/9fvh837rNvvt2ybYO1KJ2tU954GTGNeey+XlMn
j7733nseq/1I3z4927Z5zY+dcf3gH2uWgDNjmCJOHclnJsMU2POTMuZMjmra
JGvZAriZ7HQOUBpMZla+adGZmG4rb3y6OWxPcKKNPdlCsQkJ6g2kCiAtluDH
AgMDoX0ZN27chg0bMjMzQYRMnz79+++/B/dF5ovy5OfnHz9+fOLEifAt/OT6
9etkGIWPnHwAcXL06NExY8bAafPnzwehYrfbz5w58z3H2bNnGa6DYt26dfDn
tGnTQFpYLBaQCmADnH/x4kX+sZpw+vRp8lvRzFJiPKig0aNHL1myBC4k6dnw
nN7Iu3b17Pgpk0eMGXP06D72EYbJ8bljVPZOMnqDKLRRHIMGDXr11Vf/8Y9/
QHP2xRdfgJaTlhkZveHMc1rTCk/uje/SPub1V4rOHWacBUY8llZnvQGATr7r
rrvgFkC53cDRq1cvEN5du3Y1mUwMpyUee+wxUA7ffffd2rVrV65cCYL8hRde
IHet+ukNpz07OeHG0uVLZvw0e8HPi3bt3poYx/UZVo5Zo1C1S6zpHw9kx39f
aNZky8YVK5YtrFv333feccfUyWO47UaVnzXYiaAFxYEnYl5pmTL4o5KIQO58
C+PMvJqUOu5gVIffbvxvd0R4Gmh7l8tg+YB6A6kCaC2clCdrLfBar+7yoJIx
HtEbNlZv2MsyTxw/+PnQYR8M+mzL1vWlxWnCCWCVLCiuT+FXImdkZGzZsqVT
p07ksRrEG7/zg4reAMVXlhKWNnJobKtXTBNGlbEz9q1GGFzN9UZycvKPP/4I
UoFfzX3fffeB2ABNTrYDTUhIGDt2LJm2Tahbty5ZNQaQu0YGGe+9916y9Q0A
soScwM+62b59OzkCjwlMZdUboCscJabsjNiLF0/8uvTXg4d23wj+Kz4myMmt
2vC9eQ4LaIaIkL86tGO7djt2aJsYez0qNODVV1rCn/36vsMuVIHHDc5UhjFL
Qh6TG5w99dv4Fs/kb1/NbYSelV9sPhKe9PHm8PbLbvifjysuMjP2DC3L3FBv
IFUAreWT5mQdZV7rpWmOq9hjrN4g8zRMqRGbt6wHvfHh4M+XLvdPSgh2lJor
6xQO13qD4bZkgQYLGrVatWq1bNly1apV/LQceb0BD27OgqJzh6NffSm+e6fC
c4ec1nS1/Qc0hGqrN/jkpKSkkDcC1K5du3HjxiNHjjx58iTZbYackJqaOm3a
tIcffhikSK9evUAwwN0BBVKnTh2yinn58uXwZ6NGjfiRx82bN8ORf/3rX+QV
zMDBgwcf4Th//jxTWfVGeXBk5WbFrVqz4tDh3XnZ8XZjFjoZENgRw1Lz5vXL
6z/3LOjDTz95H+oQHP9gQG/4s1nTxuxaFXt592ZpbmZhuqUwPbOID5bSzJ0H
Q17uEvvJN7aoIPitJc+0IiCu/W83Bm4MOxWVXMKtQ9G4ph71BlIFkGuLawKG
6g0m215iunzp9NLfloyfPOmH8RMW/br43PmjRXlJ8JXP3aOCd5LRG9AMibZ6
S09Ph6fmZ555hu03fuGFQ4cO3VpybuoNbvwotzT2unnKuIgGz6WP/p+D7eHJ
xf03hNzMf7n5ogUFBQkJCUFBQWFhYWazmZ/LwZ8Aeu/atWtXr16F0+Ag3Lir
HPBD+DMjIwM+g7SwWq3kVxaLBY5AhEVFReRITk4O+Ul+fr5MpahMegOKE9Sg
1WtXHDy0qyg/ye0pxwYaVlCYm/jt0M/uuOOOe+75x48TR7EbhDI5C+ZOq1On
Nojz74Z9wa6EZfIZpzlgYcHiF2xLXyhbxocXnUuetsy7I+S3f6dmBGQllaYN
2x3Ryj942tHo0NRUByvaM7W/NQb1BlIFMKTxroIYqjecOTZrekDAibXrVq1c
s3zN2pW/r19z4uTBPHZ3wco5hcO13nBWeCpoxSZOnEi67j/99FO+r74iGzm9
YTODsgIHm7NuafSrLRP69Co4sYcblTakcyOj2usNpRS5PEF4pvSHNEduqRSV
S2/k5OckrFrD6o2C3MRKssUo48zLtsT5/zyn7tPs2xP+dvvtfXv3vHD+sA2e
OAKOtn79ZTj4TN3/W7pkriktjGEyDw+zfuvH/ODHjL4ZnGP8mLF+zHg/Zv5C
0yeHgnuuCVkZEGfKSWcnbCju6KUeUG8gVYDyltcH4dam3yfBXmSM3rBbHKXm
5MTQM2f/3L132/79O06f/jMq8oq1MLXyPJRJvNMt72t75513/Lg38/I9GEJn
FRoa+vXXX99zzz133333qFGjUlNTyQtJb+oNRzbjyCqNu5YyeGDEc89krVjs
yE9j9xMwbLS9+uuNSgDqDQqrHLl5ltjtW1ZPmzJm0oTvp08du2LZwqDLJ+GJ
oygvEY6PG/Pd9Cljt21ZZTGzeuP46GLQGJP8nJNvDdP8mIm1HO8Oj/v4UMjB
sCR2AMXpzr7EqDeQKgBXRH0SeHx39XLvasj6lEy73RIfGwR6Y9fuLWGhgewW
o5XDQyp4p5t6o6ioaPDgwffff//TTz9Ntp1kbtUb8OHo0aNkN6rOnTvv37+f
3wWCy8Z8dn1fTkLm/OkxrV5J/mSANfgcO03UyN0SUG94AdQbVEWRW+qeByWc
YUq4fwvJJqLcnI3CioP57JITxnzshyJZvTEJDt7hmLsoNTQ3mT1TceNQyoB6
A6kCOG05Xg/ZbNvhKIOawDZ5bG98tt6ocp12uWAjQfWHbDCs84F72UFuSmLI
rj1bd+zcHBVxBVyQ0lbGlSDc1BvgkWw22/Xr1//8808QG5KN38tdFgiM4ODg
w4cPnzp1KjExsaysrLyFYv8rZBzZxZdOxHVoC3ojf/8WduYGk2+sk0e94XlQ
b1Dbxu0vWh7gc4W0vnmc/ZChojfG+zHT73LEHclhGJMRr1tCvYFUAdiC6u2Q
xlYQRymnN8qcNgt3RGMkpVBJy+cMcPMEhCGf3Y2HfduCGU5Tjce4N7WxeiM7
MT6Y6I2IsEvc/qKVczAlQ6Q3xEVCtimSlpzyw+xtLEu4bp48OqpJo9RhX9rZ
WSv5xo2kkIB6wwug3jDUfgq9kXSM1RtGXA71BlIF8EVNhPplEeiNLO6Ixkjs
lrLiNFNKaGzkpbioy0lxQcnx16MjAkOvn4uJCMxMj7BZ04nw8JJvqZJ6w85P
ZblZHpSn9Miew/5pL8vZsDz6pRcT+75TeHIf+2TnNDzbq6veqGQB9YaB9lP3
bxhxOdQbSBXAFzXRAL0BLVpBbsKZE3sXL5g5fszw0d9/O3rUtxPHjZg9Y+Li
BTNWr1h87M8dppQwG/d2eKfn90CumnqDjInongNjJ0WoJOxayucfR9Z/NuvX
uc7SDG6XM8MzvJrpDTNb7KFxB9VRiUIBWyp8Xzgr6lS10BvHUW8gSAW+qInG
9G/YyjLNaREgLTp1fKPOY7UffeThzwZ/dOLIri0bV/br26v5i03hz7/OHmJf
jO70+KLUqqY3zKwG0z9tpjwwTKmzxJL509Tol15MHjTQeuUUO03UI6muZnqD
3ALvD2W6DJWlc8NZDfQGw4Yzw4tH+TFjuCWxECb6MRO4D9/5MeP8nNEHUG8g
NQhf1EQj9EapmczW2LX99xeaNeFeEvGPaVPGlhWnmdMjB33K7iZx9113Tps8
Ojc7nn3i9rCzqmp6gwS9TR47K8bMOLIdxaaiU/ti27eObfVywZGdjkKT05Hj
gc6NjOqoNzC4CFVXb5AXyjtsGYGpSbMn5I17IunXWmdXN0lf+0bpnMamec+b
17YvW9mubF3nkrTAbMaJegOpKfiiPhqhN7hd/sAjLVsy98knHgd18Ubb13fv
+J28N23mtPHkJRGffNQ/JjyQq/6e7SiumnrDjcAuCbRag8+nDP4oukWzjGlj
HXmJDFPssffFoN6ocaGK6g2G2yA0v9B0OCz53Q2R3ZYG/9ZnRNjzLYqPHLAV
ZK1ft3Hnlu02a66tMKssP9NRYtR1UW8gVQBfVEkj5m+w7V1+WVHamFHDbude
cTXki/9EgbRgcjLSIoYN/YLojc8GD4yLvsKejHpDR6Kcsm+bMrO7IDIWpjAu
+9cZkfWfBclRGhHo9Oz7cFFv1LhQ5fQGQ3o2GIs51zT3ZEyrZaHfHEo8NHNe
aOvmmWO+YAoi4VFo0/aVew9uYAd52UpkZhxGXR31BlIF8EXFNGS+aLajLDMy
5MKH7/cm0mLhvGl2Wz5jz9q3a/0bbV+HI/fff9+8OVOKi9KNe4uHsj3VUm/I
iw0z5y2zivatTnqzTVy713O3rGYceazY8GAmo96ocaHq6Q072Jx5MTH1v9vC
u6wOm3U6PuTc+fSeXVI7ty0JD2C3CHPmbFi/ZveuLeyCfYOTg3oDqQL4omIa
oTeYvMLchB1bVrdt/RpIi9v/9rfxY4efPvXn8qULOnZo+1jtR1u9/vKkiaPC
Q/5iq7nD47Puq5vecJid9ozofbmHfyj684eiY6IwtuTYGOv2dmf+bLrI5L/K
Zr7Ojm15tjlAvVHjQhXSG1y3RmZpScYfl+PfWRva94/QdUEphQVpBeOHxbV8
IWvZAlZggCOyZ6LeQGoyvqie7uoNbjCl2JwaPnniqH8+9WStWrUaNnjux/Ej
/1jrP3H8yP793v3is0+2b1mdZY5m67VNx8sWtTuc6qU32E4MZ8ahb4tH+jGj
uHdLicIYP+Z/fszyV5isUDPDpHps2gYfUG/UuFBV9Ab73hMmM8qU9tPJmM4r
bvxnc9j5BDA+q+zgpugXmqQMGWTPiGN3HHVmQxJQbyA1GV/UUEP0RllM5KU+
vXvcdttttWs/Mmzo52dP7k1LDjGlhGVlRBflJbH7fdktXvNR1VJvHBnObh0w
ll3E5xSFCX5OkCKrWjuyY7PhZM+bhHqjxoXKrzfIOpSSsoyAuOT/7Y5stSR4
xrGojDxQ4IW28IsJ3TslvNmp8PQBhilyct4A9QZSw/FFPXVLb7DtOLsIpSjg
/GGyErZBg3rr1/nnZcWyTxBsv2UhfOuBGq1qVXXUG0e/LxrHbRcwWeZtU84f
/JjVrUuzY7IM2kBAPaDeqHGhkusNVmzYM4qs5p3BCT3WhPRYE7ozOLGomF2n
7zRHmieNjmrSIHvlz4w9x2ln/QDqDQTxRVV1T2+w22VnFeQlr//d/5//fBL0
RqvXX7526QT71jCux9I3zqfG6o1oC+oNenx+Z6tQqMx6g50a6sjIyDVNPRbT
yv/6iL0RF+NTSlmb4ZEnL2/72qgmjdJHflOWHMJ2bpCfoN5Aajy+qK3u6Q22
E6MwNvLSqBFDH3rowVp31Br4fp+MtHCGsXlhnoay/6kGesPMpaKYYcoYphT+
PTvBPtaPGY96wzh8fYurUqi0eoOdsOHMPBub/OmW8M4rQn46ERNrTuXWt0Io
Lb58IuGdt2Lbty2GhyCmgN9pEPUGgviiwrqjN9idNEpLLXt3rW/T6lU/P7+/
//3v3w0bYkoJYzeb8qELqlJ6g315LvsyO1FgO4jSU0JjIgJjYwNjYy5t+yxt
ArcDM+oNo/D5ra9CoRLqDW7FqyW/yLzmYlzvdSHvrAnZcDm+xMouTuE8QJ7N
FJc67MuoJo3ytqxxlpjZFyVXbBGPegNBfFFt9esNxpljLzWHXj8/9Ov/3nXn
HaA37r3nnv8OGnjl4nFbCTfU4uF9NpQdUWXUG6xV3KRZcQDXx+6hIQqOnMyY
Lz7/pFnTxs2aseHD2iun+zHTUG8Yh2/LQ9UKlU1vsN0ajsxIU9qs4zFdVtwY
vCUsMCGZUxoZ7Pos0PD2rMxFM6ObNzON/s5ZmAry45afo95Aajy+qLlu6A0m
t6Qw5fzp/VMnjf74w76D//Ph118Omjd78unje9j5olCjUW9UZDI38FQGKuLW
wHLy2O6BH/Yd+GEf7t/y8NHHH3/y8YDh/xsybtyEceOGjxv73cRXj01mxQbq
DcPwXXmoeoFGb5Ctg7lZ4hUB/jTaCbBTQx2ZVmvGhdjkL7aHv+5/Y9GZuMw8
E6tAyEpwuKgzq/DMgdjWryW+16Ms/rpT8s4m1BsI4gtP4obecGSVFafFR18J
CToTE34xNiIwOjwg/Mb5mIjA/Oy4mte/wXbVcutxym4NNrizpUWpO7atXbFs
/oplC/mwcuWSlSv9R3z3VYcObTt0bN+hfRtBaN23T6+IkAtcuWCncJwYYf/O
j/mefZEluyp2tCCA2BjqxyxtVpYViXpDAz4pnFU0uNQbpKfOUWq2FqRYC5Ih
wMMI/Mk4jPQDnNjIsBabNl+J77L8xrtrQw+GJeUXmlmxYeeuwr2zyZYcktj/
3bh2rfL3bmL32pXUfdQbCOILT6JTb5QPBNgt4FJYrwINOhfgK3LEF2nhbfOo
3jBzIyByMy6YfIspMjL0AhcCSIgKC4iKijiwd1P79q3rAc/WFYWpk8cU5CcV
5Jvys+OFoTA3wcn5eYaBy2Wfn1U6+yn77Ptz59yePPfvGQueLFvwL8eCf9oh
zP+nfcY/HVvetebGWQx6waWLHEC9UdOCut7gFsXnlxanHtq/Zcqk0TOnjZ81
fcKUH384uHcTKG3RWIZ+G7gtylOz0scfjHpjafDwvZFXElMcZGzFxttZZM9O
ME8ZG9WkYea8aY5ii+zbmlBvIIgvPIlevWHLvGUGAtuHWRHYusx6AF6EiIKn
E+W+3rgldTIzLrgkiwJjhetOmzr2+SYNn2/S6GZ4vtHzTZu+2b3T5g0rTgHH
95w8tlsYkuKC2N+yi1CKbw1FnM1mdjzakZmfVpKwM/T6gGkBdd8L/mh2ysmU
tCvW1IvZJCRfzM4MzbIVZnh+c9EM1Bs1MKjoDa7w594IOjvq+6Hv9nprzsyJ
+/Zu37dv07gx37V/o/W8OVPM6VGMs8BtA9gJG8cikz/aGN5jdcjcEzHxWens
mwrtgnOcec4ic8765SA20r/7ypYSrjRxHfUGgvjCk2jWG9Da2ktM8bFBARdO
3Ai+UJSfzD3d52oIDs9ONnNbb5g5O+2S6RblMy4iQi789z8f9u/bq3+/d26G
Af3693t32LdfTJ7y4+QpYydNHCUI369cvojdZJVFGmchuaiiPeAMWRWXWrpn
cUqHRuaBHewXNjJMCtf1YRIEs9D3ejKg3qhxQVFvsNsL5127dKJv757333/f
t19/lpocClkL4cyJvY888vATjz++bfMqW1mO067zQYOsQ8nIM628EPfu2tD3
fg/dHpRgL2UP3nIm28dSWHB0V2y7Nom9e1ivn2XFhoL8Rr2BIL7wJNr1BpNT
Vpz+55E9CxYvXL/x9yuXz8TF34iLuR4bHeQyREddhTPzshPYNtRjHR10eoPf
4MJ2awCZwZhTw1atWOz/609Lf517S1i6YOmyZRPHj3yze6fOXbp07vTGzdDx
jS6d2x87vIPcScksDmt5Z4WO5LDvsszO37Mh/s3OMa1fy928ilUazmxPv2ZX
OaDeqHFBVm9wwyi5sZGXyIuhX3/tpeiwi+zAInvcFhJ0tkH9enD8228+S0sO
YZw5Wvs2ydRQ0BuRprTpR6PbLQ0esj08LC2Vrbmid8ezsqewJOxi8ifvR7/c
ovD4Hie3FaFizKg3kBqPLzyJDr2RW1qUtnnr+qmzZqz9Y83mrRs2bv6DMvzO
nR8TdY1tMT22pE6kN7jLFXLSokAQ4M+cpLigkKAz4BhvhpC/QkKDVyxb8EKz
Js8B9Z4Rh+ee/eKzT0ypYdbi3OL8JFFgp7IIh5aEY0z65IEzF35bEnIh6f3e
UU2bWPzn20zR7IC4Lxckot6ofAFKl8PCLQ/JqehIzKsIfNciJ1NB92ovilK9
QVajlJWaQX7ffvvttR99eOG8qUV5Sey2Wuz5tiuBx5968gnQG33e6xF0+QRr
iZbrlk8NtZovxCV/uiWs7dLgX87F5haYuIHajFu2E2TlTY4jNzF9xNDoF57P
XvWLoyAF0qsWOeoNpMbjC0+lQ2/klRSmrt/4+4yfZu/dt+3I0b2HDu06dJgq
7Nu//fCfe5ITQjyyUI6fX8HuoJWbnBiyZ9/2Xbu3RkVc4Q5m3zKNhCmzmKI+
G/xR48YNhKFJk4ZNmjT5aGC/o4e3nzt36uyp/ZKwLzIsgHPjpdyrYUQhR18n
hnxg7SwpS7iePuKb6OZN04Z9WcpO9uCeH+0ZjDemasgG1BuVJkAlgrYSJITD
crPPsNQsE245n/uJ3ULfzSijN5zZjrKMc6cPtGnN7vX36istIkMD2IE/exbp
OTx2eMc9//gHfPXB++/duHaavB6aMl3k5Wv5haa1gXHtfgv+cFPY4bCkPOst
U0OFtkHMmQtnQB1JHznUDuaB2FC9FuoNBPGFy9I5nnLy5KGVq387cHBnVMRl
synKnBZhogjpqeFwZnF+su7BXIVg5jRGKTcaQuZdMAW5SWfPHT9z9tgvP8+F
J6w+vXv0fu9m6NO374D+7/4w6tvpM2ZOnzZ++pSxJExjw5i9u9Zz4oGpiFAU
rJzn9OwaHLIKxpYea1k0K6pxg6QP+pRcP8f1luSzUzW4CRu+KDAZqDcqS2Dl
aDYRuvaceOvlk7kbV2TMmJj23Vcpn38CBSaxT8+k/u8m/+fD1G8+Sx87PHPR
rNyta4v++tOWHlHRxVfAKmSK1lZGbzD5JYUpkyeOuv/++267zW/Qp++XFaVx
e3iyrzkoyk9Z5j/vb3/7G+iN/w39PC0xmH48hUzYiDanj9oX2W7ZjdH7owIT
UshB6VsSWGlht+RtWxvdvFnywL4gzlkbXKUI9QaC+MJradcb3BpYU2rEtatn
rwedz89O4Lpq5QYR5EMWo1Ns8BtcyMy4KC1K3bR++c+LZvy8aNYvi2f98suc
qZPHfjN0yNChQwZ+0K9bt47dunXt1rXDzdCl/Qfv9+Z6KhguBtF0iyIvKAq1
wI2MO0vM2St/jn39lYS3uxYc2FLROmREhWXt2ZmbEAPPp2avLEiR3AjUG74N
rBZlVzDZUsNzd64zjR2R2LtnfLeO8W92gaKS0KNbeejZnQ3c5/i3u8Z37xzf
rVN8lw4JPd9M/Wpwxk9T83atL42+yg3B2NgyrzwpSE5vFObnxL/VvTMoijqP
PTr/pylO0vpzlTQ2IvDzzz724/D/ZU5pcRaVqrGRdSgZ+8ISB24Kf3t1yMLT
MaYcE6s0HNLz4Skj1+nIKTy1P7bVqwk9uhZfPMbOEaVwL6g3EMQXvsut97WR
fTa42ZjwqJXhOlCthyUbXBRIAvs4ZkoJDbpykgunSLh+9fT160G7d6zr2KFN
feC5Z+vXh1Dvmbr/fvKpJ5988olJE0eVWtNLS7NLClMFIYXdGYDsiAgSSBR8
vl0zPKNZ0wsO70h4s0vMyy1yt65xlpjYzmr2LVTmZUvyn6tn27wxj+3lkPHD
ng6oN3wVzFwZYIWBNfh81m8LUr/8T1zn9tEtXox7o3XyJ++bp4/PWf9bweHt
RWcPWq+cKgm9YL1+rjjgSOHxvSAtspbON00clTL4Y5Ac0S1fjG0NbXT3lMEf
ZcyYAKIFznSwe2UUlwsPcYG8VW9wL/1JSwpp8WIzUBSvvNxi/56NTvICR1Yz
2I7/ubNhA3ayaJPGDf46fQA0vOsyz/qQzPSc9JUBcT3WhPReF7o7JBGKNzuG
In8+2FBYfOVU4ns9Ytu8VnBoG/v6V8ouFNQbSI3HFx5M935fmeX7TlRUcLbD
Uz0InsQ5iSK3iwUJpPqLNg1zFoK8mTp5TKOG9W8JjSA07ta1w46tawMCLgSc
P8yGgCO7d62f89OMWbOnXTh/tOJFq6K5FoW614x4MLAT/9j5J9Zrp+GhNeal
5paf59hMkeyyWRsRdeafF+Y/8bj9j99Rb7iF7++1xoLBzhpyZJXGB+VtXZM8
sF9EvWeimzdL+9+Q/D0b7eYotjCTWRkOuWAvD+y8i/wk6+UTOeuWpn//bVz7
NpH1nol5pUXyfz7M8p9XdP5wWUooiFtO4efefKGqWG+wr3qPj7n64gvPg6h4
+62uIUFnySow1sKS7AU/TYHjd9911+wZEzPY/TfUtvxiuD27HPaMkJTUKUei
Wy0JHr4nIio9jWyvIf+mabaDpaA08nLKV4OjmzbK3bSKvD6SMjNRbyCIL/yY
W/0bzvJp5Oa8BMvJiYXbBll3DyreIwk7B1l3DSqO3JMLZ0Ko2ODCJjc1giXs
xvmPP+r3Ts/u7/R682Z4txf8+92wL2fPmTl7ztTZMyfeDDMmrFuzxGY1cb8u
3ygjPzfp+MlDR44dSIi7QeSNL7JXayATUUrgyTT1m8+imjZOHzXMlh7JLkhx
sL6U6I2lv+Y/+4xt0wbUG27h63utJdhIY2opvnAkedDAiGfqxrR6NXPRzJLQ
AHt2vIOVB9m3rEARCAwyobR8U77y1Ss5EKGjMMWeFVeWeKPw5L6MGRPi3+oS
UfffrIAZ9kX+/s02c5TTmk7WvJAFIJLxlILsjOi2rV8DXdGvT69UdoYGsSH/
/JmDHdu3geNdOrXnJpEWqiSNdSD2jNKyjFPRSQM3hr2xNHjlhThLbjr3fkOF
zgrOHqgXoJeiGta3LJ4NCSFTRygD6g0E8YUrM0JvMKb0y1kL/20byr3LY7Qk
fOfHjPRj/ppWyD6wsP0MjMkctXT9bwtW/bKQhJU/s2H5ooUrFi9c/tu4KWN6
D3ivZ+/ePXp07/F21x5vkdAFPp84uqsit0SzOEr4zorK9742ysCOR4PbLEsI
NY0eFtnwudShn1uDA9jt1Jy5FdNXUG8Yhq9vN3WwZTqd2Y6i1Jw1S2JebRn9
YlPzxB+K/jriYBef5pfP6tG02qu8Dy2nfB9+R5YtI9oadDZv2xrT6O9i32gV
+dyz8W91zVoytyz+OtEwoHjzcxNF80WLC5KHffO5n99tb3XvHBt5iYswDw6O
GvF1rVq13mj7+tmT+x120Dk5SpYQsVFcZP71XGy7ZTf+szn8aHhiQbG5/E2v
sr+yc7mRm2AaPyKqSUPTuBE2U5TWFeKoNxDEF97MEL2RlR9etKypHUTFRD/n
j5Iw3o+Z4Ofc8W1xWHjSteCAK0HXlsye1KhWrbp+fv+uCE9zoe6ddz57372f
9e5ljr5qs+bZ7BY7kwMBPtjKMmwlpnJfIRMsN9+hUEX1hp2dtQLPlRlTx8W0
aJbU/93igCPskLTActQbBuL7O04RuFkKeWUpodCwRjZ4Lr5759xNq+yWWG4P
/AJj9nwrny5lJRfKP7g1Y/KYhB7dol96Ma7TG+YpY0tC/gI9X1iasWrd6pt6
w5HlKMsIunyyV49uzzzz9PQpYyNCL1y8cGTk8K+eb9Kwf993zpzYw3XW5Skt
3GYnZjgzw9JSh+2J6PjbjbEHoq8lpbAHGZlFr+WBHVTKdRalZcz8Mer5Rqnf
fl6WHEKGmTQNjKLeQBBfODRavaE444J1Kaa0yxn+TUt/8GMmSd6WDmGan3Oq
H9P7UUeDBgEN6r/RoH79dx+rvcbPb5+f3yYubPbz2/q327c/+MDuBvX2t309
8PNPi/74jbl4ksmM5XpoCys27LJyDzKZLhbXV0W9wTrSAlt6VNayBTEvvZjw
dpeiU/ud3G4ntyQN9YZx+P6mu8pndg0pk1caczXt2y+iGtZP+qh/ccBxri4Y
pDREgXu5Kttb6MgqCjjKDrK82Tm6eTPQHtnzp5mO7l6+evnBc8cKi9PJ6CTX
y5F37eq5r78a1K9vry0bVxzYs2HG1HHz5kwJZyUKN/W0LMMBjwm36gd2wgZj
KSvN2BOc+PGm8G6rbiw+E2vJM6l1a5SVbyLqKEi2/DwnqknDlMEflUZfJ9vR
aJ2FhXoDQXzh0yj1BlkzUiIZxWDZe2hln7b//fa+kBl+zGQ2iPXGTE5vNPBj
7r39xtAOn87/uPuWzz/NGzeCmTaudMq4knEjrKOGWUd+UzxsSNGQwYWDP7L0
fSe+feuYV1rEdWibNLC/aeKonPXLrUFnnewrSEo4P5bnVJ6PUeX0Buu9mWxH
YVrOWv+YV1vGd+uUt2u9k31DhPgtV6g3DMTn991F4Ho2SsIC2Jk8Deqnj/mu
LC2C7e/ywuIpbrgEil9ZXJBl0azYjm3jmjaK7N5514B+Z5YtzmfHL6ykV4Fd
FZuXvnjB9K6d200YN2LXjt+T2S3pctlhU0dWbOSlcyf3m5JDGcfNIRV2yQmT
mZSd7n8utuea0D7rwo5EJLHzQtVLMlupC+058SA2Ihs3TPqoHzfUaNWnu1Bv
IIgv3JpYb3B+RjSHk51+WVqYumbVL7NnTJg9YyL373j23zlTZ8+ZPvSH9/t3
HPL9o+HTlfXGFD/mn35Mo7p58fsvMynnmORQhyXWUZjiyE+2Z0SXJd0ojb5i
vXqm8Oiu3I0rLT/PTh87PPmjfnGd2sW0eiW2Xev4N7skfdDHNGpY1tIFBUd3
scPK5Rt8FUkHr6uY3mCtZae65W5cEdfpjdg2r4G4cpZlOuW2fEe9YSC+v/Uq
gevvKo2+nDb088j69TJmTODWKLneycqwwI2YcP9mlyWHZP+2KK5bx8u1a199
pWXaotklYRedBclQRE3mqIULZjSsX+/ee+5p2eKFfn17TRw/YsvGFQHnDx/a
v3nOzB8XzJ0aFR7IOLl9wLj3odhKMyLSU0cfiHx9yfVxB6MSMtLZlbA2hXUo
vDFMriM7nt37rlGDxP7vWa+dpV/9Kg2oNxDEW96MdFaQQYp87lGFpyQlMeji
+cMXz/958a/yEPjXkcDAi9u3rO7U6Y2GLPUbNmzUsFFj7vNz8OfCFZMyw4t+
b8WojKfAvx1qO97/yJqcnMVt6cO+1V26WK98rIQEaxrokMITe7P856cOGRzb
9vXIZ+tGPd8o4d23TRNG5e1gdwwoSwvn1u7lkZeaEf9TlfQGt8jRUZRacGRn
fFd2V4TstUu4yfby899QbxiI7+++WqnItmfHmyZ+H9W4QeZPU7kdQUFseL0M
cw09+3aSIlNe6IX93ww52bJF5DNPx7VrVbBicU5YwPQpY998u0uHjm0bNW7w
8EMP3XffvQ899MDjdR7797//1bJFM/g2NvJSSQlbncn7UMpKMo5HJL23LrTz
iht/XIpnx1AcGS42ALRzvX85CZmzJkU1fC754wHcRrt5jIN29as0oN5AEM/5
jfKJFuWBfZNIaRG751VJYXJJYVqJtaCkFCgpLTJNmvg9u2WWKNSv36Vz+327
N1y/HnT92vmgoGtB8OnapaCrp68HnbZkh+SH5K1obh+loDcm+DE/+jm3fVec
nGIpE727wZ55c8ke22XBL9nL50KOw5rOrtpLDrUGn8/fuylz9iR4uolq9nzE
s3VjO7QxT/oBBIk9M4ZNZsX+A6yYqRJ6g1t3ALYVHNoW171T9MvNM+dP5x5j
C5QeY1FvGIjvC4BSqYACbM+0LJgR/WLTtBHf2NLC2d1XfFiAWf1TXGjLXLtm
+aFlP6f/8lNy316xTRtHtnnt8Mf9T2xaFRwRGHj55N7d63+a9ePXX/1n0Kfv
jxvz3eaNy+OiL3OVOoexsUtOcgtMC0/Htl92Y/DW8OORScXq61BI4PaisWVE
m8aPBLGRMnhgSRi3YovJdWfnHNQbCOIZd2HmpnVZK3bqZve4CA0+37/fu926
tOc29+7YrVuXbizdu3XtNOK7r375deEvv877edGsijDz54VTt2xabSstkLPa
wVzaFTZ41uIHYkcrjKeM49atXJ5boPmtH9xC+4pOmBJQSuB7i/76M2fdsvQf
hiW881bM6y9Ht2ye2KeXZfFs69XTjM3CTfBghUpl1xvcTHuws2Df5vi3ukQ1
b5Yx+0fy7lfhYLfYT6LeMA7flwG5vCVzRPN2b4ht9UrSB31K465xRSLbtxvT
kf03Vq5bfejcsYKClJKrZzN/mpLwdteUVq9kv9+nbOXPDFt0gdTswiBz7iUb
E8P1OuZzJRZqvem8KfHrnRHdV4aMOxgVnJrKdXKqj4aYuRgKrEFnUz7/NLJ+
vdQhg0ojLnHbn7r7VkTUGwjiEV9hZ7flWb1icfkryaaPnz5jxqiRQ/v3e6dP
377cy8t69u79Xu8+fdh/3+t56vjuCnPs/NtJKihzOoohQrbCOtkZZfbMmNx1
S819X73wRJdZfjeGcftvSMNwbv+NY2OLuBeNueEoHKR3FxRFiSM3sfD0wYzZ
k9hNOF9pAc4ZPpinjis8uovda5EpSc6K33lgZ6XVG+yLHmyZBQe2xr/ZOapZ
k4w5k8uSI9ipsE61lgX1hoH4vAzIBHb/z5zSuKCEnt3ju3cqIqtRKkHRvWW/
r/xkouqt185kTB0X16519AvPp7zfwzR3Qdhqc/DvpaG/lwavLr62ouDKb/kQ
ri7PD1iaN/2nlDdXhSy5EFtQZJZ985o4H+ARw56Vf2AL1OuoRg3SR31bFh/M
vR7FAG2AegNBjPcS7LaEZUlxQe8PeE/41vWvvvxPriWGnW9pg3OyyB5cjNMG
j1Hc3uMWsrkfN8sin/vWAfGUr15hRwHYTs6yxGDLopkxL72Y1Lp++KAfN7ZN
XtzMtpQNZaLwSzPbkmZll5flM054fHPvMY1M7SCbNnOvtrSZowoObk0b9mXM
S80j6z2T0L1T5rTx1tMH4i4e37Vz0479OyNir7NDSJXAaZcHbvK/ozij4NC2
+K4do5o2zpwziRugd+1LUW8YiO9LgiiwW9nk2y2xpgnfx7Z+Nft3f6OaV/eD
eH9RMnDJDX2WRgRmzJyY3KnZlf9rM9sv8Qd2sx02jBeE0X7MT22KzscmO+GJ
Q+F9KBWZwG3bzuTa0qJzVv8S2+a16BebZvnPd+QmaNpB1EVyUG8gNR6P+Apb
VklhamzkpZCgsxXhTDLZNpBbWFrx4nUCPF8L3otqz2eXrtjynTaoj6S9hmcT
dn/jsoRg86TRkY0bxHftkLvxt5LUmLzE7KyorGy5kMWF4sxMdhm+Ue8ztZOX
ceeROR5lqWHFF45kzp+e8GanqHrPxL/cPPjjAYcnj9+3cW14xBVufmxu+YwR
T2SyBrM5L12WkbdzfXz3ziA24AmR65Chmv+GesNAfFwSpIFV+5aCP3dENW9m
+nGUPTuevG61MgTpfubscXv5bufOEpMj6WzSwo1z78v+gRs8FYXv/ZiNPUu5
iVUZint5lQuYHEdhivXKqfSRQyPrPwuCHGQ59yK5HAOlF+oNBPGMr+Dnbwj3
zSiueN+6aD2sxVmaxvZjOEqczlKnw8q2LGWZ3Gnsq89Jw10aF5Q2/OuohvUT
e/fM27PBXmjmREsWGaglgya3BpO7IykqoXwKPfv2WFtmdNHJfZZFs5I/6h/+
4vOBzzx9rm2r6HnTy9g9AQrZ1fq+7eXg9hBwFqbmrPGHB9joF57P/GmyLZmd
DUg5JI16w0B8WRLkb25xSURg6uefJPZ/ryjgKDfi5nurKmyT0xsklG/WkZUV
mr7o/0rHyM3gAhGytXcp5yJufbHLzeni3IxxJttuirT4z415uUVUg3ppI7+x
Xj3tJK+5N1QSoN5AEF94kgq9AW2Hw+60FzltBU57Ias3QGzY87lGkO/uYHVL
acxV05jhUU0aJfbpVXT6ALcLdxHnGH39olW2JzafG1lm39adMG3ChTatLjzz
dGjzZimfvJ/tP9967Sy3eNbKNvre76ZmX0JRbEuPtPzyU8xLzaNbNANdZDNH
V+xZRJV7qDcMxMfFVXRn2Q35s3PWLo1u1iR382qHNZN7aY7vDSs3T0VvlJ+Q
mZOQt6iuXVZvjPZjNrRJtV45wRTFcc8mJeUvaGb3US/kqmR+acwVy68/xffs
HtW4QcJ7PXLW+pelhJS/Hcb43Ea9gdR0vO5GoI1LZ7sviN6ACuKwsQFUR5mk
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
kXcbtS0x3TsDb0TYgDeKHocnhBCPoieIeUM2ZoSwRxfbzdRw8QZZlDg0Xy4b
k1jYZlvOokucQrmM8PhdRqtd8Godb5BVd5gH3gDFgGqquj3LG1Yt4o2Bwzbs
6f6DZNtGUpJdwwmWw9+YAG9E1oA31HSJQsUM+2OE0jHRMC8dMUTQpb3tVhoO
PK92ySSLoOJUlqj3vrze+/N23eOrTMrqOGyUPe3awxv44RI6/KTQz6pQB/AG
KAZUU9WtDG9c5g/ov3x3l+/lJw+RJgEZm8u0PW0ugDcia7WUN4q6ISPlUG00
6QQ89mNUzNx2BXZ5Qt1TUGYlSbN82CBhlw7uR1epvQX/3YpMJzco194Q9Nxf
OPw0N50rpz40Vnu3z5y2wyrdu3/3hYtJTrygbfXPmVlDTZ/p6JF9yUknSdL2
7OXg0DyFNJ/DztSqONQTt1A3U48aluCKCvAGKAZUU/1FmfmUNFb/L+ft7jZY
c/08Rv1Yf3kB3ois1VLeQFxh0PKl4jwWK+P+/atnEo/vP7An7Xwij/tEreaq
FKxgTK3lo405A75hdWwnu3pWpeKo1Jwgv1t6VwqWSVWoVLJuFPKmpbI/Xvvg
xwP3HxXkWXRsraoqOwxgGg1fwMvasn3LydNHhPwstaqK5xwlplZx0SXs3RN/
7NhBdGklL0et5oiFOdeupR04vPf4ycO3b10syH+APtGpuU6bPLiiArwBigHV
VH9Rkjc0SpN6dkJ2/+4z9/Yeoc++i15kYnpwgwDeiLjVOt5A5cfrVKqVrNu3
L+89sHvGvHlD40aPHDthxZpVZxJOpKYlnj13OkhLPp90NjXhTsd295s2ubB1
/dmUM+jP4L9ebKmppy+dP5OYkjjvYGrrldfeXXxt4s6U00mn01JPp6SEvLfK
D5eWeCrh2IKlS9duXHc64dg5dNrhPkRNGjp/ZOvWrdm0eQO6tFKXk5KakHz2
1Matm8b8MmnwiLhJM6Zvi9+afiVFKs73OJRBzLAAb4BiQDXVX5TkDa3CqJp1
IqNf95n7BozVF2SSpB14I2oNeCOMCqVEad12uViQnX4ldfuu7VNnzR7205if
J/yycu2q4ycOJyadPJN4/ExCUHb67OkzSSdvt219r/GH5zauOZN4Av0Z5Hdp
S0g8npx0Iinp+L4Tx3/YkvrO4pud11xdfjApIelkSjL+PKS9BWlJySePnTg0
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
/1SsDUU=
    "], {{0, 577}, {720, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{661.6666666666661, Automatic},
  ImageSizeRaw->{720, 577},
  PlotRange->{{0, 720}, {0, 577}}]], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.7241495263971415`*^9},ExpressionUUID->"49530945-4b28-4146-85f3-\
c4909ba11bed"],

Cell["Existence of a neutral element O  and inverse element -P", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.51429788253125*^9, 3.51429789296875*^9}, {
   3.51429844903125*^9, 3.514298457578125*^9}, 3.7241495263971415`*^9},
 FontColor->RGBColor[
  0.34509803921568627`, 0.18823529411764706`, 0.07058823529411765],
 Background->RGBColor[
  1., 0.7843137254901961, 
   0.5686274509803921],ExpressionUUID->"90600b1f-3881-4f8c-a75c-4c86e5fa063c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
E4S++Qx3MouHgTd+ZpNg3KNvBDwmXiV1eK8emlO4488sz/LQsOAcseDlEQ7i
7Z16ax4uDQ+F5Q4jcBibIZ2+uZAPUYJjgrHpKkhZz6ubMuawOiWbVbCCmrls
eN481H6slP9PyoeohiYRGNx1Yfg8Mpk7mcWrmHiVTQJ+jz4T2Jh4m9ThvXpo
TuGIP7M/y+XE8zpuJqIGL49wDTb36I8VGQFmh5EDB544VGDhv/Al/MR+SIlv
LuQMuCuzDIj925xZwMSr+PgGqAiQBA7uZ9sIwzkrOWysEKgx2D6fBRkNEsqW
dKAo4L8Og3ID9aS8CjCUiUAGbZoARzKLu5h4cFQ/Q/bhHv0kUDHxLanDePXQ
nEJywJ+9OgtcGmpn9lGFvz30OwQvjyAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiBBhUAQJKyEuwxAEATxhXCXnQhS3Al3GYAgCOIL4S47
EaS4E+4yAEEQxBfCXXYiSHEn3GUAgiCIL4S77ESQ4k64ywAEQRBfCHfZiSDF
nXCXAQiCIL4Q7rITQYo74S4DEARBfCHcZSeCFHfCXQYgCIL4QrjLTgQp7oS7
DEAQBPGFcJedSMSAzhMkQp/rEQRB/CfcZScSAaALBZXQ5HQEQZDAEu6yE+E6
jJ9YrVaZTPbkyZPbNDweT6VS2X4Ndxwjm/DlfgRBEN8Jd9mJcBebh4BUePTo
0erVq7/88svKNL17996+fTuoCI1Gg77kJ2HK+giCIH4R7rIT4S6Mh6Snp2/d
unXw4MEVKlSIsaN27dojR448ePCgVCpFX/KH8OV+BEEQ3wl32YlwGp1Ot2vX
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
6QczPWDSLDUk3pLOncavW0vYpKFi/VKLlE9NYoJYcXHMpL2hfogquKwfKKVt
lakUGbdvnJnx58RmsQ3ff+/dN98s0bpV05XL5/1zcOu0P8a1//yzNp81/230
sPirJyn9QKjJwtNRP4T/8ZEGSy5fvmyeMLahILahYu1iq4Zep5pztSTUDxFs
xUU/WAq2vDdlJebOniJoWE/YrLH0r+nGlPv0+lFKzouHXNQPUQan9QMzeJLU
56vTNq1fWr9urZhnnnn22f/r1aPrk0dXSUJz+vje2Mb1Y2Ji/vdmiTkzf1fJ
hIQ1z/bO9U4/MMP8CEVBVwi940zhcAttodlGXzADMFQFW+JaA7CxXXTpBwlB
DQ5XW/Oy8/b/ndqqmaBuTen86Qb+PSbdwh09VxE2oX4IqEGOCFUTU9j0w7WT
RM2qRJUKxNmDtH5QBbUIZcolc2aCfN0SYdPG/BpVJTN/N4keEmZ6BRVuNei5
M9QPUUUk6AdTvkq0YN70UiU/Bqnw0YfvT544Ojv9EUQ+6fG1ju1bx9B8/13f
xEfXLEZ6soZFSlI7REtJS+7K68JOWx4vuCRIl+dQ20YT1Jc2oxQ7PY2aGmsB
pQ3dY0ISckpIFG1ypoeFqk1TQzVkBWWmTxk5uvRDLiW0CIXm1IH0Pt15VStl
//Sd4ckNwsys9sDBm0L94KUVZBwZ3Uhol2VI2mx5hHT4xlV+8TsyYdMPt84T
n7Ugmjch4o4Ht/0BUokah6yx5mUoNyxLad1cUL+2eOJo3e2L9CxOdYSIh1zU
D1FGROiH3OzEkT//8NJL/wWd0Kxpo21/r1JK+SRpTE643q1LR0Y/9Ozx1e0b
Z60GMT33Gc6S0CZencDrsP/BwnvJEiIL/st8WWgSurVBB0HBJ1zOLE7SP7ii
OXdYfWCrctsaxcblslULZUvnShfNgk/56oWK9UuVf69W7dmUd3yv9upJ/aNr
powEqzaLbp0wM+FQVWzvqwPRoh8kdLdFHmGU6+/FZf4wILlyhYz+PbQXjtAT
MXRPyxBuGeoHL40ZxUfViDW0zxto5zfRuQBMX9h8B99Y6G9M9AEG+mAt/aua
GR4TiLa7kO/fbZFTjiHJJP45Qhw+RGSn0Q5joN6MzAEBvRyd1HpzrlC1Yz29
dmuF7BE/GB5eserlnOwN9Jh0JtQP0QOX9QMlHuAFSuSDTvimWydGJ/Tr0/3+
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
Uu839XHID+XixCVd6L/JONVE4S3v8UT7b4uMn38Kmj5Fw/pgsKPu3d088yvX
jvXB66cZfSEvrjug1djyRMkV+MHLujTBjDO2X+ZrB/aR1X9H0byJ8fNP3Anb
yJI7yGveV/O+onWoaogfxZAYQVhp2m5yWg9ma3beMZRhAbSagQ4kMALrDX9X
bVEE64Sr/7Q9mH5aO6ifosX7zo2/cU41iqEUPytQleYH+oHwUwDIuYCJdapp
RY7/fDJ4jgzjRqnatJC98ZrszddU7VsZxo5wLZsVTFyVP+/Cpjdcc1BinSfx
A3gFCLHlz9fv/LOv9t2/a7u0sM771n8pDVAKegbhRhQYLAIaWx1Cvj9sELoC
hXx/olkSP8SVxSQ/8DAAC20ocm1epe7cTj96GFlwEwyyHvJ+imd+KFdoYgFu
m2TtyuD1U441vxgnfgIXNdq2UnfpqO3fyzByqPnLidiCOc5NK90Hd3jTEvwX
jgUzzgZvXwzePOe/mOpJ2gvGWZbvp+tHDFa2a6X4oKmmdzfb4h/Lt0rGxyr5
U1UN/ABzv3J2gbP5ApZ8g/6GQl9gxCyeAM2WP20MfNBC7XxtzDkLvJ/nHDC3
5pJ56u6dDZ+OBIgYdrio8zKvvsusAj+UK7S/SPR1IkCFpzR5gfQz4EmxL19k
njpJP3KIpn9PQ69Whi4N0t/9au1fZHMRITxl/gHQxfb/zMnrO9u9cJIvZTsl
z0EnGY41wfpQpy9Up1hC4gfJat9ikR/Q/j2P78Qh/ceDdcMHuvZuZmzKRz0C
Xgh+KPdeR2vZHG7hfHrGXIpnXnbv3WL9YaZucD/AA2WvvVL22quKpu+pu3bS
DRlgHD/GPG2yZdY35hlfgp81/XspmrxX9uorsob1tUMHgPEX4ArWoeLFiDd8
1KTuqkE9hR+oysavhssZgp0lrSanyeS2E1QQ8wXVTtwZRA0maDmhg4Y3fNjK
PnRYpDMYcHtkkPMZHOuXqz/sqB811JuyH+VI9Yo7CeNGz8UPFfXAugYucC7a
UOK/csK5Y63tp6/M4/rfajtv3cvKH546/yCuX+xtadceyRX8RWiKAw+HSUG3
DPID+9h+s0om8gMu8YNktW+xxg92lHzTxTo02KIf5I0bWubMoHWFPOPg2Ydn
118IfijX/WEUISbRZixleM413+kjrr2bbMsWWGZ+BVABDKZ0QwdoP+qj7dtD
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
8vkjAmO5gbzkTHA7ad6d3qDZ5rE6PcGAR3hrIw6/QD+kD/HYf1JYxVPDYpJC
KJwl5ykpODTptX91vuhCoh/+9Kc/zp4x2e+u5E91gX5IIxN+a5sn96Bl+iT+
/ezA/o7vv+A8whIzf8unGvohhQ36QTVn+I31bJzH7Dmyq2r888cv7lx01yD7
5rVBe7VwZHBsZ2JIzgRvPIeLX5xCJAR9uuSFhDCxBPohLYjR/pNyM1Ta+dcT
3n27frj37rvatW37m5NOuurKnh8vmefnT2x0R3p0LPRDUhs/0YU0JlZ31k+l
D9+X061r1b+fdx/+WWjxWr4dhn5IYYN+0DLhGFzSvPBvMYbcnntFD9OLzzr3
bBT2u7bHJ9DGBbCNZ4IHAydqU8DNPx3wFc0J/ZAGJNH5FwGrx12VfXjPW1Ne
6X5xlzZt2pzSrt3lPS97beKLh/ZtsdVX8K1BJL0/9EPyG5GFnKvS+tF/Cvvf
lH/d1TXvTQ3ayvhzMYyvUjdm0A8pbNAP+vkTcvpLf6ldMLOg/025va+wzHgj
YC1uPFor9jOOmp0J3mwnLuiH9CJJ9INw5oXdbi1es/rjp/75+MAB/frecO0t
/W4YctfAF55/+qvMpVXlRxsP0Y6g1kA/JLvxsyCCtb7Cw+bJL+d061Jy3xDX
ro38V+R6i6Yd+iGFDfpBJ38C/NZtnLfGV5RV+e8xx7t0Kv7LnfymlNYyYQl8
nIo3VRHimeAu3oiW8NP3F9AP6UCS6AehjFk9jvKjv+z84dvV3369/LtvVn6/
YRWx7Vu+Pn5kl91axHcoGH9IMyMtGy8LbfZNa0mblndFj6oJ4zy5+/mJlPzb
jRYrkNAPKWzQD2y55CRy3fbt6tJH78vrdUX5U084tn/DH2DHr5tusWhg/WZa
kUT6wWcONZ1i33T8Ft3wwSY/m5utvkA/pIDxEx5CTn9VrvWj+YU3XZ9/Ta+6
pQuCTmF2RMtNpIR+SGFLpH648TquT++U0A+ccCBRoDq3/vNFBf1uyL2kW/W0
10m9CwWFcd34rpsW58Vh/UVakUz6gTdhwVH4wVvCng+c/m5RCl5BP6SK8S2Y
1V/yS+WYjJyuncv/+bhzzyaOX3TT0FLbQUA/pLC1uH4wq+wfldz6gW5KGbL7
Sn+pfPHZ3O5diwbfXr9iib+2kJ+d3kLDfRh/SCuSTT/E0KAfUsiEgSZrw5pP
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
dIOD306qhgvWxPRcTuiHFDZaTeosBSWF2ZVlx1wN5UGPmZffzebJ6OsH8pg/
evRosYMm/XW35nTt2vW888479dRTybePPPLI5s2b7XZ7U0OqhcfjKSkpoUP9
FRUV5PGcpdcmf4mkWbBgAVEs55xzzrnnnksiQGNC4tahQ4cuXbqMGTMmOzs7
EAioxSHC7kDVhy1btlx99dU0c84+++yLL75YkjkXXXQRieRvf/tb8mHq1Kn5
+fk0Vs29hX5IK6AfEhxJvyXoNfucJn7HJHv5hm+/Wrh4wa5dm+qq850NpX5P
VTz3ok8FI4+Q/M5RDnfWT/y5nJd2q5403pOzVziXsyF2AUE/pLz53ZVep4n8
5byKDpj0w/PPP0+7yD59+ixbtmyvwJ49e+iHrVu3zp8//+abbz755JNJBzpj
xozCwsKmhlRVBhCKiopefPFFOtRP+tba2lqWu8gj/M8///zwww+Tfvn666+f
OXMm6cRpTD799NPHHnvsj3/8Y69evT788MOamhrxrjjpB5J2EnmaOSNHjty5
c+fe5nz99dfjxo3785//3K5du7vvvpv863A4ZN5CP6QV0A8JjiTRD75qj9Nk
sxbn5Rz4fMWnCxb/d+u278jn4oLD9vpiEuFQ3E+fTG7jJ1K6AjUFtQtmFQ7o
Vzjg5rqlC/inS36j/liFAv2Q8ia876uRvbYQLTL9MHjw4NLSUnmDSfrEKVOm
nHHGGe3bt7/ttttIh97UkGopgSNHjtxyyy3U50cffdRkMrHcRWTG8uXLr7rq
qg4dOowdO7asrEyMht/vJxLisssuIxLilVdeycvLCwaDcj+9Xi+J4dtvvz1V
D6KFduzYEQgEWPTDrFmzFHuTAwcOkHw76aST/vd//3f8+PFVVVWyKEE/pBXQ
D4m3YE3AX0PUwqrMz6fNmvHuvDkrM5dt/HH9vn3baqvz+B328BaD4yfYe47v
NY3JON7pgopR//CVZIeCdbE7bhj6Ie0tMv1w5513FhQUKLaZc+fOJfqBuOnR
o8f69eubGlKtHrC4uPjee++lPj/99NM2m03WDivcnpWV9dJLL5En+o4dO5JA
6YwCkZ9++unWW28lMSEP++vWrXM6neFe0c8kICI8tCctiLz66quK8x7plXD9
MH36dMWcITn24IMPEgdt27YdMWJEeXm5zDfoh7QC+iHhJuzB25BzbP/8hf8Z
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
    "], {{0, 517}, {704, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{593.9999999999994, Automatic},
  ImageSizeRaw->{704, 517},
  PlotRange->{{0, 704}, {0, 517}}]], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.7241495263971415`*^9},ExpressionUUID->"990ff6be-7f18-4ea2-aa5d-\
85088d4e86ba"],

Cell[TextData[{
 StyleBox["Neutral element O is a point with y = \[Infinity]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 ", which is added to the \ncurve to complete its group structure."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5142979490625*^9, 3.5142979780625*^9}, {
   3.7231140987669077`*^9, 3.7231141153303385`*^9}, 
   3.7241495263971415`*^9},ExpressionUUID->"913db00e-f78c-43cb-838f-\
c80321832bc1"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "4. Discrete Elliptic Curves - ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " implementation"
}], "Section",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.514291414109375*^9, 3.514291438078125*^9}, {
   3.514291524875*^9, 3.51429153853125*^9}, 3.51429174865625*^9, {
   3.5142920093125*^9, 3.51429201984375*^9}, {3.514299926125*^9, 
   3.514299942453125*^9}, {3.514547819828125*^9, 3.514547822171875*^9}, {
   3.724149563133402*^9, 3.724149585572018*^9}, 3.7241496575132093`*^9, 
   3.724150375440709*^9},ExpressionUUID->"d95d3257-f50b-495d-8a48-\
f19393d206c7"],

Cell[TextData[{
 "Discrete elliptic curves over finite fields ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "q"], TraditionalForm]], "None",ExpressionUUID->
  "2ea42a43-d5cb-445f-9ba4-2735efdc23f9"]
}], "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.51429788253125*^9, 3.51429789296875*^9}, {
   3.51429800175*^9, 3.514298018203125*^9}, {3.5142982878125*^9, 
   3.5142983184375*^9}, {3.514298652890625*^9, 3.51429865378125*^9}, {
   3.7232127120907965`*^9, 3.7232127187943*^9}, 3.7241496575132093`*^9},
 FontColor->RGBColor[
  0.3176470588235294, 0.17647058823529413`, 0.06666666666666667],
 Background->RGBColor[
  1., 0.792156862745098, 
   0.5843137254901961],ExpressionUUID->"92f323ac-e616-455b-9d28-789242161798"],

Cell["\<\
Discrete Elliptic curve consists of all points (x,y), where x and y are \
integers between 1...(q -1)  where q is prime.    All calculations are \
performed mod q. \
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.514298619765625*^9, 3.5142986514375*^9}, {
   3.5142986829375*^9, 3.51429878878125*^9}, {3.515036703140625*^9, 
   3.515036703609375*^9}, {3.7231871907103043`*^9, 3.7231872318217826`*^9}, {
   3.723187262682796*^9, 3.72318737689186*^9}, {3.7232127364358177`*^9, 
   3.723212757249426*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"44b8face-6c0a-48e1-9b53-\
639b15b888fe"],

Cell[TextData[{
 "E(",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "q"], TraditionalForm]],ExpressionUUID->
  "e75f2df3-6286-4456-8ddb-3b58fb6eb20a"],
 ") =  set of all integer pairs (x, y) , where 0 \[LessEqual] x,y < q  \
satisfying \nequation   ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "2"], TraditionalForm]],ExpressionUUID->
  "e3ffacaa-48f8-4bc8-acf5-c978913ddfad"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "8bb0f893-3f6b-4717-a910-d7ecec623743"],
 " + a x + b   (mod q)"
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{3.7231873840641084`*^9, 3.7241496575132093`*^9},
 Background->RGBColor[
  0.8862745098039215, 0.8862745098039215, 
   0.8862745098039215],ExpressionUUID->"ff5040d7-f282-4b5f-986c-fb5b5d0563d3"],

Cell[TextData[{
 "Example : Elliptic Curve ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "2"], TraditionalForm]],ExpressionUUID->
  "d34862f5-9fed-4ba2-945b-5da91eb92e70"],
 "= ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "fe8b6503-e581-4587-877c-1bc38ed6c851"],
 "-3x+99  over ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "281"], TraditionalForm]],ExpressionUUID->
  "841de8b9-4f76-4897-aea5-2f7ca31f71be"]
}], "Chapter",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.723118532427951*^9, 3.723118582274394*^9}, {
   3.7231874970699835`*^9, 3.72318749969512*^9}, 3.7241496575132093`*^9},
 Background->RGBColor[
  1, 0.85, 0.85],ExpressionUUID->"36553e7f-6650-4725-b45b-04faa60ab81e"],

Cell["Listing the points of the curve", "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.723118691999077*^9, 3.7231187115782585`*^9}, {
   3.723128850885835*^9, 3.723128867246051*^9}, 3.7231289255459175`*^9, {
   3.7231303758390865`*^9, 3.7231303829487934`*^9}, 3.7241496575132093`*^9},
 FontColor->RGBColor[
  0.3176470588235294, 0.17647058823529413`, 0.06666666666666667],
 Background->RGBColor[
  1., 0.792156862745098, 
   0.5843137254901961],ExpressionUUID->"8d7b5d38-c6ae-4a8a-a4be-cf66a5495149"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"q", "=", "281"}], ";", " ", 
  RowBox[{"pts", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"x", "=", "0"}], ",", 
   RowBox[{"x", "<", "q"}], ",", 
   RowBox[{"x", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"y", "=", "0"}], ",", 
     RowBox[{"y", "<", "q"}], ",", 
     RowBox[{"y", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       StyleBox[
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            SuperscriptBox["y", "2"], "-", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["x", "3"], "-", 
              RowBox[{"3", "x"}], "+", "99"}], ")"}]}], ",", "q"}], "]"}], 
         "\[Equal]", "0"}],
        FontColor->RGBColor[1, 0, 0]], ",", 
       RowBox[{"pts", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"pts", ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], "]"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"pts", " ", "//", "StandardForm"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.466587524515625*^9, 3.466587624890625*^9}, {
   3.7231172185353374`*^9, 3.72311725659986*^9}, {3.7231173692778263`*^9, 
   3.723117372387407*^9}, 3.723118631261417*^9, 
   3.7241496575132093`*^9},ExpressionUUID->"d049071c-3afc-4e4c-bb76-\
45301f21ca1b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "246"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "107"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "174"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "277"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "126"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "155"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "276"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "58"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "223"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "278"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "122"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "159"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "251"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "139"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "142"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "88"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "193"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "255"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "229"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "84"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "197"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "274"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "95"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "186"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "229"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "237"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "234"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "88"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "193"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "280"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", "129"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", "152"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "65"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "216"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "57"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "224"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44", ",", "264"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "225"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", "255"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"49", ",", "108"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"49", ",", "173"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"51", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"51", ",", "248"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", "111"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", "170"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"56", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"56", ",", "259"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"57", ",", "137"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"57", ",", "144"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "119"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "162"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"65", ",", "58"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"65", ",", "223"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"66", ",", "55"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"66", ",", "226"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"67", ",", "122"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"67", ",", "159"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"68", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"68", ",", "268"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"70", ",", "120"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"70", ",", "161"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"73", ",", "67"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"73", ",", "214"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"74", ",", "112"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"74", ",", "169"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"75", ",", "116"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"75", ",", "165"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"77", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"77", ",", "251"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", "57"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", "224"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"82", ",", "112"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"82", ",", "169"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"84", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"84", ",", "259"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"85", ",", "69"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"85", ",", "212"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"88", ",", "43"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"88", ",", "238"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"89", ",", "89"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"89", ",", "192"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", "267"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"91", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"91", ",", "275"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"92", ",", "66"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"92", ",", "215"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"93", ",", "123"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"93", ",", "158"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"98", ",", "107"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"98", ",", "174"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", "280"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"101", ",", "90"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"101", ",", "191"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"106", ",", "85"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"106", ",", "196"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"107", ",", "137"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"107", ",", "144"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"108", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"108", ",", "225"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"112", ",", "134"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"112", ",", "147"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"115", ",", "104"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"115", ",", "177"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"117", ",", "137"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"117", ",", "144"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"119", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"119", ",", "276"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"122", ",", "130"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"122", ",", "151"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"125", ",", "112"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"125", ",", "169"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"128", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"128", ",", "225"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"129", ",", "70"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"129", ",", "211"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"130", ",", "91"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"130", ",", "190"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"131", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"131", ",", "239"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"132", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"132", ",", "258"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"133", ",", "128"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"133", ",", "153"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"134", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"134", ",", "260"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"135", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"135", ",", "241"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"137", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"137", ",", "245"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"138", ",", "72"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"138", ",", "209"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140", ",", "240"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"141", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"141", ",", "259"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"143", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"143", ",", "230"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"145", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"145", ",", "280"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"148", ",", "127"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"148", ",", "154"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"149", ",", "136"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"149", ",", "145"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"151", ",", "105"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"151", ",", "176"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"153", ",", "49"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"153", ",", "232"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"154", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"154", ",", "276"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"156", ",", "115"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"156", ",", "166"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"159", ",", "57"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"159", ",", "224"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"164", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"164", ",", "265"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"165", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"165", ",", "266"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"168", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"168", ",", "241"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"171", ",", "37"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"171", ",", "244"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"172", ",", "37"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"172", ",", "244"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"173", ",", "49"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"173", ",", "232"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"174", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"174", ",", "265"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"175", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"175", ",", "252"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"176", ",", "60"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"176", ",", "221"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"177", ",", "59"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"177", ",", "222"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"178", ",", "107"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"178", ",", "174"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"179", ",", "134"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"179", ",", "147"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"180", ",", "99"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"180", ",", "182"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"182", ",", "59"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"182", ",", "222"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"184", ",", "113"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"184", ",", "168"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"186", ",", "79"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"186", ",", "202"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"189", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"189", ",", "251"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"190", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"190", ",", "217"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"191", ",", "132"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"191", ",", "149"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"192", ",", "83"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"192", ",", "198"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"193", ",", "63"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"193", ",", "218"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"197", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"197", ",", "240"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"199", ",", "115"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"199", ",", "166"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"200", ",", "122"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"200", ",", "159"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"201", ",", "130"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"201", ",", "151"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"203", ",", "59"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"203", ",", "222"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"204", ",", "66"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"204", ",", "215"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"205", ",", "58"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"205", ",", "223"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"207", ",", "115"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"207", ",", "166"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"210", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"210", ",", "255"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"212", ",", "75"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"212", ",", "206"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"213", ",", "121"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"213", ",", "160"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"215", ",", "71"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"215", ",", "210"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"217", ",", "38"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"217", ",", "243"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"218", ",", "98"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"218", ",", "183"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"219", ",", "37"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"219", ",", "244"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"220", ",", "61"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"220", ",", "220"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"223", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"223", ",", "229"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"224", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"224", ",", "265"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"225", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"225", ",", "240"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"226", ",", "135"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"226", ",", "146"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"227", ",", "88"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"227", ",", "193"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"234", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"234", ",", "227"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"236", ",", "49"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"236", ",", "232"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"239", ",", "130"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"239", ",", "151"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"243", ",", "97"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"243", ",", "184"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"244", ",", "74"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"244", ",", "207"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"251", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"251", ",", "181"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"253", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"253", ",", "235"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"254", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"254", ",", "254"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"256", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"256", ",", "279"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"257", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"257", ",", "242"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"259", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"259", ",", "241"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"263", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"263", ",", "253"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"264", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"264", ",", "257"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"266", ",", "66"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"266", ",", "215"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"271", ",", "134"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"271", ",", "147"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"274", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"274", ",", "236"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"278", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"278", ",", "272"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"280", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"280", ",", "246"}], "}"}]}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{3.7231172625533047`*^9, 3.7231173738249454`*^9, 
  3.7231186326520815`*^9, 3.723188041676392*^9, 
  3.7241496575132093`*^9},ExpressionUUID->"3a6a6c28-c55f-45bb-9e6e-\
afec8f065ded"],

Cell["Addition of Zero Element O completes the group ", "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.723118691999077*^9, 3.7231187115782585`*^9}, {
   3.723128850885835*^9, 3.723128867246051*^9}, 3.7231289255459175`*^9, 
   3.7241496575132093`*^9},
 FontColor->RGBColor[
  0.3176470588235294, 0.17647058823529413`, 0.06666666666666667],
 Background->RGBColor[
  1., 0.792156862745098, 
   0.5843137254901961],ExpressionUUID->"04bb435c-be7a-4e7f-8ce0-5f5ab371e923"],

Cell[BoxData[
 RowBox[{"pts", "=", 
  RowBox[{"pts", "\[Union]", 
   RowBox[{"{", "O", "}"}]}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.723117605268427*^9, 3.723117640457828*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"9284cd39-f1a5-48f6-a190-\
d6ad7a883df0"],

Cell["Calculation of the size of the group ", "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.723118691999077*^9, 3.723118742892414*^9}, {
   3.7231288768090057`*^9, 3.723128931655571*^9}, 3.7241496575132093`*^9},
 FontColor->RGBColor[
  0.3176470588235294, 0.17647058823529413`, 0.06666666666666667],
 Background->RGBColor[
  1., 0.792156862745098, 
   0.5843137254901961],ExpressionUUID->"341dac4e-1bc6-4e71-a70b-e2b1db240936"],

Cell[BoxData[{
 RowBox[{"n", "=", 
  RowBox[{"Length", "[", "pts", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Divisors", "[", "n", "]"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.7231172384114127`*^9, 3.7231172507245455`*^9}, {
   3.7231173260098968`*^9, 3.7231173607617855`*^9}, {3.72311766758433*^9, 
   3.7231176977109575`*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"095f900d-91fb-4b2a-a6bc-\
8a2695a145db"],

Cell[BoxData["291"], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.7231172440679345`*^9, 3.7231172514120784`*^9}, {
   3.7231173329008627`*^9, 3.7231173791533575`*^9}, {3.723117681006895*^9, 
   3.7231176985859747`*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"49748f7e-a1ba-4a4e-900c-\
7438e30095b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "97", ",", "291"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.7231172440679345`*^9, 3.7231172514120784`*^9}, {
   3.7231173329008627`*^9, 3.7231173791533575`*^9}, {3.723117681006895*^9, 
   3.7231176985859747`*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"c6126a13-4178-4c7a-bccd-\
a1c78c20b8f7"],

Cell["Visualization of the group elements", "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.723118691999077*^9, 3.723118742892414*^9}, {
   3.7231288768090057`*^9, 3.7231290831008763`*^9}, 3.7241496575132093`*^9},
 FontColor->RGBColor[
  0.3176470588235294, 0.17647058823529413`, 0.06666666666666667],
 Background->RGBColor[
  1., 0.792156862745098, 
   0.5843137254901961],ExpressionUUID->"10cf9654-0237-4e7e-b438-ce69edc40db2"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"pts", ",", 
   RowBox[{"PlotStyle", "->", " ", 
    RowBox[{"PointSize", "[", "0.015", "]"}]}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.723117411186344*^9, 3.72311744057859*^9}, {
   3.723117492940796*^9, 3.7231175300300198`*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"8d753e7f-b8cc-437e-b188-\
697b6d52dfe1"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.015], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxtl0tyVDcUhpWMMmTgAQMGNwwyoCiqU6mYlCGOMHZ42Ca2IR3TtBu5Ex55
YWcHWkKWcJfAErSUuwSWQCX5v1P1q+KBT319rnSko/OQPl9fnLz6NKV0/ZOU
/pH6y//+r/eycXsn3hAvOn4lvip5xfnoL/E1zf/SufwsHnxeODP+C8lD5+l3
8Q3Jz5wL42/K/sp5wv4tyW3nciGeic+dG/yV5Nx5eCu+LbnlPF10vz92Hv8Q
35H80Xlk/ruS15wH9q99tZ+c8xtx7uxnt1/Rf+88/qnfFTf1gXOWPuJq7hz+
2ZH88J1xZf339X1xTjq/Ks5Hzon42NPvB84J/2pf6UvneimJ/sB5YPxDyS1n
zreif+E8Kn/qI8nsnBi//59sL5wz+ce+Np1nrF88nDunteQTzX/mnH+RlF/J
P5j8q/h93znLPw39yjny71jyhnNj/ehXzgPrO/F5g3/T9+K0dB7kv4b+zHlk
/qfSbztHfXimeQ+cia8KL52xH3m96cz5ZXE+dq7aX+TVnnNT/uX5/8uk/Kvw
Tef3st/QX3WekZ+qK5w7PGl9WdxWHZO/p+JFx/jnuST1QUx9yPDceVJ9q5o3
/Iadt26X/Ig+t5ZU3kWeiSP/da6tOBeNb+K0cB5ea11nbh/GfuTlhjP9kbzK
xXnS+EzfXTpH/LHuA2f2R92NvBMXzldMXATL/4X595wn+gP6286D4m9EX5wH
xU/4/WvnrPET+l3nQfcb/E7fgUfpM/oT54H6Ql3ddU4aP8KbzuT3xPhHzg3/
rzVe8Q8T/1XcXjpn+Wdk/Lkz80ScLJyT4hM/07fgRH2BN5wjPjmnZceqr/QB
6mf0BeqnvuPeBf9NfKC/5TxKn4jzXWfOv9CHdzqWvnb62umjj3d9Hf9EHZs5
s/4J/bfOlf6ic6Avw6P6L3WkHjo36TO86Fh2ClycqV8V/WnHncR+6+wn1YG8
dOYcuIe2p875V+2T77ed6b/UmXTkPMh+9IHiHHlBH3jWsST31PqDc9b83MPJ
/7iXKz4m5lt2TNxqn/E+EZMHg5i6CpOnhfGHzvi/oj9ypj+PYu53MPe7ifmW
HXM/4h6y5Rz3XzH3qmDOlz6yck7UB74/dsYO5xzvBHGhfuOHU+eJOEe/0zH5
Dz/pmHmw/9g53m/ImTP5T58lfuJewfrF9C04r7Vevp87R5zyTtt35rtKH37o
TP2iT+eub0f8sc5TZ/I8/HjiTBzFPfq580idQ//AuVBf0d9xjt/pA8n5Uv3p
Cu+M+85Z66RP0z9g+scl+rvOrJN3ZPrGGTv0KfITJs4/cA8vztRn3vnxLoU5
Z+7p1zvmO+Q95/YufwQqGipf
       "]],
      FontFamily->"Arial"]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{587., Automatic},
  Method->{},
  PlotRange->{{0, 280.}, {0, 280.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.723117417046036*^9, 3.723117441734864*^9}, {
   3.723117497903249*^9, 3.723117530311251*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"810867a1-58f3-40c7-b168-\
05db4a734024"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" Function EllipticSum for group addition  ",
  FontWeight->"Bold"]
}], "Subchapter",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.405165627484375*^9, 3.40516564159375*^9}, {
   3.405165718265625*^9, 3.40516572521875*^9}, {3.51429896553125*^9, 
   3.514298970921875*^9}, {3.514299780953125*^9, 3.514299788359375*^9}, {
   3.7231877399263325`*^9, 3.7231878186960835`*^9}, {3.7231884029411306`*^9, 
   3.7231884101290035`*^9}, {3.7231905653483047`*^9, 
   3.7231905765676384`*^9}, {3.7232149297998924`*^9, 3.723214934175121*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"105b880d-abe2-4da9-975a-\
7c29f35dcb1f"],

Cell[TextData[{
 "Arguments:\t \tq = prime modulus\n\t\t\ta, b are parameters of the curve\t",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "2"], TraditionalForm]],ExpressionUUID->
  "98c936d0-fecd-45b8-a959-1cf13798611f"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]],ExpressionUUID->
  "99c2eb48-cc4c-4cd4-afd2-ebebfcaedb3c"],
 " + a x + b\n\t\t\tP_list = point P  in form { x, y}\n\t\t\tQ_list = point Q \
in form { x, y}\nEllipticSum  returns the sum P + Q \n\nFunction must also \
work in special cases, when either P or Q is zero element O,\nor P equals Q."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.405165697234375*^9, 3.405166087234375*^9}, {
   3.40516615428125*^9, 3.4051661585625*^9}, 3.7231905941778936`*^9, {
   3.723214424461116*^9, 3.7232145124500666`*^9}, 3.7241496575132093`*^9},
 Background->GrayLevel[
  1],ExpressionUUID->"c8fa9561-f554-446e-8810-4d7a242f1ebc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EllipticSum", "[", 
   RowBox[{"q_", ",", "a_", ",", "b_", ",", "P_List", ",", "Q_List"}], "]"}], 
  ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", "x3", ",", "y3", ",", "P3"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"P", "\[Equal]", 
        RowBox[{"{", "O", "}"}]}], ",", " ", 
       RowBox[{"R", "=", "Q"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Q", "\[Equal]", 
        RowBox[{"{", "O", "}"}]}], ",", " ", 
       RowBox[{"R", "=", "P"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"P", "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", "\[NotEqual]", 
        RowBox[{"Q", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Lambda]", "=", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Q", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "-", 
              RowBox[{"P", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "*", 
            RowBox[{"PowerMod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Q", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"P", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"-", "1"}], ",", "q"}], "]"}]}], ",", "q"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"x3", "=", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Lambda]", "2"], "-", 
            RowBox[{"P", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{"Q", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "q"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"y3", "=", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]", " ", 
               RowBox[{"(", 
                RowBox[{"x3", "-", 
                 RowBox[{"P", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "+", 
              RowBox[{"P", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ",", "q"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"R", "=", 
         RowBox[{"{", 
          RowBox[{"x3", ",", "y3"}], "}"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"P", "\[Equal]", "Q"}], ")"}], "\[And]", 
        RowBox[{"(", 
         RowBox[{"P", "\[NotEqual]", 
          RowBox[{"{", "O", "}"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Lambda]", "=", 
         RowBox[{"Mod", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", "*", 
               SuperscriptBox[
                RowBox[{"P", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "2"]}], "+", "a"}], ")"}], 
            "*", "\[IndentingNewLine]", 
            RowBox[{"PowerMod", "[", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"P", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"-", "1"}], ",", "q"}], "]"}]}], ",", "q"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"x3", "=", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Lambda]", "2"], "-", 
            RowBox[{"2", 
             RowBox[{"P", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "q"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"y3", "=", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]", " ", 
               RowBox[{"(", 
                RowBox[{"x3", "-", 
                 RowBox[{"P", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "+", 
              RowBox[{"P", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ",", "q"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"R", "=", 
         RowBox[{"{", 
          RowBox[{"x3", ",", "y3"}], "}"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"P", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
          RowBox[{"Q", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "\[And]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"P", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
          RowBox[{"Q", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ",", " ", 
       RowBox[{"R", "=", 
        RowBox[{"{", "O", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "R"}]}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.40982541971875*^9, {3.40982547584375*^9, 3.409825484609375*^9}, {
   3.72319059935004*^9, 3.7231906283515654`*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"aaab42f6-596c-4d43-894e-\
bda099bdd6b4"],

Cell[TextData[{
 StyleBox["This ",
  FontSize->18,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Mathematica",
  FontSize->18,
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" function was originally presented first by Tillman",
  FontSize->18,
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.7232132314147077`*^9, 3.7232133694687614`*^9}, {
   3.723214970395755*^9, 3.723215089042511*^9}, 3.7241496575132093`*^9, {
   3.724756680138851*^9, 
   3.724756700593035*^9}},ExpressionUUID->"3cf8e7b0-6663-4ba5-9ab4-\
ba32a5cb0480"],

Cell["Test 1:   Calculate  sum of two points:   (8,5) + (190, 64) ", \
"Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.46659274878125*^9, 3.466592775453125*^9}, {
   3.514299207*^9, 3.51429921040625*^9}, {3.7231879274204865`*^9, 
   3.7231879880798674`*^9}, {3.723188177554411*^9, 3.7231881809764643`*^9}, {
   3.7231882166658187`*^9, 3.723188222900521*^9}, {3.7232145444517307`*^9, 
   3.723214558171193*^9}, 3.7241496575132093`*^9},
 FontColor->RGBColor[
  0.3176470588235294, 0.17647058823529413`, 0.06666666666666667],
 Background->RGBColor[
  1., 0.792156862745098, 
   0.5843137254901961],ExpressionUUID->"68533eb4-3be5-44e9-a55e-305b8955102b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"q", "=", "281"}], ";", 
  RowBox[{"P", "=", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5"}], "}"}]}], ";", " ", 
  RowBox[{"Q", "=", 
   RowBox[{"{", 
    RowBox[{"190", ",", "64"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"EllipticSum", "[", 
  RowBox[{"q", ",", 
   RowBox[{"-", "3"}], ",", "99", ",", "P", ",", "Q"}], "]"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.466592690390625*^9, 3.466592716265625*^9}, {
   3.723188059083583*^9, 3.723188148021596*^9}, {3.7231881851329317`*^9, 
   3.7231881879924555`*^9}, {3.723190681948111*^9, 3.7231906839794397`*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"177a7c3d-09c8-4503-8d5c-\
b1effeafd6c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"55", ",", "111"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.46659271725*^9, {3.7231881320676384`*^9, 3.7231881488653884`*^9}, 
   3.723188190914446*^9, 3.723190640274041*^9, 3.723190685307638*^9, 
   3.7232129992775984`*^9, 
   3.7241496575132093`*^9},ExpressionUUID->"b943b2cd-e4d0-418a-8585-\
096f6ffb3299"],

Cell["\<\
Test 2.  Addition of Zero element:  (8,5) + O  should be (8,5)   \
\>", "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.46659274878125*^9, 3.466592798265625*^9}, {
   3.5142992343125*^9, 3.51429923659375*^9}, {3.723188227400753*^9, 
   3.7231882463392377`*^9}, {3.7231882877788935`*^9, 3.723188288185131*^9}, {
   3.723213043029913*^9, 3.72321305754629*^9}, {3.7232145637183247`*^9, 
   3.7232145943605757`*^9}, 3.7241496575132093`*^9},
 FontColor->RGBColor[
  0.3176470588235294, 0.17647058823529413`, 0.06666666666666667],
 Background->RGBColor[
  1., 0.792156862745098, 
   0.5843137254901961],ExpressionUUID->"e5c24ec0-cd48-4f04-9c3d-f3048eb38dde"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"EllipticSum", "[", 
  RowBox[{"q", ",", 
   RowBox[{"-", "3"}], ",", "99", ",", "P", ",", 
   RowBox[{"{", "O", "}"}]}], "]"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.46659273496875*^9, {3.7231882517926464`*^9, 3.7231882746375847`*^9}, {
   3.7232130081062183`*^9, 3.72321303399819*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"057eaac7-7671-4737-9eb4-\
03b7f7fe6c18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "5"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.466592735859375*^9, 3.7231882758719893`*^9, {3.723213010403181*^9, 
   3.723213036982683*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"f6163c25-6245-4924-b92f-\
f3f385723d24"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function for calculation multiple nP of point P"
}], "Subchapter",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.405165627484375*^9, 3.40516564159375*^9}, {
   3.405165718265625*^9, 3.40516572521875*^9}, {3.405166255328125*^9, 
   3.405166274015625*^9}, {3.466592259671875*^9, 3.46659226753125*^9}, {
   3.51429926565625*^9, 3.514299295484375*^9}, {3.514299792890625*^9, 
   3.51429980084375*^9}, {3.723188456225152*^9, 3.723188506571519*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"e09aba6e-88d9-4d6a-8db8-\
3700b21e33c3"],

Cell[TextData[{
 "Function is a ",
 StyleBox["modification of fast exponentiation algorithm PowerMod",
  FontColor->RGBColor[1, 0, 0]],
 " to ECC.\n",
 StyleBox["example:   800 P = 512 P+ 256 P +32P  \n=> calculation cost is 9 \
doublings +  3 additions \n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["(slow method P + P + ... + P  would cost 800 additions)",
  FontColor->GrayLevel[0]]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.515036779515625*^9, 3.51503694075*^9}, {
   3.7231152229573317`*^9, 3.723115233082859*^9}, {3.723214642472453*^9, 
   3.723214664786115*^9}, 3.7241496575132093`*^9, {3.7247567576741514`*^9, 
   3.7247568121145535`*^9}, {3.724756846819507*^9, 3.7247569049006624`*^9}, {
   3.724756936871125*^9, 3.7247569522092094`*^9}, {3.724757029760153*^9, 
   3.724757104264114*^9}, {3.724757154923031*^9, 3.7247571564856043`*^9}, {
   3.7247572022223983`*^9, 
   3.7247572921958904`*^9}},ExpressionUUID->"97a8ba15-8ced-489e-8273-\
f2b143c2ab43"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Mult", "[", 
   RowBox[{"n_", ",", "P_", ",", "q_", ",", "a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "A", ",", "B"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", "=", "n"}], ";", " ", 
     RowBox[{"A", "=", "P"}], ";", " ", 
     RowBox[{"B", "=", 
      RowBox[{"{", "O", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"x", ">", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OddQ", "[", "x", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"B", "=", 
            RowBox[{"EllipticSum", "[", 
             RowBox[{"q", ",", "a", ",", "b", ",", "A", ",", "B"}], "]"}]}], 
           ";", " ", "\[IndentingNewLine]", 
           RowBox[{"x", "=", 
            RowBox[{"x", "-", "1"}]}]}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"A", "=", 
            RowBox[{"EllipticSum", "[", 
             RowBox[{"q", ",", "a", ",", "b", ",", "A", ",", "A"}], "]"}]}], 
           ";", " ", "\[IndentingNewLine]", 
           RowBox[{"x", "=", 
            RowBox[{"x", "/", "2"}]}], ";"}]}], " ", "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"A", "=", 
      RowBox[{"EllipticSum", "[", 
       RowBox[{"q", ",", "a", ",", "b", ",", "A", ",", "B"}], "]"}]}], ";", 
     " ", "\[IndentingNewLine]", "A"}]}], "\[IndentingNewLine]", "]"}], 
  " "}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.435513852046875*^9, 3.435513853015625*^9}, 
   3.435514014671875*^9, {3.46626542346875*^9, 3.46626548184375*^9}, {
   3.466265512703125*^9, 3.466265552203125*^9}, 3.4662656001875*^9, {
   3.46626566653125*^9, 3.466265948125*^9}, {3.466266000234375*^9, 
   3.466266014671875*^9}, {3.466266063546875*^9, 3.46626607853125*^9}, {
   3.466266206171875*^9, 3.4662662086875*^9}, {3.466587736609375*^9, 
   3.466587836921875*^9}, {3.466587899734375*^9, 3.4665879020625*^9}, {
   3.46658872728125*^9, 3.466588756921875*^9}, {3.46658880796875*^9, 
   3.4665888190625*^9}, {3.466588859*^9, 3.466588861890625*^9}, {
   3.466588978046875*^9, 3.466588987703125*^9}, {3.46658908025*^9, 
   3.466589090984375*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"099ea49a-9670-4a16-8c3e-\
ccc473b28a53"],

Cell[TextData[{
 StyleBox["This ",
  FontSize->18,
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["function is author\[CloseCurlyQuote]s own.",
  FontSize->18,
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.7232132314147077`*^9, 3.7232133694687614`*^9}, {
   3.723214970395755*^9, 3.7232151166221085`*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"043460a9-51d5-47fd-a68f-\
89cfc8da9279"],

Cell["Finding a group generator ", "Subchapter",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.723118691999077*^9, 3.7231187718471413`*^9}, {
   3.7231885828567343`*^9, 3.723188586153782*^9}, {3.723190711715288*^9, 
   3.7231907118871737`*^9}, {3.7232147086633945`*^9, 3.7232147108510065`*^9}, 
   3.7241483300403385`*^9, 
   3.7241496575132093`*^9},ExpressionUUID->"005b6656-7589-4adb-b0ff-\
dfd7b7c83a92"],

Cell[BoxData[
 RowBox[{"d", "=", 
  RowBox[{"Divisors", "[", "n", "]"}], 
  StyleBox[
   RowBox[{"          ", 
    StyleBox[" ",
     FontColor->RGBColor[1, 0.5, 0.5]]}]], 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "possible", " ", "subgroup", " ", "sizes", " ", "are", " ", "divisors", 
     " ", "of", " ", "n"}], " ", "*)"}],
   FontColor->RGBColor[1, 0.5, 0.5]]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.723115465907941*^9, 3.7231154761585197`*^9}, {
   3.7231155719136662`*^9, 3.7231155728199925`*^9}, {3.7231157010300136`*^9, 
   3.723115726954718*^9}, {3.7231157661443357`*^9, 3.7231157672849865`*^9}, 
   3.7231177104929*^9, {3.7231290940076494`*^9, 3.7231291251967783`*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"190d612a-50ad-44b2-ac9f-\
93654f5528d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "97", ",", "291"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.7231154772679167`*^9, 3.723115531286461*^9, 3.723115573851263*^9, 
   3.723115735267631*^9, 3.7231157681444073`*^9, {3.723117711289781*^9, 
   3.723117737525575*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"41389188-4af7-4bf8-9101-\
6a056db0645c"],

Cell["\<\
According to Lagrange theorem, G is a generator if G, 3G and 97G  \[NotEqual] \
 O,  but  291G = O\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.7232132314147077`*^9, 3.7232133694687614`*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"927db656-461e-46c2-85b0-\
8f6053d821fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "picking", " ", "randomly", " ", "one", " ", "elements", " ", "and", " ", 
    "testing", " ", "if", " ", "it", " ", "is", " ", "a", " ", "generator"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"candidate", "=", 
     RowBox[{"{", 
      RowBox[{"135", ",", "241"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mult", "[", 
      RowBox[{
       RowBox[{"d", "[", 
        RowBox[{"[", "k", "]"}], "]"}], ",", "candidate", ",", "q", ",", 
       RowBox[{"-", "3"}], ",", "99"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.723115593242939*^9, 3.7231156130721674`*^9}, {
   3.7231156507460794`*^9, 3.723115689654398*^9}, {3.723115741471116*^9, 
   3.7231157708633404`*^9}, {3.723117726618772*^9, 3.7231177291032815`*^9}, {
   3.723117764698964*^9, 3.723117786637639*^9}, {3.723129133978488*^9, 
   3.7231291662613955`*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"5a10dafe-f61b-4080-81cb-\
2addc368fb72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"135", ",", "241"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"134", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"234", ",", "227"}], "}"}], ",", 
   RowBox[{"{", "O", "}"}]}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.7231156907482057`*^9, {3.7231157440337296`*^9, 3.72311577194149*^9}, 
   3.723117789934658*^9, 
   3.7241496575132093`*^9},ExpressionUUID->"c434d186-3ad7-455a-af03-\
74a5848ccc15"],

Cell["\<\
Thus the order of point (135, 241) is 291 => (135, 241) it is a group \
generator\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.72312918105899*^9, 3.7231292304365664`*^9}, {
   3.723188616561613*^9, 3.7231886409222555`*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"03acce82-b54a-430d-8f9c-\
e9b1ddafafd4"],

Cell["\<\
Visualizing the cyclic group {G, 2G , 3G, ..., 290G} with lines \
\>", "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.723118691999077*^9, 3.723118805458333*^9}, {
   3.7231292428590727`*^9, 3.7231292964712*^9}, {3.723213473396038*^9, 
   3.7232134802557697`*^9}, {3.723214743462079*^9, 3.723214751040598*^9}, {
   3.7241482997575026`*^9, 3.7241483054922028`*^9}, 3.7241496575132093`*^9},
 FontColor->RGBColor[
  0.3176470588235294, 0.17647058823529413`, 0.06666666666666667],
 Background->RGBColor[
  1., 0.792156862745098, 
   0.5843137254901961],ExpressionUUID->"eeaf77f8-55e1-4a82-832d-00da978e17c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"{", 
    RowBox[{"135", ",", "241"}], "}"}]}], ";", " ", 
  RowBox[{"q", "=", "281"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"gr1", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Mult", "[", 
     RowBox[{"i", ",", "G", ",", "q", ",", 
      RowBox[{"-", "3"}], ",", "99"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "291"}], "}"}]}], "]"}]}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.7231178130765333`*^9, 3.723117823639641*^9}, {
   3.723117856938279*^9, 3.723117866907604*^9}, {3.7231179246607246`*^9, 
   3.7231179514903*^9}, 3.723117998008404*^9, {3.7231180335884886`*^9, 
   3.7231180375262003`*^9}, {3.7231180828255243`*^9, 
   3.7231180834349318`*^9}, {3.7231181304218464`*^9, 3.723118130609334*^9}, {
   3.7231181621266727`*^9, 3.7231181832059507`*^9}, {3.723118355715275*^9, 
   3.7231184272660165`*^9}, {3.723118461939765*^9, 3.723118479065694*^9}, {
   3.723213483349684*^9, 3.723213487537399*^9}, 3.724056066314522*^9, {
   3.7240561405836706`*^9, 3.72405615147484*^9}, {3.724056214071602*^9, 
   3.724056214977893*^9}, {3.7240562558704767`*^9, 3.724056257261137*^9}, {
   3.7241482881944413`*^9, 3.7241482924602833`*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"ec65fe5e-6e52-4e2e-bd3d-\
cc6208897fe3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"135", ",", "241"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"92", ",", "215"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"134", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", "57"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"98", ",", "174"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"56", ",", "259"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "174"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"190", ",", "217"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"75", ",", "116"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"89", ",", "89"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"180", ",", "99"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"178", ",", "107"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"254", ",", "254"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"253", ",", "46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"93", ",", "123"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"73", ",", "67"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"130", ",", "190"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"165", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "216"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"239", ",", "130"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"149", ",", "136"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"264", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"220", ",", "61"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"88", ",", "238"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"101", ",", "90"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"257", ",", "242"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "225"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"199", ",", "166"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"91", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "255"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"224", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"66", ",", "55"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"236", ",", "232"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"106", ",", "196"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "58"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"49", ",", "108"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"203", ",", "59"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"193", ",", "63"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"67", ",", "122"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"205", ",", "58"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"179", ",", "147"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"108", ",", "225"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"159", ",", "57"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"77", ",", "251"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"197", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"129", ",", "211"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "224"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"122", ",", "130"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"57", ",", "144"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"168", ",", "241"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"259", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"119", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"227", ",", "88"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"186", ",", "79"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"184", ",", "113"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"115", ",", "177"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "95"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"175", ",", "252"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"280", ",", "246"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "277"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "234"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"182", ",", "59"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"145", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "251"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"51", ",", "33"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"201", ",", "151"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"128", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"143", ",", "230"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"141", ",", "259"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "122"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"68", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", "152"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"65", ",", "223"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"207", ",", "166"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"84", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"131", ",", "239"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"226", ",", "135"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"218", ",", "183"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"176", ",", "221"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"171", ",", "37"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"132", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"174", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"125", ",", "112"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "142"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"74", ",", "112"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"263", ",", "253"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"133", ",", "128"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44", ",", "264"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"172", ",", "37"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"223", ",", "229"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"85", ",", "212"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "229"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"173", ",", "232"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"148", ",", "154"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"234", ",", "227"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", "111"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "88"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"177", ",", "222"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"215", ",", "210"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"112", ",", "147"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"192", ",", "198"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"156", ",", "115"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "229"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"274", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"117", ",", "144"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"189", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"210", ",", "255"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"200", ",", "159"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"225", ",", "240"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "126"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", "280"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"164", ",", "265"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"256", ",", "279"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "197"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"219", ",", "37"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"82", ",", "112"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"244", ",", "74"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"191", ",", "149"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"243", ",", "97"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"217", ",", "243"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"266", ",", "215"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"251", ",", "181"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"204", ",", "66"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"153", ",", "49"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"138", ",", "72"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "162"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"154", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"70", ",", "120"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"107", ",", "144"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"151", ",", "105"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"278", ",", "272"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "237"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "88"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"212", ",", "206"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"137", ",", "245"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"271", ",", "134"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", "267"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"213", ",", "160"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"213", ",", "121"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"271", ",", "147"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "278"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"137", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"48", ",", "255"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"212", ",", "75"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "193"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"278", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"151", ",", "176"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"107", ",", "137"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"70", ",", "161"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"154", ",", "276"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "119"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "274"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"138", ",", "209"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"153", ",", "232"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"204", ",", "215"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"251", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"266", ",", "66"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"217", ",", "38"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"243", ",", "184"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"191", ",", "132"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"244", ",", "207"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "246"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"82", ",", "169"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"219", ",", "244"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "84"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"256", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"164", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "155"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"225", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"200", ",", "122"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"210", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"189", ",", "251"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"117", ",", "137"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"274", ",", "236"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "276"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"156", ",", "166"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"192", ",", "83"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"112", ",", "134"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"215", ",", "71"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"177", ",", "59"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "193"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", "170"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"234", ",", "54"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"148", ",", "127"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"173", ",", "49"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"85", ",", "69"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"223", ",", "52"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"172", ",", "244"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"133", ",", "153"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"263", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"74", ",", "169"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "139"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"125", ",", "169"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"174", ",", "265"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"132", ",", "258"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"171", ",", "244"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"176", ",", "60"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"218", ",", "98"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"226", ",", "146"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"131", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"84", ",", "259"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"207", ",", "115"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"65", ",", "58"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", "129"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"68", ",", "268"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "159"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"141", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"143", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"128", ",", "225"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"201", ",", "130"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140", ",", "240"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"51", ",", "248"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"145", ",", "280"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"182", ",", "222"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"280", ",", "35"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"175", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "186"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"115", ",", "104"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"184", ",", "168"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"186", ",", "202"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"227", ",", "193"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"119", ",", "276"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"259", ",", "241"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"168", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "280"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"57", ",", "137"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"122", ",", "151"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "57"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"129", ",", "70"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"197", ",", "240"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"77", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"159", ",", "224"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"108", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"179", ",", "134"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"205", ",", "223"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"67", ",", "159"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"193", ",", "218"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"203", ",", "222"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"49", ",", "173"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "223"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"106", ",", "85"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"236", ",", "49"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"66", ",", "226"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"224", ",", "265"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"91", ",", "275"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"199", ",", "115"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "56"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"257", ",", "39"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"101", ",", "191"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"88", ",", "43"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"220", ",", "220"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"264", ",", "257"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"149", ",", "145"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"239", ",", "151"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"39", ",", "65"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"165", ",", "266"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"130", ",", "91"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"73", ",", "214"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"93", ",", "158"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"253", ",", "235"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"254", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"178", ",", "174"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"180", ",", "182"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"89", ",", "192"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"75", ",", "165"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"190", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "107"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"56", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"98", ",", "107"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", "224"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"134", ",", "260"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"92", ",", "66"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"135", ",", "40"}], "}"}], ",", 
   RowBox[{"{", "O", "}"}]}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{3.7240561248016667`*^9, 3.7240561552718735`*^9, 
  3.724056216587309*^9, 3.724056262558261*^9, 
  3.7241496575132093`*^9},ExpressionUUID->"099f3148-39ee-4f82-b467-\
2b97d349b3cd"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"gr1", ",", " ", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "0.03", "]"}]}]}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.7231180179001036`*^9, 3.723118046354804*^9}, {
   3.7231181949565873`*^9, 3.7231182023475738`*^9}, {3.7231182346306047`*^9, 
   3.7231182595538287`*^9}, {3.723118323276022*^9, 3.723118324010436*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"be3b2901-cb16-4b6b-9286-\
1450f8e0f1b6"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.03], 
     AbsoluteThickness[1.6], 
     StyleBox[LineBox[CompressedData["
1:eJxdmElyFDEQRQUrll6wYMGi8MILB0GYIBiCURjMPBgzgzFFYwPGU3MDHYEj
1BE4Qh2lj+AjAK73MkLVmwxJJSmHnz9TfWZysLZ1PKU0fyyl//LoN2vzkWz2
B5neDnL2c5A96+ki8tUgyxPkO77bYp35pSnjk/V6/537dhiv8d2nQeY3tSzf
+I57suMPyINadsh0n++xp99gzH39KuO21qvbZP857r/DGH1ne/W+bsL6F77X
7iuM2VeeMY9dvee8Z535OfZn4lHuDbLZ5f4f7EfPnn3pFPIy3+kH9qUlzsPu
8hiJHglZ8GvhnrSAfMr8A8YfB9luM896w77yHP28D/932/V5LfFsJ/W5Ye9X
9oOr/JLvjbf33WUfcWnBb1pB7tZ6GD/PTd6/jDy8NUhwa34ErrmvB7fivNXf
4hhc9eidGOd15pENfkg3mTcPub9gb/nFuvlK3FeZT7c5n3j2nBvx0U7tA+f6
szxEZqS41r/Eb+Y58gN+nPF9jx86xuG3s5xHHNIL5CLSfCPuGfzMzD/uF//p
NfISdqBP5Kk4Yj57jv5Gdsy3+nsZqX3kVfAc+ZQ/M16v53v9tlavT/GDPNV5
vpJ8l0fKSB/90GFXxv4i3nO93qmv+T1hn/5lXtzKCz15mC4gwbM47fUj92bv
x87IZ/nKPOVecZ+u1vqmBkk+NeBaHszmG+d35JN5ox7Bf+KVe+WVZP6c5nzj
KB97Lzj7LX6RU/PtGnpgXyvfLyOpl4GPxDx5WuR5cDKzDmFfy3qm/lk3ne/Q
xzgEL5r38jN51Min8HgGp0mcXkfil0TdyvhB3BifYv6Sz9Zl4yNPZOZb/aZ/
xav4xC/iTVz31g3rD7hp0L8znvLIiUEe4h/7GOvsH/NQ3G7W47xRfy9veV7g
e7G2S32ijqCveAx78Lf2Rt3EH/JA+Guec7x31Ad5r/FoRvHKnkM8o24Rb/NM
PDToKV6CP8ynEd7MG/EYeAOv8rq4tQ6Kd3nWfJDnzRfrnfnUwGuRb55LPkZd
MG/NO+vGUq131ENw3474wvonn0QfIX7kMezRL/KV8Qk+s++C7yI+nJMe8Z18
qd7y6YhXxHf07eJgVP/l88AbfJ/xp/Ug2R9OOA9+tJ5EHyhe0dd6lLnfehX2
uN94gfN0nvN9j2C39VKcypPNqA63+Nd67Lr1Wv4WZ415PNbHvkDeE1++P6y7
E/Zbt+0zsd9+J/oV4mQ/Y/9rXti32g/1o37J+mU/Zb9jv2XfZh8hbu3Xot91
//5on3lMP2g9tV+MvnNU/+03C++teIfM1fvkOfvZdKO+J/pk66R1xPq+VX+X
scu+RTzLa+aTcYj3rfebz8sjPeljg0/J8+DdldF3+pW42QfoX98r2mkc411m
n8V5vofMZ99L5pHvqehnuE+c+h4zPuZp9IEL9Xm+96KP3Kv3yePiXr2jH6Iv
lrd8jy7hz3ivElf7OO31ves72/ewdSH6AP2+M5LT+hz7JnHrO8D4xT3Y5Xvf
uhX/B/h+8/8C+wL/TzAfyZvW95Z5RB2K/yvkGcdI/+cIXl+r9fJ/iSRv+H+K
+eH7FT6I/2Nct04QN3GVjR/2GGffSf/y4y/AlSpf
       "]],
      FontFamily->"Arial"]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{529.9999999999995, Automatic},
  Method->{},
  PlotRange->{{0, 280.}, {0, 280.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.72311804932368*^9, 3.723118089169585*^9, 3.7231181390316505`*^9, {
   3.723118175674258*^9, 3.7231182056602535`*^9}, {3.723118251240842*^9, 
   3.72311826027258*^9}, 3.7231183248229427`*^9, {3.7231183596217*^9, 
   3.7231184307505455`*^9}, 3.723118481409534*^9, 3.723213503194426*^9, 
   3.7241496575132093`*^9},ExpressionUUID->"6b33442d-019a-43c9-8b70-\
a05257d00c30"],

Cell["\<\
The line goes through all elements of G in order defined by the multiples of \
g.\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.723213422096496*^9, 3.723213460957855*^9}, {
   3.7232135101323233`*^9, 3.723213540118256*^9}, 
   3.7241496575132093`*^9},ExpressionUUID->"15bef2c7-9b7c-4490-a8bc-\
abdf17ab2fa3"]
}, Closed]],

Cell[CellGroupData[{

Cell["5. Cryptoalgorithms ECDHE  and ElGamal analogy  ", "Section",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.723118532427951*^9, 3.723118582274394*^9}, {
   3.723129349458294*^9, 3.7231293830068903`*^9}, {3.723188862855672*^9, 
   3.723188881434763*^9}, {3.724149718969493*^9, 3.724149748408534*^9}, 
   3.72414984196021*^9, 
   3.724150377331396*^9},ExpressionUUID->"d7a4b77b-e4e8-43c3-90f9-\
07cacad39255"],

Cell["First we demonstrate algorithms on our example curve ", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.7231888927634745`*^9, 3.7231889058578773`*^9}, {
   3.7232135678852897`*^9, 3.7232136053247366`*^9}, 
   3.72414984196021*^9},ExpressionUUID->"966c6372-3b5b-4e00-932e-\
0ec25f7f40c2"],

Cell[TextData[{
 StyleBox["\[OpenCurlyDoubleQuote]ECDHE Key Exchange\[CloseCurlyDoubleQuote] \
on the curve  ",
  FontWeight->"Bold"],
 StyleBox["(Diffie Hellman analogy)",
  FontSize->18,
  FontWeight->"Bold"]
}], "Subchapter",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.723118691999077*^9, 3.7231187718471413`*^9}, {
   3.7231189009947476`*^9, 3.72311890829198*^9}, {3.723129594564622*^9, 
   3.7231296019243746`*^9}, {3.724055289836506*^9, 3.724055298399418*^9}, 
   3.72414984196021*^9},ExpressionUUID->"ffd2506f-16b1-4d28-a61a-\
0fb6e41f2119"],

Cell[BoxData[Cell[GraphicsData["CompressedBitmap", "\<\
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
/9c2W7jqZY9FT9R+Mm5e+Z8Oy5LJhfcByU3eqQ==\
\>"], "Text",
  ImageSize->{657., 393.62745098039227`},ExpressionUUID->
  "378483b0-cbc1-48af-a695-3a1aca98b91d"]], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.7231892681892476`*^9, 3.723189278049099*^9}, 
   3.72414984196021*^9},ExpressionUUID->"73fb9cd6-3f0e-44d4-b379-\
40d4dde88e39"],

Cell[TextData[{
 StyleBox["1. Alice and Bob generate private keys",
  FontWeight->"Bold"],
 " \n\nAlices private key :    ka  = 135\nBobs private key:      kb =   222 \n\
\n",
 StyleBox["2.",
  FontWeight->"Bold"],
 " ",
 StyleBox["Alice and Bob send each other their public keys Ya = ka*G and Yb = \
kb*G",
  FontWeight->"Bold"]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.7231189245428953`*^9, 3.7231190059066668`*^9}, {
   3.723129393194913*^9, 3.7231294848089886`*^9}, {3.7232136342325277`*^9, 
   3.7232136370607977`*^9}, {3.7241482195815125`*^9, 3.724148232379076*^9}, 
   3.72414984196021*^9},ExpressionUUID->"3489759e-1c9f-439c-a930-\
e75ff6621d20"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"G", "=", 
    RowBox[{"{", 
     RowBox[{"135", ",", "241"}], "}"}]}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q", "=", "281"}], ";"}], " "}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.723188953829115*^9, 3.7231889954406586`*^9}, 
   3.7232136309198537`*^9, 3.7241482129405785`*^9, 
   3.72414984196021*^9},ExpressionUUID->"ec0c01dc-4c15-4ebe-b37b-\
d8e46bd3618b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ka", "=", "135"}], ";", "  ", 
  RowBox[{"kb", "=", "222"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Ya", "=", 
  RowBox[{"Mult", "[", 
   RowBox[{"ka", ",", "G", ",", "q", ",", 
    RowBox[{"-", "3"}], ",", "99"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Yb", "=", 
  RowBox[{"Mult", "[", 
   RowBox[{"kb", ",", "G", ",", "q", ",", 
    RowBox[{"-", "3"}], ",", "99"}], "]"}]}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{
  3.723118980780278*^9, {3.7231190272046924`*^9, 3.723119093020751*^9}, {
   3.723129552328071*^9, 3.723129560859768*^9}, {3.723188947016296*^9, 
   3.723188949297646*^9}, {3.723188982221221*^9, 3.723188986330841*^9}, {
   3.723213647217554*^9, 3.723213648889538*^9}, {3.7241481992992535`*^9, 
   3.7241482096279087`*^9}, 
   3.72414984196021*^9},ExpressionUUID->"eadbce39-2981-4c3b-ba84-\
676b8cafd9f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"151", ",", "105"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.7231190580188227`*^9, 3.7231190933488574`*^9}, 
   3.723188999362733*^9, 3.7232136494051533`*^9, 
   3.72414984196021*^9},ExpressionUUID->"89bf7554-9ac0-47a1-a724-\
25c9e7a3cea8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"128", ",", "225"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.7231190580188227`*^9, 3.7231190933488574`*^9}, 
   3.723188999362733*^9, 3.723213649420788*^9, 
   3.72414984196021*^9},ExpressionUUID->"490f8512-169e-4f73-807f-\
879efdaf138d"],

Cell[TextData[StyleBox["3. Both A and B calculate the symmetric key K = \
ka*kb*G",
 FontWeight->"Bold"]], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.7231189245428953`*^9, 3.7231190059066668`*^9}, {
   3.72311914158585*^9, 3.723119153180252*^9}, {3.723129490324898*^9, 
   3.7231295226234303`*^9}, {3.7231890546000166`*^9, 3.723189058772106*^9}, {
   3.7232136557961116`*^9, 3.7232136562336698`*^9}, {3.7241481788763294`*^9, 
   3.724148185517261*^9}, 
   3.72414984196021*^9},ExpressionUUID->"f726c707-c1e0-46ae-a679-\
efdb99020a02"],

Cell[BoxData[{
 RowBox[{"K", "=", 
  RowBox[{"Mult", "[", 
   RowBox[{"ka", ",", "Yb", ",", "q", ",", 
    RowBox[{"-", "3"}], ",", "99"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"K", "=", 
  RowBox[{"Mult", "[", 
   RowBox[{"kb", ",", "Ya", ",", "q", ",", 
    RowBox[{"-", "3"}], ",", "99"}], "]"}]}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.7231191709468017`*^9, 3.723119198870222*^9}, {
   3.7231295655943856`*^9, 3.723129567828877*^9}, {3.724148190705063*^9, 
   3.7241481924238834`*^9}, 
   3.72414984196021*^9},ExpressionUUID->"ecc43e27-2628-459b-9632-\
b23e61b4442b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"134", ",", "260"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.723119185338204*^9, 3.7231191997452326`*^9}, 
   3.7231890430056324`*^9, 3.7232136626714706`*^9, 
   3.72414984196021*^9},ExpressionUUID->"9c474b44-45cc-48fd-b742-\
1fbdec12f040"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"134", ",", "260"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.723119185338204*^9, 3.7231191997452326`*^9}, 
   3.7231890430056324`*^9, 3.7232136626714706`*^9, 
   3.72414984196021*^9},ExpressionUUID->"54c69045-7795-4f81-9226-\
31560210e6b5"],

Cell[TextData[StyleBox["Encryption with Elliptic Curve  (version: ElGamal \
analogy)   ",
 FontWeight->"Bold"]], "Subchapter",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.723118691999077*^9, 3.7231187718471413`*^9}, {
   3.7231189009947476`*^9, 3.72311890829198*^9}, {3.723119228246808*^9, 
   3.7231192444820256`*^9}, {3.723129617847066*^9, 3.723129654161393*^9}, {
   3.7231890803826065`*^9, 3.723189100899263*^9}, 
   3.72414984196021*^9},ExpressionUUID->"ea17fe4a-4d2c-4c1d-b14f-\
109f361139cb"],

Cell[TextData[{
 StyleBox["1. Assume that the key K = (",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", "1"], TraditionalForm]],ExpressionUUID->
  "c4990a41-d026-410a-88bd-1875ddd0c605"],
 StyleBox[",",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", "2"], TraditionalForm]],ExpressionUUID->
  "c8878d22-1805-42ff-97b1-89ce7f1608bc"],
 StyleBox[") has been agreed using key exchange presented above",
  FontWeight->"Bold"],
 " \n\n",
 StyleBox["2.  Message is encoded to pairs of integer,  for example  m = (",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "1"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"ceacf07e-faa8-4962-8a62-1c0462936c3d"],
 StyleBox[",",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["m", "2"]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"f86b02d6-f798-4804-bd48-874b1621ceb5"],
 StyleBox[") = (100, 120)",
  FontWeight->"Bold"],
 "\n\n",
 StyleBox["3.",
  FontWeight->"Bold"],
 "  ",
 StyleBox["Cipher is a \[OpenCurlyDoubleQuote]product\[CloseCurlyDoubleQuote] \
of message and key  c = (",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "1"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"dea04fc1-64c0-4188-b797-ec0acfdba313"],
 "*",
 Cell[BoxData[
  FormBox[
   SubscriptBox["K", "1"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"9bb0880a-dd0f-4ae9-a5e3-eb84f6241c89"],
 " ",
 StyleBox[",",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"  ", 
    SubscriptBox["m", "2"]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"53a348f2-fe8b-4808-8d15-06e185f3795e"],
 "*",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["K", "2"]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"2ae2d1e8-b6ad-4e25-aadb-1ff8a60e4bc1"],
 StyleBox[")  mod q\n\n",
  FontWeight->"Bold"],
 StyleBox["Comment: This product is neither scalar or vector product. This \
product is defined by  (a,b)*(c,d) = (a*c , b*d) .    In ",
  FontWeight->"Bold",
  FontColor->RGBColor[
   0.42745098039215684`, 0.027450980392156862`, 0.37254901960784315`]],
 StyleBox["Mathematica",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[
   0.42745098039215684`, 0.027450980392156862`, 0.37254901960784315`]],
 StyleBox["  operator *  performs it,  which makes the ",
  FontWeight->"Bold",
  FontColor->RGBColor[
   0.42745098039215684`, 0.027450980392156862`, 0.37254901960784315`]],
 StyleBox["Mathematica",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[
   0.42745098039215684`, 0.027450980392156862`, 0.37254901960784315`]],
 StyleBox[" code short.",
  FontWeight->"Bold",
  FontColor->RGBColor[
   0.42745098039215684`, 0.027450980392156862`, 0.37254901960784315`]]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.7231189245428953`*^9, 3.7231190059066668`*^9}, {
   3.72311914158585*^9, 3.723119153180252*^9}, {3.723119258717209*^9, 
   3.7231193359870076`*^9}, {3.7231193692544312`*^9, 
   3.7231193694419413`*^9}, {3.7231296633494005`*^9, 3.723129946629562*^9}, {
   3.7231299833189116`*^9, 3.7231299850065312`*^9}, {3.7231862110656157`*^9, 
   3.7231863833245716`*^9}, {3.7231864164825463`*^9, 3.723186471016631*^9}, {
   3.7232154311943235`*^9, 3.7232154600239487`*^9}, {3.7232155250742397`*^9, 
   3.723215533824693*^9}, 
   3.72414984196021*^9},ExpressionUUID->"0ed215a0-0c97-4ede-ba9a-\
6748c70a0d6e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "120"}], "}"}]}], ";", "  ", 
  RowBox[{"K", "=", 
   RowBox[{"{", 
    RowBox[{"134", ",", "260"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"c", "=", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"m", "*", "K"}], ",", "q"}], "]"}], "                ", 
  RowBox[{"(*", " ", 
   RowBox[{"gives", " ", "the", " ", "cipher", " ", "of", " ", "message"}], 
   " ", "*)"}]}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.7231192924377427`*^9, 3.7231192995943804`*^9}, {
   3.723119337924613*^9, 3.7231193905055485`*^9}, {3.7232136798755255`*^9, 
   3.7232137037205*^9}, 
   3.72414984196021*^9},ExpressionUUID->"41b784ef-fdf7-4048-8240-\
d60ef8dbd253"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"193", ",", "9"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.7231193536910577`*^9, 3.7231193874897556`*^9}, 
   3.723213706158105*^9, 
   3.72414984196021*^9},ExpressionUUID->"e44ac292-2957-4e84-badb-\
ce1c1e3fe6ee"],

Cell[TextData[StyleBox["Decryption ",
 FontWeight->"Bold"]], "Subchapter",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.723118691999077*^9, 3.7231187718471413`*^9}, {
   3.7231189009947476`*^9, 3.72311890829198*^9}, {3.723119228246808*^9, 
   3.7231192444820256`*^9}, {3.7231194155225415`*^9, 3.723119415866335*^9}, 
   3.72414984196021*^9},ExpressionUUID->"36397aee-3206-4632-b67b-\
0936c17e0b32"],

Cell[TextData[{
 StyleBox["1.  Recipient calculates the inverse of the key mod q  as follows. \
 \n",
  FontWeight->"Bold"],
 StyleBox["Decryption key    DK = (",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["K", "1", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],ExpressionUUID->
  "83e18cf7-af14-4169-89b2-490577289f13"],
 StyleBox[" mod q , ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["K", "2", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1],ExpressionUUID->
  "d60aea51-3015-4c34-bcec-bec709f37ef8"],
 StyleBox[" mod q)    ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.7231189245428953`*^9, 3.7231190059066668`*^9}, {
   3.72311914158585*^9, 3.723119153180252*^9}, {3.723119258717209*^9, 
   3.7231193359870076`*^9}, {3.7231193692544312`*^9, 
   3.7231193694419413`*^9}, {3.72311943453921*^9, 3.723119450961972*^9}, {
   3.7231195770312862`*^9, 3.723119582390952*^9}, {3.7231299986634493`*^9, 
   3.723130205705355*^9}, {3.723186496189784*^9, 3.7231865207067165`*^9}, 
   3.72414984196021*^9},ExpressionUUID->"3864363d-31e2-42f8-9e7a-\
83385bbb8855"],

Cell[BoxData[
 RowBox[{"DK", "=", 
  RowBox[{"PowerMod", "[", 
   RowBox[{"K", ",", 
    RowBox[{"-", "1"}], ",", "q"}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.723119455571563*^9, 3.723119479916662*^9}, {
   3.7231195604678907`*^9, 3.7231195697808957`*^9}, 
   3.72414984196021*^9},ExpressionUUID->"1a5b9ed4-c633-47f7-811c-\
fa60f065cb5e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"216", ",", "107"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{3.7231195707184095`*^9, 3.7232137102989454`*^9, 
  3.72414984196021*^9},ExpressionUUID->"9d901fe6-46ce-4ae5-90ed-322a6767df63"],

Cell[TextData[StyleBox["2.   Recipient decrypts the cipher using the \
decryption key DK",
 FontWeight->"Bold"]], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.7231189245428953`*^9, 3.7231190059066668`*^9}, {
   3.72311914158585*^9, 3.723119153180252*^9}, {3.723119258717209*^9, 
   3.7231193359870076`*^9}, {3.7231193692544312`*^9, 
   3.7231193694419413`*^9}, {3.72311943453921*^9, 3.723119450961972*^9}, {
   3.7231195770312862`*^9, 3.723119582390952*^9}, {3.7231299986634493`*^9, 
   3.723130248098157*^9}, {3.7231865483331523`*^9, 3.723186550208249*^9}, 
   3.72414984196021*^9},ExpressionUUID->"699073e9-223f-4af3-ad3c-\
86165f6db6cf"],

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{
   RowBox[{"c", "*", "DK"}], ",", "q"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.723119590406974*^9, 3.7231196008919506`*^9}, 
   3.72414984196021*^9},ExpressionUUID->"832cfbee-bed0-4295-a6fa-\
f0626c986bba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"100", ",", "120"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{3.7231196016107044`*^9, 3.7232137146741724`*^9, 
  3.72414984196021*^9},ExpressionUUID->"4b8d9063-98c2-4bc4-8d96-70fba5d49e25"],

Cell["\<\
Result is the same as the original message.

Next we do the same demonstration on a standard curve used in cryptography. \
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.723213725268508*^9, 3.7232138120542727`*^9}, 
   3.72414984196021*^9},ExpressionUUID->"649d8103-3d50-46c9-a3da-\
acd74816a9e0"]
}, Closed]],

Cell[CellGroupData[{

Cell["6. Demo with NIST\[CloseCurlyQuote]s standard curve P-192", "Section",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.724149921917407*^9, 3.724149958106797*^9}, {
   3.724150161632867*^9, 3.7241501972440653`*^9}, 
   3.7241503797065535`*^9},ExpressionUUID->"041b5bce-9f86-494e-8e40-\
4330707ab592"],

Cell[TextData[StyleBox["Requirements for curves used in cryptography",
 FontWeight->"Bold"]], "Subchapter",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.723188728567438*^9, 3.723188754396906*^9}, 
   3.724150161632867*^9},ExpressionUUID->"aa4d6013-5cb9-4b06-8958-\
0edd01d64198"],

Cell["\<\
1.  The number of points on curve n  should be of form
    n = r*s,   where r is small  ( \[LessEqual] 3)  and s is a large prime
  The field modulus q should be \[GreaterEqual] 190 bits  ( security margin)\t\
 \
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.51455407178125*^9, 3.514554274359375*^9}, {
   3.51455442640625*^9, 3.514554458328125*^9}, {3.514554543984375*^9, 
   3.5145545623125*^9}, {3.7231887578033323`*^9, 3.7231887607878623`*^9}, 
   3.724150161632867*^9},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"55f55dd2-e5b3-4f48-99ea-543639deead6"],

Cell[TextData[StyleBox["To be able to determine the order of a point on the \
curve and find group generators, one has to know the size N of the cyclic \
group and its divisors (because the order divides) N.",
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.515037072546875*^9, 3.51503718990625*^9}, {
   3.7231161444147825`*^9, 3.723116194104931*^9}, 
   3.724150161632867*^9},ExpressionUUID->"e721224c-c30f-4b04-adc4-\
51017998722e"],

Cell[TextData[{
 "It is difficult to calculate the ",
 StyleBox["number of points of a curve",
  FontColor->RGBColor[1, 0, 0]],
 ".  There is a well known result, \nknown as Hasse\.b4s inequality from \
1933: \n\t\t | N - (q+1) | \[LessEqual] 2",
 Cell[BoxData[
  FormBox[
   SqrtBox["q"], TraditionalForm]],ExpressionUUID->
  "48c52cdc-c3f2-4e60-bbc6-cea3e2730837"],
 "\n\nN = number of points of the curve,   q = modulus of the underlying \
Finite Field\t\t \n\n",
 StyleBox["NIST (National institute of Standards in USA",
  FontColor->RGBColor[1, 0, 0]],
 ") has standardized \na group of curves for ECC for cryptographic uses.  \n\
First of them is P-192, which we use in following examples. "
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.514554403515625*^9, 3.514554426125*^9}, {
   3.514554462203125*^9, 3.5145547545*^9}, {3.5150372199375*^9, 
   3.515037264671875*^9}, {3.7231159433101425`*^9, 3.723116138148816*^9}, 
   3.7231887889299507`*^9, 
   3.724150161632867*^9},ExpressionUUID->"01b3c61f-5ba4-49f1-aec2-\
dcf550eb436a"],

Cell["P-192 characteristics", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.7231162514986935`*^9, 3.7231162608897905`*^9}, 
   3.724150161632867*^9},ExpressionUUID->"0f82048f-b803-43b8-b3c3-\
68db1e5befea"],

Cell[TextData[{
 "Curve equation",
 StyleBox[" ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["y", "2"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"90d1ae13-26e0-4302-bdcb-5efba3f8c415"],
 StyleBox["= ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "3"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"2dfdabaa-e371-47a6-82be-4c4c629ddc5b"],
 StyleBox[" - 3 x + b ",
  FontWeight->"Bold"],
 "\nIn the list below G is the group generator, b = parameter of the curve, \n\
q = modulus , n = size of the cyclic group generated by G "
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.72311629471978*^9, 3.7231163739271865`*^9}, {
   3.723116461525653*^9, 3.723116473073169*^9}, {3.723116540061166*^9, 
   3.723116561062301*^9}, 
   3.724150161632867*^9},ExpressionUUID->"36f0ddd3-9eb5-4dc5-abae-\
f36d15e455a1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"{", 
    RowBox[{
    "602046282375688656758213480587526111916698976636884684818", ",", 
     "174050332293622031404857552280219410364023488927386650641"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "b", "=", "2455155546008943817740293915197451784769108058161191238065"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "q", "=", "6277101735386680763835789423207666416083908700390324961279"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "n", "=", "6277101735386680763835789423176059013767194773182842284081"}], 
  ";"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.5150374363125*^9, 3.515037436875*^9}, 
   3.724150161632867*^9},ExpressionUUID->"04d7bae4-1e96-4043-a1e8-\
be51313bd933"],

Cell[BoxData[
 RowBox[{"PrimeQ", "[", 
  "6277101735386680763835789423176059013767194773182842284081", 
  "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.7240553718560934`*^9, 3.7240553779501357`*^9}, 
   3.724150161632867*^9},ExpressionUUID->"d68ec89c-a908-4606-922e-\
36e21ede36c4"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{3.724055379075155*^9, 
  3.724150161632867*^9},ExpressionUUID->"716b8e86-83f2-4830-9f6c-\
0fcc84745e70"],

Cell[TextData[StyleBox["ECC key exchange using P-192",
 FontSize->36,
 FontColor->RGBColor[
  0.34509803921568627`, 0.18823529411764706`, 
   0.07058823529411765]]], "Subchapter",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.514299413390625*^9, 3.514299432890625*^9}, {
   3.514299645265625*^9, 3.514299659796875*^9}, {3.51455388371875*^9, 
   3.5145538846875*^9}, {3.514553970703125*^9, 3.514553978203125*^9}, {
   3.7231164929492435`*^9, 3.7231165057936897`*^9}, 
   3.724150161632867*^9},ExpressionUUID->"d3b2d226-abcb-44be-8d4e-\
89a7fe0aec1c"],

Cell[BoxData[""], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{
  3.4665923210625*^9, {3.514550337015625*^9, 3.514550345515625*^9}, {
   3.710750932642113*^9, 3.710750933742935*^9}, 3.723189252313394*^9, 
   3.724150161632867*^9},ExpressionUUID->"6e7f9930-e4ca-4eb9-b4ea-\
ee8b61c0408a"],

Cell["\<\
Alice generates a private key ka and calculates public key Ya = ka G\
\>", "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.514299446203125*^9, 3.514299501828125*^9}, 
   3.514299554578125*^9, {3.5145506386875*^9, 3.51455066275*^9}, {
   3.51455077575*^9, 3.51455078803125*^9}, {3.51477505375*^9, 
   3.51477507934375*^9}, {3.724055423702301*^9, 3.72405544757847*^9}, 
   3.724150161632867*^9},
 FontColor->RGBColor[
  0.40784313725490196`, 0.12549019607843137`, 0.01568627450980392],
 Background->RGBColor[
  1., 0.807843137254902, 
   0.615686274509804],ExpressionUUID->"672f45c8-1b7c-464f-b4d7-c35897004b14"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "ka", "=", "2818646689284967968603885680739626753757717668743685369"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Ya", "=", 
  RowBox[{"Mult", "[", 
   RowBox[{"ka", ",", "G", ",", "q", ",", 
    RowBox[{"-", "3"}], ",", "b"}], "]"}]}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.4667740935694823`*^9, 3.4667741612248664`*^9}, {
   3.466917228592846*^9, 3.4669172290771246`*^9}, 3.466917261570677*^9, {
   3.4669173904976673`*^9, 3.466917391622588*^9}, {3.4669174403066607`*^9, 
   3.466917459961527*^9}, 3.4669191158895144`*^9, {3.5142995566875*^9, 
   3.5142995590625*^9}, {3.5145507919375*^9, 3.51455081284375*^9}, 
   3.724150161632867*^9},ExpressionUUID->"43bc279e-8dd0-416f-9947-\
b28364327884"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4166887439959785442359358401626820195302130396853922747090", ",", 
   "342002490943820139356288313636684834682210773457498261724"}], 
  "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.4667741252878265`*^9, 3.466774161802984*^9}, 
   3.4669172228596087`*^9, 3.4669172627110753`*^9, 3.4669173930912347`*^9, {
   3.46691745268079*^9, 3.4669174613051825`*^9}, 3.4669179809627595`*^9, {
   3.466919117655094*^9, 3.466919145310636*^9}, 3.51455066721875*^9, 
   3.514550708125*^9, {3.5145507936875*^9, 3.51455081446875*^9}, 
   3.723116596954833*^9, 3.7231893250515785`*^9, 3.7232139079811354`*^9, 
   3.7241501616484547`*^9},ExpressionUUID->"b24583b4-7810-4996-8bc1-\
2d300f9e3c1f"],

Cell["\<\
Bob generates a private key kb and calculates public Yb = kb G\
\>", "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.514299446203125*^9, 3.51429951878125*^9}, {
   3.51455071946875*^9, 3.5145507485*^9}, 3.51455082125*^9, {
   3.51477509034375*^9, 3.514775095765625*^9}, {3.724055438796802*^9, 
   3.724055444000173*^9}, 3.7241501616484547`*^9},
 FontColor->RGBColor[
  0.40784313725490196`, 0.12549019607843137`, 0.01568627450980392],
 Background->RGBColor[
  1., 0.807843137254902, 
   0.615686274509804],ExpressionUUID->"9f386395-e764-4786-9c32-31116cabc54f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "kb", "=", "2101924874329080718071957364927874958230913619682994500"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Yb", "=", 
  RowBox[{"Mult", "[", 
   RowBox[{"kb", ",", "G", ",", "q", ",", 
    RowBox[{"-", "3"}], ",", "b"}], "]"}]}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.4667740935694823`*^9, 3.4667741612248664`*^9}, {
   3.466917228592846*^9, 3.4669172290771246`*^9}, 3.466917261570677*^9, {
   3.4669173788109903`*^9, 3.4669174659142327`*^9}, 3.466919160263378*^9, {
   3.51429956259375*^9, 3.514299566015625*^9}, {3.514550824640625*^9, 
   3.514550826640625*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"e1e3dde3-6554-4f14-bb86-\
3c285de8b07b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3197479727310441184166659954176065551017813604210849295027", ",", 
   "4546651453263495348932303783137537190292590929227544435757"}], 
  "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.4669173859667363`*^9, 3.4669174051841335`*^9}, 
   3.466917466757923*^9, 3.4669179853064814`*^9, 3.4669191622477026`*^9, 
   3.514550713921875*^9, 3.514550753328125*^9, 3.51455082978125*^9, 
   3.7231166078773003`*^9, 3.7231893418805485`*^9, 3.723213911481285*^9, 
   3.7241501616484547`*^9},ExpressionUUID->"55e92232-50db-4ff6-bf71-\
dbb7b2043033"],

Cell["\<\
Both Alice and Bob calculate the same point of the curve:  K = ka*kb*G\
\>", "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.51455092275*^9, 3.51455096196875*^9}, {
   3.514550996859375*^9, 3.514551007078125*^9}, {3.7231893523186207`*^9, 
   3.7231893547718735`*^9}, {3.724055476439228*^9, 3.7240554817519817`*^9}, 
   3.7241501616484547`*^9},
 FontColor->RGBColor[
  0.40784313725490196`, 0.12549019607843137`, 0.01568627450980392],
 Background->RGBColor[
  1., 0.807843137254902, 
   0.615686274509804],ExpressionUUID->"72677186-9a39-44b1-a3a6-2884161db436"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"K", "=", 
   RowBox[{"Mult", "[", 
    RowBox[{"kb", ",", "Ya", ",", "q", ",", 
     RowBox[{"-", "3"}], ",", "b"}], "]"}]}], "          ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Bob", "'"}], "s", " ", "calculation"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"K", "=", 
  RowBox[{"Mult", "[", 
   RowBox[{"ka", ",", "Yb", ",", "q", ",", 
    RowBox[{"-", "3"}], ",", "b"}], "]"}], "           ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Alice", "'"}], "s", " ", "calculation"}], " ", 
   "*)"}]}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.51455086025*^9, 3.514550900515625*^9}, {
   3.723213925513297*^9, 3.723213954077284*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"1e9d8c41-cbfb-4428-970b-\
67b38e14e553"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4569158537909585871329893828249154554821121379238590872510", ",", 
   "5889543201412998599750263908982414398530518138795041140383"}], 
  "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{3.514550868453125*^9, 3.514550902328125*^9, 
  3.723116624456316*^9, 3.723189346537036*^9, 3.7232139562492332`*^9, 
  3.7241501616484547`*^9},ExpressionUUID->"e11e39f1-9e96-46f8-8b39-\
7be22cbeca42"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4569158537909585871329893828249154554821121379238590872510", ",", 
   "5889543201412998599750263908982414398530518138795041140383"}], 
  "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{3.514550868453125*^9, 3.514550902328125*^9, 
  3.723116624456316*^9, 3.723189346537036*^9, 3.723213956280487*^9, 
  3.7241501616484547`*^9},ExpressionUUID->"77b02463-12fb-4a1d-ae1f-\
a45603e48ad3"],

Cell["\<\
This is a symmetric key produced by the key exchange algorithm\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.723213999235882*^9, 3.723214021299528*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"e03d3097-54fc-468a-852f-\
8ad087c78376"],

Cell["\<\
AES128-key is obtained from this key.  
Easiest way would be to take first 128 bits of the first component of K\
\>", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.514299446203125*^9, 3.51429960096875*^9}, {
   3.5145510255*^9, 3.514551070453125*^9}, {3.7231166453168554`*^9, 
   3.7231166812562947`*^9}, {3.723189368319455*^9, 3.7231894308539553`*^9}, {
   3.723214031409402*^9, 3.7232140495353713`*^9}, 3.7241501616484547`*^9},
 FontColor->RGBColor[
  0.40784313725490196`, 0.12549019607843137`, 0.01568627450980392],
 Background->RGBColor[
  1., 0.807843137254902, 
   0.615686274509804],ExpressionUUID->"aaba4beb-4b16-43f5-a7e7-1e3dfafc44fe"],

Cell[BoxData[
 RowBox[{"AESkey", "=", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{"K", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], ",", "128"}], 
   "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.51455107459375*^9, 3.514551166421875*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"4115f5b2-7405-4ff4-9680-\
e999eb067055"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
   ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
   ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
   "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
   "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
   "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
   "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{3.514551081796875*^9, 3.5145511246875*^9, 
  3.51455116828125*^9, 3.723116701241717*^9, 3.7231894505580688`*^9, 
  3.7241501616484547`*^9},ExpressionUUID->"91a34b8f-9536-427e-a077-\
e379aad60490"],

Cell["Keys are often presented in hexadecimal form", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.723213999235882*^9, 3.723214021299528*^9}, {
   3.723214079646285*^9, 3.723214110866686*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"2f83acb7-8e6f-4f72-89e2-\
62eb21c021d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BaseForm", "[", 
   RowBox[{
    RowBox[{"FromDigits", "[", 
     RowBox[{"AESkey", ",", "2"}], "]"}], ",", "16"}], "]"}], 
  "              "}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.7231894548395433`*^9, 3.723189528062134*^9}, 
   3.723214113554288*^9, 
   3.7241501616484547`*^9},ExpressionUUID->"399b6fb0-28af-4d30-a6f0-\
e15940f7826d"],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"ba583db1e7aa885b9983b447ea910820\"\>", "\<\"16\"\>"],
   247694580661613203557724873873888970784,
   Editable->False],
  BaseForm[#, 16]& ]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.723189492372748*^9, 3.723189529327795*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"cb03fbf3-9fa4-4734-a7e9-\
4d7647fe8f4a"],

Cell["ECC encryption  (Menezez Vanstone version)", "Subchapter",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.514291553890625*^9, 3.51429157896875*^9}, {
   3.514291616734375*^9, 3.51429161940625*^9}, {3.514292052484375*^9, 
   3.51429207096875*^9}, {3.514550574890625*^9, 3.514550585640625*^9}, {
   3.7232141450872145`*^9, 3.7232141494624414`*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"a8cf9d60-1105-4d99-b7e3-\
5fcc7535bf5c"],

Cell["Coding message to two component vector", "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.51455269834375*^9, 3.514552709921875*^9}, {
   3.51455350984375*^9, 3.514553518921875*^9}, {3.7240555436143045`*^9, 
   3.7240555462863226`*^9}, {3.724055596679363*^9, 3.7240556006795187`*^9}, 
   3.7241501616484547`*^9},
 FontColor->RGBColor[
  0.40784313725490196`, 0.12549019607843137`, 0.01568627450980392],
 Background->RGBColor[
  1., 0.807843137254902, 
   0.615686274509804],ExpressionUUID->"7bbb0ecc-860c-41f6-b574-955f2229ba1c"],

Cell["\<\
Assume that the message is two words:  (\[OpenCurlyDoubleQuote]ArcticSeminar\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]Rovaniemi\
\[CloseCurlyDoubleQuote])

First we transform message to ASCII and then to two large integers\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.723213999235882*^9, 3.723214021299528*^9}, {
   3.7232141806828146`*^9, 3.723214284641327*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"a09e2810-2cde-48b4-ada7-\
5281e35bd6c3"],

Cell[BoxData[{
 RowBox[{"m01", "=", 
  RowBox[{
  "ToCharacterCode", "[", "\"\<ArcticSeminar\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"m02", "=", 
  RowBox[{"ToCharacterCode", "[", "\"\<Rovaniemi\>\"", "]"}]}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.5145523654375*^9, 3.514552586140625*^9}, {
   3.723189592424856*^9, 3.723189622254533*^9}, {3.7232142211067934`*^9, 
   3.7232142239350615`*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"49ac1fdd-d2f6-4e19-9f6e-\
af8246b48460"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "65", ",", "114", ",", "99", ",", "116", ",", "105", ",", "99", ",", "83", 
   ",", "101", ",", "109", ",", "105", ",", "110", ",", "97", ",", "114"}], 
  "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{
  3.51455253540625*^9, 3.5145525890625*^9, {3.723189606519305*^9, 
   3.7231896238014565`*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"6b548ddd-48e8-49c9-95b1-\
117ef1e55567"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "82", ",", "111", ",", "118", ",", "97", ",", "110", ",", "105", ",", "101",
    ",", "109", ",", "105"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{
  3.51455253540625*^9, 3.5145525890625*^9, {3.723189606519305*^9, 
   3.7231896238014565`*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"a65882f9-cc82-45b6-bdad-\
5d37e9e925e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m1", ",", "m2"}], "}"}], "=", 
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FromDigits", "[", 
        RowBox[{"m01", ",", "256"}], "]"}], ",", 
       RowBox[{"FromDigits", "[", 
        RowBox[{"m02", ",", "256"}], "]"}]}], "}"}], ",", "q"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", 
  RowBox[{"{", 
   RowBox[{"m1", ",", "m2"}], "}"}]}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.514552599453125*^9, 3.51455267865625*^9}, {
   3.51455311353125*^9, 3.514553124984375*^9}, {3.723189759730434*^9, 
   3.72318977335614*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"78b1032f-229a-4b00-b324-\
29457dade932"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5185232087941534446075041964402", ",", "1520664728156487642473"}], 
  "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{3.7231897741373987`*^9, 
  3.7241501616484547`*^9},ExpressionUUID->"f9a8a449-c48a-4b39-b69d-\
e4a0024297eb"],

Cell[TextData[{
 "Encryption is done with operation defined as  \n",
 StyleBox["(c1, c2) =  (m1, m2)*(K1, K2) = (m1*K1, m2*K2) ",
  FontWeight->"Bold"]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.7240556180553827`*^9, 3.724055739373694*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"a309ef3b-ccce-4747-9989-\
0bbb4bdcb944"],

Cell["Alice encrypts the message ", "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.51455269834375*^9, 3.51455273878125*^9}, {
   3.51455282934375*^9, 3.514552838953125*^9}, {3.51455289878125*^9, 
   3.514552935609375*^9}, {3.7231897845754642`*^9, 3.7231897948103795`*^9}, 
   3.7241501616484547`*^9},
 FontColor->RGBColor[
  0.40784313725490196`, 0.12549019607843137`, 0.01568627450980392],
 Background->RGBColor[
  1., 0.807843137254902, 
   0.615686274509804],ExpressionUUID->"5954408b-9a97-46e6-a9d7-d4e6fb1aa4b0"],

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"K", "*", "m"}], ",", "q"}], "]"}], "          ", 
  RowBox[{"(*", " ", "ciphertext", " ", "*)"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.514552941421875*^9, 3.51455303325*^9}, {
   3.514553070734375*^9, 3.514553103140625*^9}, {3.51455325621875*^9, 
   3.514553261609375*^9}, {3.723189801029453*^9, 3.7231898110143127`*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"51601f0d-a126-4096-a053-\
9b6c47f60ef0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2461969853658513928470552774196794839821484524954445766793", ",", 
   "4922823632219955069517528447511392059330930252067710373849"}], 
  "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{3.514553138046875*^9, 3.5145532634375*^9, 
  3.723189813155052*^9, 
  3.7241501616484547`*^9},ExpressionUUID->"7feac068-8e09-4744-85bb-\
67dc0bf61af8"],

Cell["Bob calculates decryption key DK and decrypts", "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.51455269834375*^9, 3.51455273878125*^9}, {
   3.51455282934375*^9, 3.514552838953125*^9}, {3.51455289878125*^9, 
   3.514552935609375*^9}, {3.514553153703125*^9, 3.514553173671875*^9}, {
   3.514553245046875*^9, 3.514553249984375*^9}, {3.7231898211867514`*^9, 
   3.7231898298747034`*^9}, {3.724055883818098*^9, 3.724055885974466*^9}, 
   3.7241501616484547`*^9},
 FontColor->RGBColor[
  0.40784313725490196`, 0.12549019607843137`, 0.01568627450980392],
 Background->RGBColor[
  1., 0.807843137254902, 
   0.615686274509804],ExpressionUUID->"3cab001d-c94e-4f80-8e1c-31f1217e359e"],

Cell[BoxData[
 RowBox[{"DK", "=", 
  RowBox[{"PowerMod", "[", 
   RowBox[{"K", ",", 
    RowBox[{"-", "1"}], ",", "q"}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.51455318340625*^9, 3.51455323265625*^9}, {
   3.723189835296842*^9, 3.723189842734747*^9}, 3.724055776922368*^9, {
   3.724055889833996*^9, 3.7240558911153383`*^9}, 3.724056374735543*^9, 
   3.7241501616484547`*^9},ExpressionUUID->"60912127-e4ee-46e5-ad89-\
220a6e6d6f7e"],

Cell[BoxData[
 RowBox[{"Z", "=", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"DK", "*", "c"}], ",", "q"}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.514553301125*^9, 3.514553317359375*^9}, {
   3.51455335721875*^9, 3.514553368734375*^9}, {3.7231898511414347`*^9, 
   3.7231898663922267`*^9}, 3.7240557809850626`*^9, {3.7240558968812075`*^9, 
   3.7240558981000457`*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"6fb55d14-f3ec-42f2-bc68-\
edfbe0bd5269"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5185232087941534446075041964402", ",", "1520664728156487642473"}], 
  "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{3.514553319609375*^9, 3.51455337078125*^9, 
  3.7231898672828627`*^9, 
  3.7241501616484547`*^9},ExpressionUUID->"57ee4727-8382-41a8-8d2d-\
3c7970029e3f"],

Cell["Bob needs to transform the integers back to cleartext", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.723213999235882*^9, 3.723214021299528*^9}, {
   3.72321430933013*^9, 3.7232143289248996`*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"16e5ca5f-76e1-4a0b-9d9c-\
5c405f08f2dc"],

Cell[BoxData[{
 RowBox[{"FromCharacterCode", "[", 
  RowBox[{"IntegerDigits", "[", 
   RowBox[{
    RowBox[{"Z", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "256"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FromCharacterCode", "[", 
  RowBox[{"IntegerDigits", "[", 
   RowBox[{
    RowBox[{"Z", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", "256"}], "]"}], "]"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.51455334090625*^9, 3.514553344*^9}, {3.5145533749375*^9,
    3.514553462546875*^9}, {3.7231898816898966`*^9, 3.723189893393597*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"423e5e2d-68ae-4e94-bbe8-\
5db67aa5c261"],

Cell[BoxData["\<\"ArcticSeminar\"\>"], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.514553449828125*^9, 3.5145534635625*^9}, 
   3.7231898940967565`*^9, 
   3.7241501616484547`*^9},ExpressionUUID->"7daca9fc-018b-443e-8230-\
a5108a167eb3"],

Cell[BoxData["\<\"Rovaniemi\"\>"], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.514553449828125*^9, 3.5145534635625*^9}, 
   3.7231898940967565`*^9, 
   3.7241501616484547`*^9},ExpressionUUID->"140307e6-9cb2-4e7b-b78f-\
ba526b8f4d86"],

Cell[TextData[StyleBox["Digital signature algorithm ECDSA can also be \
implemented with Mathematica",
 FontColor->RGBColor[0., 0., 0.5764705882352941]]], "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.514291553890625*^9, 3.5142915609375*^9}, {
   3.514292021921875*^9, 3.514292050453125*^9}, {3.51429210709375*^9, 
   3.51429210959375*^9}, {3.72318991470724*^9, 3.7231899530998435`*^9}, {
   3.7232143417380657`*^9, 3.723214351441695*^9}, {3.7240558099083033`*^9, 
   3.724055823690198*^9}, {3.7241474478225403`*^9, 3.7241474603075542`*^9}, 
   3.7241501616484547`*^9},ExpressionUUID->"34ce65f0-2234-4d5e-b2da-\
41445bf4decb"]
}, Closed]],

Cell[CellGroupData[{

Cell["7.  The basis of security of ECC ", "Section",
 CellChangeTimes->{{3.514291553890625*^9, 3.51429157896875*^9}, {
   3.514291616734375*^9, 3.51429161940625*^9}, {3.514292052484375*^9, 
   3.51429207096875*^9}, {3.514550574890625*^9, 3.514550585640625*^9}, {
   3.7232141450872145`*^9, 3.7232141494624414`*^9}, {3.724147489590308*^9, 
   3.7241475162948036`*^9}, {3.72415006484661*^9, 3.7241501316000724`*^9}, {
   3.7241501731022005`*^9, 3.724150181352589*^9}, 3.724150382675456*^9, {
   3.724151139436454*^9, 
   3.7241511582499447`*^9}},ExpressionUUID->"96ed4e6d-b8cb-4088-a3c1-\
ecfb568d36d0"],

Cell[TextData[{
 "The hacker knows following information (from certificate and Google)\n1) \
knows the curve which is used\n2) knows the group generator point G of the \
curve\n3) knows the modulus q\n4) A skilled hacker can find the public keys \
Ya and Yb from the data stream\n\nFor cracking the encryption the hacker \
would need to solve the private key ",
 StyleBox["ka",
  FontWeight->"Bold"],
 "\nfrom equation\t\t\n\t\t\tYa = ",
 StyleBox["ka",
  FontWeight->"Bold"],
 "*G\n\nHowever this is one of the mathematically \[OpenCurlyDoubleQuote]hard \
problems\[CloseCurlyDoubleQuote].  It is called\n",
 StyleBox["ECDLP  :  Elliptic Curve Discrete Logarithm Problem.\n\n",
  FontWeight->"Bold"],
 "For curves used in TLS 1.2  the time which the hacker would need to crack \n\
the private key from the public key is probably some tens or hundreds of \
years.  "
}], "Text",
 CellChangeTimes->{{3.7240556180553827`*^9, 3.724055739373694*^9}, {
  3.724147534233227*^9, 3.724148123264102*^9}, {3.724151085449299*^9, 
  3.7241510982312083`*^9}},ExpressionUUID->"61dc6a6f-f855-40fa-bd06-\
60d8386218b5"]
}, Closed]]
}, Open  ]]
},
ScreenStyleEnvironment->"Presentation",
WindowToolbars->"EditBar",
WindowSize->{1128, 661},
WindowMargins->{{10, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 360, 9, 123, "Text",ExpressionUUID->"f8b88c0b-85e1-44e4-b27b-3ce5985429f4"],
Cell[CellGroupData[{
Cell[930, 33, 779, 18, 100, "Title",ExpressionUUID->"42e264aa-9181-44ed-985d-2bc54b87c3c1",
 CellID->201886283],
Cell[CellGroupData[{
Cell[1734, 55, 462, 7, 127, "Section",ExpressionUUID->"0f484225-e948-42b7-a6c7-357f3370b37a",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2199, 64, 741, 20, 195, "Text",ExpressionUUID->"28eed01b-6e50-405c-b538-b23f3c7c6995",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2943, 86, 532, 9, 82, "Subsection",ExpressionUUID->"6f01a783-d5a1-4a3b-b49d-ce863fbbdc2a",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[3478, 97, 4950, 87, 331, "Text",ExpressionUUID->"2ede3199-7546-4827-ad0d-8a8afd722aab",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[8431, 186, 585, 13, 195, "Text",ExpressionUUID->"35799c22-323e-401b-9e7b-8595423fab15",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[9019, 201, 681, 11, 82, "Subsection",ExpressionUUID->"91d99a90-605c-4c05-ba6d-bcc5a571ca0b",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[9703, 214, 669, 11, 87, "Text",ExpressionUUID->"d85df427-2e9d-49ed-b56b-2e3677653e17",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[10375, 227, 18520, 309, 463, "Text",ExpressionUUID->"a952f2f8-5838-4dd0-80a9-b75844cccfe2",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[28898, 538, 678, 10, 97, "Subsection",ExpressionUUID->"db102dc3-33b8-4ee6-b092-a819e274e24f",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[29613, 553, 538, 8, 80, "Section",ExpressionUUID->"ab319e77-ad37-4f37-9efe-a1cec53c6efc",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[30154, 563, 333, 8, 49, "Text",ExpressionUUID->"8026747b-0de5-40c1-89da-58fbd74b156e",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[30490, 573, 450, 9, 85, "Subsection",ExpressionUUID->"c1ad1086-63b0-42d5-8bc9-aeb6f94f9ee1",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[30943, 584, 1877, 52, 276, "Text",ExpressionUUID->"de9c2585-7ac9-4e76-8f91-bbebef74cc33",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[32823, 638, 549, 10, 85, "Subsection",ExpressionUUID->"6a15c21f-e87a-4c70-8811-afcee21360ee",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[33375, 650, 418, 9, 47, "Text",ExpressionUUID->"cd51fb53-845f-4a67-940b-40204a529267",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[33796, 661, 695, 12, 85, "Subsection",ExpressionUUID->"22f8fd36-e58a-4147-b46d-33ac85cc2177",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[34494, 675, 737, 16, 111, "Text",ExpressionUUID->"69393ba8-0b9e-4762-b898-71c3a8df40e7",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[35234, 693, 506, 10, 85, "Subsection",ExpressionUUID->"45c6accd-1355-4caf-b715-b92fd4991bc5",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[35743, 705, 582, 14, 49, "Text",ExpressionUUID->"68f51312-fa1b-4e93-a1f9-ca5d388669f7",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[36328, 721, 618, 11, 85, "Subsection",ExpressionUUID->"01ff0a76-7b51-42f4-98ba-a982c65b3e9c",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[36949, 734, 684, 14, 111, "Text",ExpressionUUID->"0b1d460f-02b0-4497-a895-a7de8c70ad06",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[37636, 750, 507, 9, 85, "Subsection",ExpressionUUID->"8569c129-1a59-46d5-8e37-d3ab73a97746",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[38146, 761, 1722, 44, 206, "Text",ExpressionUUID->"98288355-8318-497d-9459-ac277fa74256",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[39871, 807, 428, 9, 68, "Subsubsection",ExpressionUUID->"3866f8c8-8d4a-43de-ad70-ee6c12c39f2d",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[40302, 818, 629, 16, 145, "Text",ExpressionUUID->"11bafe81-7eff-4533-95e9-e069d7ed5a5d",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}]
}, Closed]],
Cell[CellGroupData[{
Cell[40968, 839, 444, 7, 80, "Section",ExpressionUUID->"c399b633-edc0-4aea-9f20-06a8a01ff2ef",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[41415, 848, 553, 10, 79, "Text",ExpressionUUID->"47448149-43fd-46a2-9ff0-7aa9f82164d6",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[41971, 860, 511, 9, 85, "Subsection",ExpressionUUID->"d1204d5b-b8e6-4cd9-8f88-ba4d9449fe9a",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[42485, 871, 1072, 29, 177, "Text",ExpressionUUID->"460ae34b-179c-42b3-a7f3-cbcbe11031d4",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[43560, 902, 443, 8, 68, "Subsubsection",ExpressionUUID->"4345fbe1-40d7-4b04-a5b1-7f9988bdd911",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[44006, 912, 332, 7, 47, "Text",ExpressionUUID->"438e65d5-3d3a-49d4-bf2b-c11bcc4f7b23",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[44341, 921, 744, 20, 49, "Text",ExpressionUUID->"b80e6c85-7063-433d-87b7-5250a0d3e8a8",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[45088, 943, 560, 11, 68, "Subsubsection",ExpressionUUID->"8783d168-5bb5-4cb1-9303-ef448b54ed80",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[45651, 956, 995, 27, 100, "Input",ExpressionUUID->"514ced7a-0f91-440e-84d0-8accef3a8c71",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[46649, 985, 1883, 38, 506, "Output",ExpressionUUID->"bcdfbca7-0bb1-49ed-a954-63e90820cc12",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[48535, 1025, 471, 9, 79, "Text",ExpressionUUID->"5fa1f2a0-9f15-4598-87ea-cdc1c2edae1f",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[49009, 1036, 9514, 166, 226, "Text",ExpressionUUID->"c41d3e32-884e-400b-b090-64dff1b2de91",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[58526, 1204, 322, 5, 73, "Subchapter",ExpressionUUID->"3c41716d-53d7-4c8b-bc85-4b85e3e895a6",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[58851, 1211, 73134, 1205, 550, "Text",ExpressionUUID->"49530945-4b28-4146-85f3-c4909ba11bed",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[131988, 2418, 487, 8, 85, "Subsection",ExpressionUUID->"90600b1f-3881-4f8c-a75c-4c86e5fa063c",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[132478, 2428, 81954, 1349, 456, "Text",ExpressionUUID->"990ff6be-7f18-4ea2-aa5d-85088d4e86ba",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[214435, 3779, 515, 12, 81, "Text",ExpressionUUID->"913db00e-f78c-43cb-838f-c80321832bc1",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[214987, 3796, 616, 13, 80, "Section",ExpressionUUID->"d95d3257-f50b-495d-8a48-f19393d206c7",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[215606, 3811, 764, 16, 84, "Subsection",ExpressionUUID->"92f323ac-e616-455b-9d28-789242161798",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[216373, 3829, 638, 12, 87, "Text",ExpressionUUID->"44b8face-6c0a-48e1-9b53-639b15b888fe",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[217014, 3843, 829, 23, 103, "Text",ExpressionUUID->"ff5040d7-f282-4b5f-986c-fb5b5d0563d3",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[217846, 3868, 773, 21, 101, "Chapter",ExpressionUUID->"36553e7f-6650-4725-b45b-04faa60ab81e",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[218622, 3891, 545, 9, 65, "Subsubsection",ExpressionUUID->"8d7b5d38-c6ae-4a8a-a4be-cf66a5495149",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[219170, 3902, 1498, 41, 213, "Input",ExpressionUUID->"d049071c-3afc-4e4c-bb76-45301f21ca1b",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[220671, 3945, 18344, 587, 1667, "Output",ExpressionUUID->"3a6a6c28-c55f-45bb-9e6e-afec8f065ded",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[239018, 4534, 511, 9, 65, "Subsubsection",ExpressionUUID->"04bb435c-be7a-4e7f-8ce0-5f5ab371e923",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[239532, 4545, 311, 7, 56, "Input",ExpressionUUID->"9284cd39-f1a5-48f6-a190-d6ad7a883df0",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[239846, 4554, 473, 8, 65, "Subsubsection",ExpressionUUID->"341dac4e-1bc6-4e71-a70b-e2b1db240936",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[240322, 4564, 461, 9, 92, "Input",ExpressionUUID->"095f900d-91fb-4b2a-a6bc-8a2695a145db",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[240786, 4575, 344, 6, 56, "Output",ExpressionUUID->"49748f7e-a1ba-4a4e-900c-7438e30095b0",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[241133, 4583, 410, 8, 56, "Output",ExpressionUUID->"c6126a13-4178-4c7a-bccd-a1c78c20b8f7",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[241546, 4593, 473, 8, 65, "Subsubsection",ExpressionUUID->"10cf9654-0237-4e7e-b438-ce69edc40db2",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[242022, 4603, 421, 9, 56, "Input",ExpressionUUID->"8d753e7f-b8cc-437e-b188-697b6d52dfe1",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[242446, 4614, 2538, 56, 395, "Output",ExpressionUUID->"810867a1-58f3-40c7-b168-05db4a734024",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[244987, 4672, 739, 15, 68, "Subchapter",ExpressionUUID->"105b880d-abe2-4da9-975a-7c29f35dcb1f",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[245729, 4689, 966, 20, 303, "Text",ExpressionUUID->"c8fa9561-f554-446e-8810-4d7a242f1ebc",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[246698, 4711, 5347, 143, 660, "Input",ExpressionUUID->"aaab42f6-596c-4d43-894e-bda099bdd6b4",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[252048, 4856, 613, 17, 43, "Text",ExpressionUUID->"3cf8e7b0-6663-4ba5-9ab4-ba32a5cb0480",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[252664, 4875, 694, 12, 65, "Subsubsection",ExpressionUUID->"68533eb4-3be5-44e9-a55e-305b8955102b",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[253361, 4889, 737, 17, 92, "Input",ExpressionUUID->"177a7c3d-09c8-4503-8d5c-b1effeafd6c5",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[254101, 4908, 403, 9, 56, "Output",ExpressionUUID->"b943b2cd-e4d0-418a-8585-096f6ffb3299",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[254507, 4919, 706, 13, 65, "Subsubsection",ExpressionUUID->"e5c24ec0-cd48-4f04-9c3d-f3048eb38dde",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[255216, 4934, 563, 14, 92, "Input",ExpressionUUID->"057eaac7-7671-4737-9eb4-03b7f7fe6c18",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[255782, 4950, 330, 8, 56, "Output",ExpressionUUID->"f6163c25-6245-4924-b92f-f3f385723d24",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[256115, 4960, 625, 12, 68, "Subchapter",ExpressionUUID->"e09aba6e-88d9-4d6a-8db8-3700b21e33c3",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[256743, 4974, 1007, 20, 159, "Text",ExpressionUUID->"97a8ba15-8ced-489e-8273-f2b143c2ab43",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[257753, 4996, 2490, 54, 477, "Input",ExpressionUUID->"099ea49a-9670-4a16-8c3e-ccc473b28a53",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[260246, 5052, 482, 13, 43, "Text",ExpressionUUID->"043460a9-51d5-47fd-a68f-89cfc8da9279",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[260731, 5067, 436, 7, 68, "Subchapter",ExpressionUUID->"005b6656-7589-4adb-b0ff-dfd7b7c83a92",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[261170, 5076, 825, 19, 56, "Input",ExpressionUUID->"190d612a-50ad-44b2-ac9f-93654f5528d8",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[261998, 5097, 425, 9, 56, "Output",ExpressionUUID->"41389188-4af7-4bf8-9101-6a056db0645c",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[262426, 5108, 330, 7, 51, "Text",ExpressionUUID->"927db656-461e-46c2-85b0-8f6053d821fb",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[262759, 5117, 1186, 28, 127, "Input",ExpressionUUID->"5a10dafe-f61b-4080-81cb-2addc368fb72",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[263948, 5147, 533, 15, 56, "Output",ExpressionUUID->"c434d186-3ad7-455a-af03-74a5848ccc15",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[264484, 5164, 362, 8, 51, "Text",ExpressionUUID->"03acce82-b54a-430d-8f9c-e9b1ddafafd4",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[264849, 5174, 658, 12, 65, "Subsubsection",ExpressionUUID->"eeaf77f8-55e1-4a82-832d-00da978e17c9",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[265510, 5188, 1356, 27, 92, "Input",ExpressionUUID->"ec65fe5e-6e52-4e2e-bd3d-cc6208897fe3",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[266869, 5217, 18376, 588, 1702, "Output",ExpressionUUID->"099f3148-39ee-4f82-b467-2b97d349b3cd",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[285248, 5807, 583, 11, 56, "Input",ExpressionUUID->"be3b2901-cb16-4b6b-9286-1450f8e0f1b6",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[285834, 5820, 3002, 63, 360, "Output",ExpressionUUID->"6b33442d-019a-43c9-8b70-a05257d00c30",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[288839, 5885, 361, 8, 51, "Text",ExpressionUUID->"15bef2c7-9b7c-4490-a8bc-abdf17ab2fa3",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}]
}, Closed]],
Cell[CellGroupData[{
Cell[289237, 5898, 442, 7, 80, "Section",ExpressionUUID->"d7a4b77b-e4e8-43c3-90f9-07cacad39255",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[289682, 5907, 328, 5, 51, "Text",ExpressionUUID->"966c6372-3b5b-4e00-932e-0ec25f7f40c2",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[290013, 5914, 580, 13, 68, "Subchapter",ExpressionUUID->"ffd2506f-16b1-4d28-a61a-0fb6e41f2119",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[290596, 5929, 5182, 86, 421, "Text",ExpressionUUID->"73fb9cd6-3f0e-44d4-b379-40d4dde88e39",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[295781, 6017, 700, 17, 231, "Text",ExpressionUUID->"3489759e-1c9f-439c-a930-e75ff6621d20",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[296484, 6036, 491, 14, 92, "Input",ExpressionUUID->"ec0c01dc-4c15-4ebe-b37b-d8e46bd3618b",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[296978, 6052, 908, 20, 127, "Input",ExpressionUUID->"eadbce39-2981-4c3b-ba84-676b8cafd9f8",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[297889, 6074, 332, 7, 56, "Output",ExpressionUUID->"89bf7554-9ac0-47a1-a724-25c9e7a3cea8",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[298224, 6083, 330, 7, 56, "Output",ExpressionUUID->"490f8512-169e-4f73-807f-879efdaf138d",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[298557, 6092, 574, 10, 51, "Text",ExpressionUUID->"f726c707-c1e0-46ae-a679-efdb99020a02",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[299134, 6104, 624, 14, 92, "Input",ExpressionUUID->"ecc43e27-2628-459b-9632-b23e61b4442b",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[299761, 6120, 332, 7, 56, "Output",ExpressionUUID->"9c474b44-45cc-48fd-b742-1fbdec12f040",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[300096, 6129, 332, 7, 56, "Output",ExpressionUUID->"54c69045-7795-4f81-9226-31560210e6b5",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[300431, 6138, 530, 9, 68, "Subchapter",ExpressionUUID->"ea17fe4a-4d2c-4c1d-b14f-109f361139cb",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[300964, 6149, 3503, 97, 339, "Text",ExpressionUUID->"0ed215a0-0c97-4ede-ba9a-6748c70a0d6e",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[304470, 6248, 786, 20, 92, "Input",ExpressionUUID->"41b784ef-fdf7-4048-8240-d60ef8dbd253",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[305259, 6270, 306, 7, 56, "Output",ExpressionUUID->"e44ac292-2957-4e84-badb-ce1c1e3fe6ee",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[305568, 6279, 428, 7, 68, "Subchapter",ExpressionUUID->"36397aee-3206-4632-b67b-0936c17e0b32",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[305999, 6288, 1373, 36, 87, "Text",ExpressionUUID->"3864363d-31e2-42f8-9e7a-83385bbb8855",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[307375, 6326, 394, 9, 56, "Input",ExpressionUUID->"1a5b9ed4-c633-47f7-811c-fa60f065cb5e",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[307772, 6337, 277, 5, 56, "Output",ExpressionUUID->"9d901fe6-46ce-4ae5-90ed-322a6767df63",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[308052, 6344, 678, 11, 51, "Text",ExpressionUUID->"699073e9-223f-4af3-ad3c-86165f6db6cf",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[308733, 6357, 307, 7, 56, "Input",ExpressionUUID->"832cfbee-bed0-4295-a6fa-f0626c986bba",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[309043, 6366, 277, 5, 56, "Output",ExpressionUUID->"4b8d9063-98c2-4bc4-8d96-70fba5d49e25",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[309323, 6373, 348, 8, 123, "Text",ExpressionUUID->"649d8103-3d50-46c9-a3da-acd74816a9e0",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}]
}, Closed]],
Cell[CellGroupData[{
Cell[309708, 6386, 332, 5, 80, "Section",ExpressionUUID->"041b5bce-9f86-494e-8e40-4330707ab592",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[310043, 6393, 309, 5, 68, "Subchapter",ExpressionUUID->"aa4d6013-5cb9-4b06-8958-0edd01d64198",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[310355, 6400, 625, 12, 139, "Text",ExpressionUUID->"55f55dd2-e5b3-4f48-99ea-543639deead6",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[310983, 6414, 503, 8, 87, "Text",ExpressionUUID->"e721224c-c30f-4b04-adc4-51017998722e",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[311489, 6424, 1077, 23, 342, "Text",ExpressionUUID->"01b3c61f-5ba4-49f1-aec2-dcf550eb436a",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[312569, 6449, 249, 4, 66, "Subsection",ExpressionUUID->"0f82048f-b803-43b8-b3c3-68db1e5befea",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[312821, 6455, 918, 24, 123, "Text",ExpressionUUID->"36f0ddd3-9eb5-4dc5-abae-f36d15e455a1",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[313742, 6481, 834, 23, 197, "Input",ExpressionUUID->"04d7bae4-1e96-4043-a1e8-be51313bd933",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[314579, 6506, 328, 7, 56, "Input",ExpressionUUID->"d68ec89c-a908-4606-922e-36e21ede36c4",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[314910, 6515, 208, 4, 56, "Output",ExpressionUUID->"716b8e86-83f2-4830-9f6c-0fcc84745e70",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[315121, 6521, 578, 11, 73, "Subchapter",ExpressionUUID->"d3b2d226-abcb-44be-8d4e-89a7fe0aec1c",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[315702, 6534, 322, 6, 48, "Text",ExpressionUUID->"6e7f9930-e4ca-4eb9-b4ea-ee8b61c0408a",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[316027, 6542, 664, 13, 65, "Subsubsection",ExpressionUUID->"672f45c8-1b7c-464f-b4d7-c35897004b14",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[316694, 6557, 784, 16, 92, "Input",ExpressionUUID->"43bc279e-8dd0-416f-9947-b28364327884",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[317481, 6575, 764, 14, 92, "Output",ExpressionUUID->"b24583b4-7810-4996-8bc1-2d300f9e3c1f",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[318248, 6591, 615, 12, 65, "Subsubsection",ExpressionUUID->"9f386395-e764-4786-9c32-31116cabc54f",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[318866, 6605, 744, 16, 92, "Input",ExpressionUUID->"e1e3dde3-6554-4f14-bb86-3c285de8b07b",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[319613, 6623, 622, 12, 92, "Output",ExpressionUUID->"55e92232-50db-4ff6-bf71-dbb7b2043033",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[320238, 6637, 614, 12, 65, "Subsubsection",ExpressionUUID->"72677186-9a39-44b1-a3a6-2884161db436",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[320855, 6651, 822, 22, 92, "Input",ExpressionUUID->"1e9d8c41-cbfb-4428-970b-67b38e14e553",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[321680, 6675, 469, 10, 92, "Output",ExpressionUUID->"e11e39f1-9e96-46f8-8b39-7be22cbeca42",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[322152, 6687, 467, 10, 90, "Output",ExpressionUUID->"77b02463-12fb-4a1d-ae1f-a45603e48ad3",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[322622, 6699, 290, 6, 47, "Text",ExpressionUUID->"e03d3097-54fc-468a-852f-8ad087c78376",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[322915, 6707, 699, 13, 118, "Subsection",ExpressionUUID->"aaba4beb-4b16-43f5-a7e7-1e3dfafc44fe",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[323617, 6722, 446, 12, 55, "Input",ExpressionUUID->"4115f5b2-7405-4ff4-9680-e999eb067055",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[324066, 6736, 1673, 25, 192, "Output",ExpressionUUID->"91a34b8f-9536-427e-a077-e379aad60490",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[325742, 6763, 314, 5, 47, "Text",ExpressionUUID->"2f83acb7-8e6f-4f72-89e2-62eb21c021d5",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[326059, 6770, 422, 11, 55, "Input",ExpressionUUID->"399b6fb0-28af-4d30-a6f0-e15940f7826d",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[326484, 6783, 420, 10, 55, "Output",ExpressionUUID->"cb03fbf3-9fa4-4734-a7e9-4d7647fe8f4a",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[326907, 6795, 465, 7, 73, "Subchapter",ExpressionUUID->"a8cf9d60-1105-4d99-b7e3-5fcc7535bf5c",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[327375, 6804, 577, 10, 68, "Subsubsection",ExpressionUUID->"7bbb0ecc-860c-41f6-b574-955f2229ba1c",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[327955, 6816, 511, 11, 111, "Text",ExpressionUUID->"a09e2810-2cde-48b4-ada7-5281e35bd6c3",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[328469, 6829, 538, 12, 90, "Input",ExpressionUUID->"49ac1fdd-d2f6-4e19-9f6e-af8246b48460",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[329010, 6843, 468, 11, 55, "Output",ExpressionUUID->"6b548ddd-48e8-49c9-95b1-117ef1e55567",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[329481, 6856, 420, 10, 55, "Output",ExpressionUUID->"a65882f9-cc82-45b6-bdad-5d37e9e925e0",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[329904, 6868, 782, 22, 90, "Input",ExpressionUUID->"78b1032f-229a-4b00-b324-29457dade932",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[330689, 6892, 308, 7, 55, "Output",ExpressionUUID->"f9a8a449-c48a-4b39-b69d-e4a0024297eb",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[331000, 6901, 369, 8, 81, "Text",ExpressionUUID->"a309ef3b-ccce-4747-9989-0bbb4bdcb944",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[331372, 6911, 562, 10, 65, "Subsubsection",ExpressionUUID->"5954408b-9a97-46e6-a9d7-d4e6fb1aa4b0",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[331937, 6923, 538, 11, 56, "Input",ExpressionUUID->"51601f0d-a126-4096-a053-9b6c47f60ef0",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[332478, 6936, 421, 10, 92, "Output",ExpressionUUID->"7feac068-8e09-4744-85bb-67dc0bf61af8",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[332902, 6948, 726, 12, 65, "Subsubsection",ExpressionUUID->"3cab001d-c94e-4f80-8e1c-31f1217e359e",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[333631, 6962, 487, 10, 56, "Input",ExpressionUUID->"60912127-e4ee-46e5-ad89-220a6e6d6f7e",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[334121, 6974, 511, 11, 56, "Input",ExpressionUUID->"6fb55d14-f3ec-42f2-bc68-edfbe0bd5269",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[334635, 6987, 354, 8, 56, "Output",ExpressionUUID->"57ee4727-8382-41a8-8d2d-3c7970029e3f",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[334992, 6997, 324, 5, 51, "Text",ExpressionUUID->"16e5ca5f-76e1-4a0b-9d9c-5c405f08f2dc",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[335319, 7004, 683, 16, 92, "Input",ExpressionUUID->"423e5e2d-68ae-4e94-bbe8-5db67aa5c261",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[336005, 7022, 278, 5, 56, "Output",ExpressionUUID->"7daca9fc-018b-443e-8230-a5108a167eb3",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[336286, 7029, 274, 5, 56, "Output",ExpressionUUID->"140307e6-9cb2-4e7b-b78f-ba526b8f4d86",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[336563, 7036, 669, 10, 66, "Subsection",ExpressionUUID->"34ce65f0-2234-4d5e-b2da-41445bf4decb",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}]
}, Closed]],
Cell[CellGroupData[{
Cell[337269, 7051, 601, 9, 80, "Section",ExpressionUUID->"96ed4e6d-b8cb-4088-a3c1-ecfb568d36d0"],
Cell[337873, 7062, 1103, 22, 555, "Text",ExpressionUUID->"61dc6a6f-f855-40fa-bd06-60d8386218b5"]
}, Closed]]
}, Open  ]]
}
]
*)

